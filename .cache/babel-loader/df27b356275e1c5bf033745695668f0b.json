{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\CVBoard.js\";\nimport React, { Component } from \"react\";\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport requireAuth from \"../hocs/requireAuth\"; //import { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\n\nimport jwt_decode from \"jwt-decode\";\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\nimport CVBacklog from \"./CVBacklog\";\n\nclass CVBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      fullName: \"\",\n      candidateEmail: \"\",\n      profileIdentifier: \"\",\n      token: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getProfileByLink(id, this.props.history); //this.props.getProfileBacklog(\"TETR\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile = nextProps.profile,\n          id = _nextProps$profile.id,\n          fullName = _nextProps$profile.fullName,\n          candidateEmail = _nextProps$profile.candidateEmail,\n          profileIdentifier = _nextProps$profile.profileIdentifier,\n          token = _nextProps$profile.token;\n    const jwtToken = localStorage.jwtToken; // Only Take Care About Candidate Toke If doenst exist Current User\n\n    if (typeof jwtToken === \"undefined\" && typeof token != \"undefined\") {\n      // set our token in header ***\n      setJWTTokenCandidate(token); // store the token in the localStorage\n\n      localStorage.setItem(\"jwtTokenCandidate\", token); // decode token on React\n\n      const decoded_jwtToken = jwt_decode(token);\n      console.log(\"Expire Remaining:\", decoded_jwtToken.exp - Date.now() / 1000);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded_jwtToken.exp < currentTime) {\n        window.location.href = \"/\";\n      }\n    }\n\n    this.setState({\n      id,\n      fullName,\n      candidateEmail,\n      profileIdentifier,\n      token\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProfile = {\n      id: this.state.id,\n      fullName: this.state.fullName,\n      candidateEmail: this.state.candidateEmail\n    };\n    console.log(update);\n    this.props.updateCV(updateProfile, this.props.history);\n  }\n\n  render() {\n    const errors = this.state.errors;\n    const id = this.props.match.params.id; //const { profile_tasks } = this.props.profileBacklog;\n\n    const profile_tasks = [];\n    let BoardContent;\n\n    const boardAlgorithm = (errors, profile_tasks) => {\n      if (profile_tasks.length < 1) {\n        //PROJECT IDENTIFIER CHECK\n        if (errors.projectNotFound) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, errors.projectNotFound);\n        } else if (errors.projectIdentifier) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, errors.projectIdentifier);\n        } else {\n          return React.createElement(\"div\", {\n            className: \"alert alert-info text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \"No Project Tasks on this board\");\n        }\n      } else {\n        return React.createElement(CVBacklog, {\n          profile_tasks_prop: profile_tasks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        });\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, profile_tasks);\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Back to Profiles\"), React.createElement(\"h5\", {\n      className: \"display-1 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Edit CV form\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Session expire in 2 days\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.fullName\n      }),\n      placeholder: \"Full Name\",\n      name: \"fullName\",\n      onChange: this.onChange,\n      value: this.state.fullName,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), errors.fullName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, errors.fullName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-lg\",\n      name: \"technoArea\",\n      value: this.state.technoArea,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Technologia Area\"), React.createElement(\"option\", {\n      value: \"Software\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Software\"), React.createElement(\"option\", {\n      value: \"Engineer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Engineer\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), \"Experiences:\", React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      placeholder: \"Summary of profile\",\n      name: \"description\",\n      value: this.state.summary,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProjectTask/\".concat(id),\n      className: \"btn btn-primary mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \" Add Skills\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), BoardContent), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.totalYear\n      }),\n      placeholder: \"Total year of experience\",\n      name: \"totalYear\",\n      value: this.state.totalYear // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), errors.totalYear && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, errors.totalYear)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.projectName\n      }),\n      placeholder: \"Project Name\",\n      name: \"projectName\",\n      value: this.state.projectName // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), errors.projectName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, errors.projectName)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Start in\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control form-control-lg\",\n      name: \"start_date\",\n      value: this.state.start_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"End in\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control form-control-lg\",\n      name: \"end_date\",\n      value: this.state.end_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.description\n      }),\n      placeholder: \"Project Description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), errors.description && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, errors.description)), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nCVBoard.propTypes = {\n  getProfileByLink: PropTypes.func.isRequired,\n  updateCV: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  getProfileBacklog: PropTypes.func.isRequired,\n  profileBacklog: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  getProfileByLink: state.getProfileByLink,\n  getProfileBacklog: state.getProfileBacklog,\n  profileBacklog: state.profileBacklog,\n  profile: state.profile.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByLink,\n  updateCV,\n  getProfileBacklog\n})(requireAuth(CVBoard));","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\CVBoard.js"],"names":["React","Component","getProfileByLink","updateCV","PropTypes","connect","classnames","Link","requireAuth","jwt_decode","getProfileBacklog","CVBacklog","CVBoard","constructor","state","id","fullName","candidateEmail","profileIdentifier","token","errors","onChange","bind","onSubmit","componentDidMount","props","match","params","history","componentWillReceiveProps","nextProps","setState","profile","jwtToken","localStorage","setJWTTokenCandidate","setItem","decoded_jwtToken","console","log","exp","Date","now","currentTime","window","location","href","e","target","name","value","preventDefault","updateProfile","update","render","profile_tasks","BoardContent","boardAlgorithm","length","projectNotFound","projectIdentifier","technoArea","summary","totalYear","projectName","start_date","end_date","description","propTypes","func","isRequired","object","profileBacklog","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\n//import { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\r\nimport CVBacklog from \"./CVBacklog\";\r\n\r\nclass CVBoard extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      fullName: \"\",\r\n      candidateEmail: \"\",\r\n      profileIdentifier: \"\",\r\n      token: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    this.props.getProfileByLink(id, this.props.history);\r\n\r\n    //this.props.getProfileBacklog(\"TETR\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier,\r\n      token\r\n    } = nextProps.profile;\r\n\r\n    const jwtToken = localStorage.jwtToken;\r\n    // Only Take Care About Candidate Toke If doenst exist Current User\r\n    if (typeof jwtToken === \"undefined\" && typeof token != \"undefined\") {\r\n      // set our token in header ***\r\n      setJWTTokenCandidate(token);\r\n\r\n      // store the token in the localStorage\r\n      localStorage.setItem(\"jwtTokenCandidate\", token);\r\n      // decode token on React\r\n      const decoded_jwtToken = jwt_decode(token);\r\n      console.log(\r\n        \"Expire Remaining:\",\r\n        decoded_jwtToken.exp - Date.now() / 1000\r\n      );\r\n\r\n      const currentTime = Date.now() / 1000;\r\n      if (decoded_jwtToken.exp < currentTime) {\r\n        window.location.href = \"/\";\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier,\r\n      token\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProfile = {\r\n      id: this.state.id,\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail\r\n    };\r\n\r\n    console.log(update);\r\n\r\n    this.props.updateCV(updateProfile, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    //const { profile_tasks } = this.props.profileBacklog;\r\n    const profile_tasks = [];\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, profile_tasks) => {\r\n      if (profile_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER CHECK\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <CVBacklog profile_tasks_prop={profile_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, profile_tasks);\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                Back to Profiles\r\n              </Link>\r\n              <h5 className=\"display-1 text-center\">Edit CV form</h5>\r\n              <hr />\r\n              <div className=\"text-center\">Session expire in 2 days</div>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.fullName}\r\n                    autoFocus={true}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"technoArea\"\r\n                    value={this.state.technoArea}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Technologia Area</option>\r\n                    <option value=\"Software\">Software</option>\r\n                    <option value=\"Engineer\">Engineer</option>\r\n                  </select>\r\n                </div>\r\n                <hr />\r\n                Experiences:\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    placeholder=\"Summary of profile\"\r\n                    name=\"description\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"container\">\r\n                  <Link\r\n                    to={`/addProjectTask/${id}`}\r\n                    className=\"btn btn-primary mb-3\"\r\n                  >\r\n                    <i className=\"fas fa-plus-circle\"> Add Skills</i>\r\n                  </Link>\r\n                  <br />\r\n                  <hr />\r\n                  {BoardContent}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.totalYear\r\n                    })}\r\n                    placeholder=\"Total year of experience\"\r\n                    name=\"totalYear\"\r\n                    value={this.state.totalYear}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.totalYear && (\r\n                    <div className=\"invalid-feedback\">{errors.totalYear}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start in</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>End in</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCVBoard.propTypes = {\r\n  getProfileByLink: PropTypes.func.isRequired,\r\n  updateCV: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getProfileBacklog: PropTypes.func.isRequired,\r\n  profileBacklog: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  getProfileByLink: state.getProfileByLink,\r\n  getProfileBacklog: state.getProfileBacklog,\r\n  profileBacklog: state.profileBacklog,\r\n  profile: state.profile.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileByLink, updateCV, getProfileBacklog }\r\n)(requireAuth(CVBoard));\r\n"]},"metadata":{},"sourceType":"module"}