{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\AddProfileTask.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProfileTask } from \"../../../actions/profileBacklogActions\";\nimport { getProfileByLink } from \"../../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport NumericInput from \"react-numeric-input\";\nimport EducationForm from \"./TasksForms/EducationForm\";\nimport SkillsForm from \"./TasksForms/SkillsForm\";\nimport LanguageForm from \"./TasksForms/LanguageForm\";\nimport ClientProjectForm from \"./TasksForms/ClientProjectForm\";\n\nclass AddProfileTask extends Component {\n  constructor(props) {\n    super(props);\n    const _this$props$match$par = this.props.match.params,\n          id = _this$props$match$par.id,\n          taskType = _this$props$match$par.taskType;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      taskType: taskType,\n      priority: 0,\n      dueDate: \"\",\n      profileIdentifier: id,\n      totalYears: 0,\n      profile: {},\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {//const { id } = this.props.match.params;\n    //this.props.getProfileByLink(id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    if (nextProps.summary !== this.state.summary) {\n      this.setState({\n        summary: nextProps.summary\n      });\n    }\n\n    console.log(this.state.summary);\n  } // on change\n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } //on submit\n\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    const _this$props$match$par2 = this.props.match.params,\n          id = _this$props$match$par2.id,\n          taskType = _this$props$match$par2.taskType; //const { errors } = this.state;\n\n    const taskComponent = taskType => {\n      if (taskType === \"skill\") {\n        return React.createElement(SkillsForm, {\n          typeForm: \"Add\",\n          taskType: taskType,\n          history: this.props.history,\n          profileIdentifier: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      } else if (taskType === \"educ\") {\n        return React.createElement(EducationForm, {\n          typeForm: \"Add\",\n          taskType: taskType,\n          history: this.props.history,\n          profileIdentifier: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      } else if (taskType === \"lang\") {\n        return React.createElement(LanguageForm, {\n          typeForm: \"Add\",\n          taskType: taskType,\n          history: this.props.history,\n          profileIdentifier: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      } else if (taskType === \"cliPrj\") {\n        return React.createElement(ClientProjectForm, {\n          typeForm: \"Add\",\n          taskType: taskType,\n          history: this.props.history,\n          profileIdentifier: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, taskComponent(taskType));\n  }\n\n}\n\nAddProfileTask.propTypes = {\n  addProfileTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  profile: state.profile.profile\n});\n\nexport default connect(mapStateToProps, {\n  addProfileTask\n})(AddProfileTask);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\AddProfileTask.js"],"names":["React","Component","Link","connect","classnames","addProfileTask","getProfileByLink","PropTypes","NumericInput","EducationForm","SkillsForm","LanguageForm","ClientProjectForm","AddProfileTask","constructor","props","match","params","id","taskType","state","summary","acceptanceCriteria","priority","dueDate","profileIdentifier","totalYears","profile","errors","onChange","bind","onSubmit","componentDidMount","componentWillReceiveProps","nextProps","setState","console","log","e","target","name","value","preventDefault","render","taskComponent","history","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProfileTask } from \"../../../actions/profileBacklogActions\";\r\nimport { getProfileByLink } from \"../../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport EducationForm from \"./TasksForms/EducationForm\";\r\nimport SkillsForm from \"./TasksForms/SkillsForm\";\r\nimport LanguageForm from \"./TasksForms/LanguageForm\";\r\nimport ClientProjectForm from \"./TasksForms/ClientProjectForm\";\r\n\r\nclass AddProfileTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id, taskType } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      taskType: taskType,\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      profileIdentifier: id,\r\n      totalYears: 0,\r\n      profile: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //const { id } = this.props.match.params;\r\n    //this.props.getProfileByLink(id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // You don't have to do this check first, but it can help prevent an unneeded render\r\n    if (nextProps.summary !== this.state.summary) {\r\n      this.setState({ summary: nextProps.summary });\r\n    }\r\n    console.log(this.state.summary);\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const { id, taskType } = this.props.match.params;\r\n    //const { errors } = this.state;\r\n\r\n    const taskComponent = taskType => {\r\n      if (taskType === \"skill\") {\r\n        return (\r\n          <SkillsForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      } else if (taskType === \"educ\") {\r\n        return (\r\n          <EducationForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      } else if (taskType === \"lang\") {\r\n        return (\r\n          <LanguageForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      } else if (taskType === \"cliPrj\") {\r\n        return (\r\n          <ClientProjectForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return <div>{taskComponent(taskType)}</div>;\r\n  }\r\n}\r\n\r\nAddProfileTask.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  profile: state.profile.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask }\r\n)(AddProfileTask);\r\n"]},"metadata":{},"sourceType":"module"}