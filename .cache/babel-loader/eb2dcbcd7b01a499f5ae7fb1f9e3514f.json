{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_PROFILES, GET_PROFILE, DELETE_PROFILE, SET_PROFILE_STAGED, SET_CURRENT_USER } from \"./types\";\nimport { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const createProfile = (profile, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/profile\", profile);\n    history.push(\"/profiles\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    history.push(\"/infoPage/\".concat(profile.profileIdentifier));\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/all\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n    const jwtToken = localStorage.jwtToken;\n\n    if (jwtToken) {\n      const decoded = jwt_decode(token); //dispatch to our securityReducer\n\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getProfile = (linkCv, history) => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/\".concat(linkCv));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    //console.log(err);\n    history.push(\"/infoPage/\".concat(linkCv));\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getProfileByLink = (linkCv, history) => async dispatch => {\n  try {\n    //const res = await axios.post(\"/api/users/editcv\", linkCv);\n    //const res = await axios.post(\"/api/profile/editcv\", linkCv);\n    //const res = await axios.get(`/api/profile/editcv/${linkCv}`);\n    const res = await axios.get(\"/api/editcv/\".concat(linkCv));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    const token = res.data.token;\n    const jwtToken = localStorage.jwtToken; // Only Take Care About Candidate Toke If doenst exist Current User\n\n    if (typeof jwtToken === \"undefined\" && typeof token !== \"undefined\") {\n      const jwtTokenCv = localStorage.jwtTokenCandidate;\n\n      if (!jwtTokenCv) {\n        // set our token in header ***\n        setJWTTokenCandidate(token); // store the token in the localStorage\n\n        localStorage.setItem(\"jwtTokenCandidate\", token);\n      } // decode token on React\n\n\n      const decoded_jwtToken = jwt_decode(token);\n      console.log(\"Expire Remaining:\", decoded_jwtToken.exp - Date.now() / 1000);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded_jwtToken.exp < currentTime) {\n        window.location.href = \"/\";\n      }\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    //console.log(err);\n    history.push(\"/infoPage/\".concat(linkCv));\n\n    if (typeof err.response === \"undefined\") {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    } else {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  }\n};\nexport const updateCV = (profile, history) => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/editcv\", profile);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    const profileNotfound = err.profileNotfound;\n    console.log(profileNotfound);\n\n    if (err.response.data.tokenMessage || err.response.data.profileNotfound) {\n      history.push(\"/infoPage/\".concat(profile.profileIdentifier));\n    }\n\n    try {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    } catch (error) {\n      console.log(err);\n    }\n  }\n};\nexport const deleteProfile = id => async dispatch => {\n  if (window.confirm(\"Are you sure? This will delete the project and all the data related to it\")) {\n    await axios.delete(\"/api/profile/\".concat(id));\n    dispatch({\n      type: DELETE_PROFILE,\n      payload: id\n    });\n  }\n};\nexport const setProfileStaged = profileStaged => async dispatch => {\n  dispatch({\n    type: SET_PROFILE_STAGED,\n    payload: profileStaged\n  });\n};","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\actions\\profileActions.js"],"names":["axios","GET_ERRORS","GET_PROFILES","GET_PROFILE","DELETE_PROFILE","SET_PROFILE_STAGED","SET_CURRENT_USER","setJWTTokenCandidate","jwt_decode","createProfile","profile","history","dispatch","post","push","type","payload","err","profileIdentifier","response","data","getProfiles","res","get","jwtToken","localStorage","decoded","token","getProfile","linkCv","getProfileByLink","jwtTokenCv","jwtTokenCandidate","setItem","decoded_jwtToken","console","log","exp","Date","now","currentTime","window","location","href","updateCV","profileNotfound","tokenMessage","error","deleteProfile","id","confirm","delete","setProfileStaged","profileStaged"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROFILES,\r\n  GET_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_PROFILE_STAGED,\r\n  SET_CURRENT_USER\r\n} from \"./types\";\r\nimport { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createProfile = (profile, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/profile\", profile);\r\n    history.push(\"/profiles\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    history.push(`/infoPage/${profile.profileIdentifier}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/all\");\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n\r\n    const jwtToken = localStorage.jwtToken;\r\n    if (jwtToken) {\r\n      const decoded = jwt_decode(token);\r\n\r\n      //dispatch to our securityReducer\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfile = (linkCv, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/${linkCv}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    //console.log(err);\r\n    history.push(`/infoPage/${linkCv}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfileByLink = (linkCv, history) => async dispatch => {\r\n  try {\r\n    //const res = await axios.post(\"/api/users/editcv\", linkCv);\r\n    //const res = await axios.post(\"/api/profile/editcv\", linkCv);\r\n    //const res = await axios.get(`/api/profile/editcv/${linkCv}`);\r\n    const res = await axios.get(`/api/editcv/${linkCv}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    const { token } = res.data;\r\n\r\n    const jwtToken = localStorage.jwtToken;\r\n    // Only Take Care About Candidate Toke If doenst exist Current User\r\n    if (typeof jwtToken === \"undefined\" && typeof token !== \"undefined\") {\r\n      const jwtTokenCv = localStorage.jwtTokenCandidate;\r\n\r\n      if (!jwtTokenCv) {\r\n        // set our token in header ***\r\n        setJWTTokenCandidate(token);\r\n\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtTokenCandidate\", token);\r\n      }\r\n\r\n      // decode token on React\r\n      const decoded_jwtToken = jwt_decode(token);\r\n      console.log(\r\n        \"Expire Remaining:\",\r\n        decoded_jwtToken.exp - Date.now() / 1000\r\n      );\r\n\r\n      const currentTime = Date.now() / 1000;\r\n      if (decoded_jwtToken.exp < currentTime) {\r\n        window.location.href = \"/\";\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    //console.log(err);\r\n    history.push(`/infoPage/${linkCv}`);\r\n    if (typeof err.response === \"undefined\") {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateCV = (profile, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/editcv\", profile);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    const { profileNotfound } = err;\r\n    console.log(profileNotfound);\r\n    if (err.response.data.tokenMessage || err.response.data.profileNotfound) {\r\n      history.push(`/infoPage/${profile.profileIdentifier}`);\r\n    }\r\n    try {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    } catch (error) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteProfile = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/profile/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROFILE,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n\r\nexport const setProfileStaged = profileStaged => async dispatch => {\r\n  dispatch({\r\n    type: SET_PROFILE_STAGED,\r\n    payload: profileStaged\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}