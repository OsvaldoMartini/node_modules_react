{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\routes.js\";\nimport React, { Component } from \"react\";\nimport { Router, Route, IndexRoute, hashHistory } from \"react-router\"; //import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import Dashboard from \"./components/Dashboard\";\n// import Header from \"./components/Layout/Header\";\n// import AddProject from \"./components/Project/AddProject\";\n// import { Provider } from \"react-redux\";\n// import store from \"./store\";\n// import UpdateProject from \"./components/Project/UpdateProject\";\n// import ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\n// import AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\n// import UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\n\nimport Landing from \"./components/Layout/Landing\"; // //import Register from \"./components/UserManagement/Register\";\n// //import Login from \"./components/UserManagement/Login\";\n// import jwt_decode from \"jwt-decode\";\n// import { setJWTToken, setJWTTokenCandidate } from \"./securityUtils/setJWTToken\";\n// import { SET_CURRENT_USER } from \"./actions/types\";\n// import { logout } from \"./actions/securityActions\";\n// import SecuredRoute from \"./securityUtils/SecureRoute\";\n// import AllProfiles from \"./components/Profile/AllProfiles\";\n// import AddProfile from \"./components/Profile/AddProfile\";\n// import UpdateProfile from \"./components/Profile/UpdateProfile\";\n// //import CVBoard from \"./components/CVBoard/CVBoard\";\n// //import AddProfileTask from \"./components/CVBoard/ProfileTasks/AddProfileTask\";\n// //import UpdateProfileTask from \"./components/CVBoard/ProfileTasks/UpdateProfileTask\";\n\nimport Home from \"./components/Layout/Home\"; //import InfoProfilePage from \"./components/Profile/InfoProfilePage\";\n// const jwtToken = localStorage.jwtToken;\n// const jwtTokenCandidate = localStorage.jwtTokenCandidate;\n// if (jwtToken && typeof jwtToken !== \"undefined\") {\n//   setJWTToken(jwtToken);\n// }\n// if (jwtTokenCandidate && typeof jwtTokenCandidate !== \"undefined\") {\n//   setJWTTokenCandidate(jwtTokenCandidate);\n// }\n// if (\n//   typeof jwtToken !== \"undefined\" ||\n//   typeof jwtTokenCandidate !== \"undefined\"\n// ) {\n//   const token = jwtToken || jwtTokenCandidate;\n//   const decoded_jwtToken = jwt_decode(token);\n//   //Only for Normal jwtToken\n//   if (jwtToken) {\n//     store.dispatch({\n//       type: SET_CURRENT_USER,\n//       payload: decoded_jwtToken\n//     });\n//   }\n//   const currentTime = Date.now() / 1000;\n//   if (decoded_jwtToken.exp < currentTime) {\n//     store.dispatch(logout());\n//     window.location.href = \"/\";\n//   }\n// }\n//Rewritten \"Route\" as 'Plain' Javascript routes\n//Translating JSX to plain javascript\n\nconst componentsRoutes = {\n  component: Home,\n  path: \"/\",\n  indexRoute: {\n    component: Landing\n  },\n  childRoutes: [// <Route\n  //   exact\n  //   path=\"/updateProfileTask/:profile_backlog_id/:pt_id/:taskType\"\n  //   component={UpdateProfileTask}\n  // />\n  {\n    path: \"/infoPage/:id\",\n\n    getComponent(location, cb) {\n      //The Maig Here is: We eant to Asynchronously load up our component asynchronously\n      //The Strategy here is to place our System.import call to dynamically load up the component\n      //And then after loaded (once is Fetched) it up we will call the \"cb\" calback function with the modle that just got loaded\n      // The two big Gotchas in this Splitting Process\n      // cb(First Agrument is Expecting error, Second Expect Results)\n      // Cb(null,) => We are assuming that we don't have an error to pass => \"He Loaded the Module, everything is good!!!\"\n      //The Second Module is the entire Javascript module and the actual code is available on \"module.default\"\n      System.import(\"./components/Profile/InfoProfilePage\").then(module => cb(null, module.default));\n    }\n\n  }, {\n    path: \"/register\",\n\n    getComponent(location, cb) {\n      System.import(\"./components/UserManagement/Register\").then(module => cb(null, module.default));\n    }\n\n  }, {\n    path: \"/editcv/:id\",\n\n    getComponent(location, cb) {\n      System.import(\"./components/CVBoard/CVBoard\").then(module => cb(null, module.default));\n    }\n\n  }, {\n    path: \"/login\",\n\n    getComponent(location, cb) {\n      System.import(\"./components/UserManagement/Login\").then(module => cb(null, module.default));\n    }\n\n  }, {\n    path: \"/addProfileTask/:id/:taskType\",\n\n    getComponent(location, cb) {\n      System.import(\"./components/CVBoard/ProfileTasks/AddProfileTask\").then(module => cb(null, module.default));\n    }\n\n  }, {\n    path: \"/updateProfileTask/:profile_backlog_id/:pt_id/:taskType\",\n\n    getComponent(location, cb) {\n      System.import(\"./components/CVBoard/ProfileTasks/UpdateProfileTask\").then(module => cb(null, module.default));\n    }\n\n  }]\n};\n\nconst Routes = () => {\n  return React.createElement(Router, {\n    history: hashHistory,\n    routes: componentsRoutes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  });\n};\n\nexport default Routes;","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\routes.js"],"names":["React","Component","Router","Route","IndexRoute","hashHistory","Landing","Home","componentsRoutes","component","path","indexRoute","childRoutes","getComponent","location","cb","System","import","then","module","default","Routes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Router, Route, IndexRoute, hashHistory } from \"react-router\";\r\n//import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// import Dashboard from \"./components/Dashboard\";\r\n// import Header from \"./components/Layout/Header\";\r\n// import AddProject from \"./components/Project/AddProject\";\r\n// import { Provider } from \"react-redux\";\r\n// import store from \"./store\";\r\n// import UpdateProject from \"./components/Project/UpdateProject\";\r\n// import ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\n// import AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\n// import UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\n// //import Register from \"./components/UserManagement/Register\";\r\n// //import Login from \"./components/UserManagement/Login\";\r\n// import jwt_decode from \"jwt-decode\";\r\n// import { setJWTToken, setJWTTokenCandidate } from \"./securityUtils/setJWTToken\";\r\n// import { SET_CURRENT_USER } from \"./actions/types\";\r\n// import { logout } from \"./actions/securityActions\";\r\n// import SecuredRoute from \"./securityUtils/SecureRoute\";\r\n// import AllProfiles from \"./components/Profile/AllProfiles\";\r\n// import AddProfile from \"./components/Profile/AddProfile\";\r\n// import UpdateProfile from \"./components/Profile/UpdateProfile\";\r\n// //import CVBoard from \"./components/CVBoard/CVBoard\";\r\n// //import AddProfileTask from \"./components/CVBoard/ProfileTasks/AddProfileTask\";\r\n// //import UpdateProfileTask from \"./components/CVBoard/ProfileTasks/UpdateProfileTask\";\r\nimport Home from \"./components/Layout/Home\";\r\n//import InfoProfilePage from \"./components/Profile/InfoProfilePage\";\r\n\r\n// const jwtToken = localStorage.jwtToken;\r\n// const jwtTokenCandidate = localStorage.jwtTokenCandidate;\r\n\r\n// if (jwtToken && typeof jwtToken !== \"undefined\") {\r\n//   setJWTToken(jwtToken);\r\n// }\r\n\r\n// if (jwtTokenCandidate && typeof jwtTokenCandidate !== \"undefined\") {\r\n//   setJWTTokenCandidate(jwtTokenCandidate);\r\n// }\r\n\r\n// if (\r\n//   typeof jwtToken !== \"undefined\" ||\r\n//   typeof jwtTokenCandidate !== \"undefined\"\r\n// ) {\r\n//   const token = jwtToken || jwtTokenCandidate;\r\n//   const decoded_jwtToken = jwt_decode(token);\r\n\r\n//   //Only for Normal jwtToken\r\n//   if (jwtToken) {\r\n//     store.dispatch({\r\n//       type: SET_CURRENT_USER,\r\n//       payload: decoded_jwtToken\r\n//     });\r\n//   }\r\n\r\n//   const currentTime = Date.now() / 1000;\r\n//   if (decoded_jwtToken.exp < currentTime) {\r\n//     store.dispatch(logout());\r\n//     window.location.href = \"/\";\r\n//   }\r\n// }\r\n\r\n//Rewritten \"Route\" as 'Plain' Javascript routes\r\n//Translating JSX to plain javascript\r\nconst componentsRoutes = {\r\n  component: Home,\r\n  path: \"/\",\r\n  indexRoute: { component: Landing },\r\n  childRoutes: [\r\n    // <Route\r\n    //   exact\r\n    //   path=\"/updateProfileTask/:profile_backlog_id/:pt_id/:taskType\"\r\n    //   component={UpdateProfileTask}\r\n    // />\r\n\r\n    {\r\n      path: \"/infoPage/:id\",\r\n      getComponent(location, cb) {\r\n        //The Maig Here is: We eant to Asynchronously load up our component asynchronously\r\n        //The Strategy here is to place our System.import call to dynamically load up the component\r\n        //And then after loaded (once is Fetched) it up we will call the \"cb\" calback function with the modle that just got loaded\r\n        // The two big Gotchas in this Splitting Process\r\n        // cb(First Agrument is Expecting error, Second Expect Results)\r\n        // Cb(null,) => We are assuming that we don't have an error to pass => \"He Loaded the Module, everything is good!!!\"\r\n        //The Second Module is the entire Javascript module and the actual code is available on \"module.default\"\r\n\r\n        System.import(\"./components/Profile/InfoProfilePage\").then(module =>\r\n          cb(null, module.default)\r\n        );\r\n      }\r\n    },\r\n    {\r\n      path: \"/register\",\r\n      getComponent(location, cb) {\r\n        System.import(\"./components/UserManagement/Register\").then(module =>\r\n          cb(null, module.default)\r\n        );\r\n      }\r\n    },\r\n    {\r\n      path: \"/editcv/:id\",\r\n      getComponent(location, cb) {\r\n        System.import(\"./components/CVBoard/CVBoard\").then(module =>\r\n          cb(null, module.default)\r\n        );\r\n      }\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      getComponent(location, cb) {\r\n        System.import(\"./components/UserManagement/Login\").then(module =>\r\n          cb(null, module.default)\r\n        );\r\n      }\r\n    },\r\n    {\r\n      path: \"/addProfileTask/:id/:taskType\",\r\n      getComponent(location, cb) {\r\n        System.import(\"./components/CVBoard/ProfileTasks/AddProfileTask\").then(\r\n          module => cb(null, module.default)\r\n        );\r\n      }\r\n    },\r\n    {\r\n      path: \"/updateProfileTask/:profile_backlog_id/:pt_id/:taskType\",\r\n      getComponent(location, cb) {\r\n        System.import(\r\n          \"./components/CVBoard/ProfileTasks/UpdateProfileTask\"\r\n        ).then(module => cb(null, module.default));\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nconst Routes = () => {\r\n  return <Router history={hashHistory} routes={componentsRoutes} />;\r\n};\r\n\r\nexport default Routes;\r\n"]},"metadata":{},"sourceType":"module"}