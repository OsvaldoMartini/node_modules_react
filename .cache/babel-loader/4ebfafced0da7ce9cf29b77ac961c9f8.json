{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst ncp = require('./ncp');\n\nconst mkdir = require('../mkdirs');\n\nconst pathExists = require('../path-exists').pathExists;\n\nfunction copy(src, dest, options, callback) {\n  if (typeof options === 'function' && !callback) {\n    callback = options;\n    options = {};\n  } else if (typeof options === 'function' || options instanceof RegExp) {\n    options = {\n      filter: options\n    };\n  }\n\n  callback = callback || function () {};\n\n  options = options || {}; // Warn about using preserveTimestamps on 32-bit node:\n\n  if (options.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(\"fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n    see https://github.com/jprichardson/node-fs-extra/issues/269\");\n  } // don't allow src and dest to be the same\n\n\n  const basePath = process.cwd();\n  const currentPath = path.resolve(basePath, src);\n  const targetPath = path.resolve(basePath, dest);\n  if (currentPath === targetPath) return callback(new Error('Source and destination must not be the same.'));\n  fs.lstat(src, (err, stats) => {\n    if (err) return callback(err);\n    let dir = null;\n\n    if (stats.isDirectory()) {\n      const parts = dest.split(path.sep);\n      parts.pop();\n      dir = parts.join(path.sep);\n    } else {\n      dir = path.dirname(dest);\n    }\n\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err);\n      if (dirExists) return ncp(src, dest, options, callback);\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err);\n        ncp(src, dest, options, callback);\n      });\n    });\n  });\n}\n\nmodule.exports = copy;","map":null,"metadata":{},"sourceType":"script"}