{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_PROFILES, GET_PROFILE, DELETE_PROFILE } from \"./types\";\nimport jsscompress from \"js-string-compression\";\nimport { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const createProfile = (profile, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/profile\", profile);\n    history.push(\"/profiles\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getProfiles = () => async dispatch => {\n  const res = await axios.get(\"/api/profile/all\");\n  dispatch({\n    type: GET_PROFILES,\n    payload: res.data\n  });\n};\nexport const getProfile = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/\".concat(id));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error); //history.push(\"/profiles\");\n  }\n};\nexport const getProfileByLink = (linkCv, history) => async dispatch => {\n  try {\n    //const res = await axios.post(\"/api/users/editcv\", linkCv);\n    //const res = await axios.post(\"/api/profile/editcv\", linkCv);\n    //const res = await axios.get(`/api/profile/editcv/${linkCv}`);\n    const res = await axios.get(\"/api/editcv/\".concat(linkCv));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    const token = res.response.data.token;\n    const jwtToken = localStorage.jwtToken; // Only Take Care About Candidate Toke If doenst exist Current User\n\n    if (typeof jwtToken === \"undefined\" && typeof token != \"undefined\") {\n      const jwtTokenCv = localStorage.jwtTokenCandidate;\n\n      if (!jwtTokenCv) {\n        // set our token in header ***\n        setJWTTokenCandidate(token); // store the token in the localStorage\n\n        localStorage.setItem(\"jwtTokenCandidate\", token);\n      } // decode token on React\n\n\n      const decoded_jwtToken = jwt_decode(token);\n      console.log(\"Expire Remaining:\", decoded_jwtToken.exp - Date.now() / 1000);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded_jwtToken.exp < currentTime) {\n        window.location.href = \"/\";\n      }\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PROFILE,\n      payload: err.response.data\n    });\n    history.push(\"/infoPage/\".concat(linkCv));\n  }\n};\nexport const updateCV = profile => async dispatch => {\n  if (profile.summary) {\n    var hm = new jsscompress.Hauffman();\n    profile.summary = hm.compress(profile.summary);\n  }\n\n  try {\n    const res = await axios.post(\"/api/editcv\", profile);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    console.log(err);\n\n    try {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    } catch (error) {\n      console.log(err);\n    }\n  }\n};\nexport const deleteProfile = id => async dispatch => {\n  if (window.confirm(\"Are you sure? This will delete the project and all the data related to it\")) {\n    await axios.delete(\"/api/profile/\".concat(id));\n    dispatch({\n      type: DELETE_PROFILE,\n      payload: id\n    });\n  }\n};","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\actions\\profileActions.js"],"names":["axios","GET_ERRORS","GET_PROFILES","GET_PROFILE","DELETE_PROFILE","jsscompress","setJWTTokenCandidate","jwt_decode","createProfile","profile","history","dispatch","post","push","type","payload","err","response","data","getProfiles","res","get","getProfile","id","error","console","log","getProfileByLink","linkCv","token","jwtToken","localStorage","jwtTokenCv","jwtTokenCandidate","setItem","decoded_jwtToken","exp","Date","now","currentTime","window","location","href","updateCV","summary","hm","Hauffman","compress","deleteProfile","confirm","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROFILES, GET_PROFILE, DELETE_PROFILE } from \"./types\";\r\nimport jsscompress from \"js-string-compression\";\r\nimport { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createProfile = (profile, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/profile\", profile);\r\n    history.push(\"/profiles\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n  const res = await axios.get(\"/api/profile/all\");\r\n  dispatch({\r\n    type: GET_PROFILES,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProfile = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/${id}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    //history.push(\"/profiles\");\r\n  }\r\n};\r\n\r\nexport const getProfileByLink = (linkCv, history) => async dispatch => {\r\n  try {\r\n    //const res = await axios.post(\"/api/users/editcv\", linkCv);\r\n    //const res = await axios.post(\"/api/profile/editcv\", linkCv);\r\n    //const res = await axios.get(`/api/profile/editcv/${linkCv}`);\r\n    const res = await axios.get(`/api/editcv/${linkCv}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    const { token } = res.response.data;\r\n\r\n    const jwtToken = localStorage.jwtToken;\r\n    // Only Take Care About Candidate Toke If doenst exist Current User\r\n    if (typeof jwtToken === \"undefined\" && typeof token != \"undefined\") {\r\n      const jwtTokenCv = localStorage.jwtTokenCandidate;\r\n\r\n      if (!jwtTokenCv) {\r\n        // set our token in header ***\r\n        setJWTTokenCandidate(token);\r\n\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtTokenCandidate\", token);\r\n      }\r\n\r\n      // decode token on React\r\n      const decoded_jwtToken = jwt_decode(token);\r\n      console.log(\r\n        \"Expire Remaining:\",\r\n        decoded_jwtToken.exp - Date.now() / 1000\r\n      );\r\n\r\n      const currentTime = Date.now() / 1000;\r\n      if (decoded_jwtToken.exp < currentTime) {\r\n        window.location.href = \"/\";\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: err.response.data\r\n    });\r\n    history.push(`/infoPage/${linkCv}`);\r\n  }\r\n};\r\n\r\nexport const updateCV = profile => async dispatch => {\r\n  if (profile.summary) {\r\n    var hm = new jsscompress.Hauffman();\r\n    profile.summary = hm.compress(profile.summary);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/editcv\", profile);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    try {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    } catch (error) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteProfile = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/profile/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROFILE,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}