{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\CVBoard.js\";\nimport React, { Component } from \"react\";\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport requireAuth from \"../hocs/requireAuth\";\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\nimport CVBacklog from \"./CVBacklog\";\nimport { TASK_TYPE_SKILSS, TASK_TYPE_EDUC } from \"../../actions/types\";\nimport { GET_PROFILE } from \"../../actions/types\";\n\nclass CVBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      fullName: \"\",\n      candidateEmail: \"\",\n      profileIdentifier: \"\",\n      token: \"\",\n      summary: \"\",\n      technologyArea: 0,\n      domains: \"\",\n      certifications: \"\",\n      tools: \"\",\n      trainings: \"\",\n      methodologies: \"\",\n      others: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(\"DidMount: \", this.props);\n    this.props.getProfileByLink(id, this.props.history); //this.props.getProfileBacklog(id, this.props.history);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"DidUpdate: \", this.state.summary);\n\n    if (prevProps.isFocused !== this.props.isFocused) {// Use the `this.props.isFocused` boolean\n      // Call any action\n    }\n  }\n\n  componentWillMount() {\n    console.log(\"WillMount: \", this.state.summary); //this.props.dispatch(getProfileBacklog(id, this.props.history));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"WillReceiveProps: \", this.nextProps);\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile = nextProps.profile,\n          id = _nextProps$profile.id,\n          fullName = _nextProps$profile.fullName,\n          candidateEmail = _nextProps$profile.candidateEmail,\n          profileIdentifier = _nextProps$profile.profileIdentifier,\n          token = _nextProps$profile.token,\n          summary = _nextProps$profile.summary,\n          technologyArea = _nextProps$profile.technologyArea,\n          domains = _nextProps$profile.domains,\n          certifications = _nextProps$profile.certifications,\n          tools = _nextProps$profile.tools,\n          trainings = _nextProps$profile.trainings,\n          methodologies = _nextProps$profile.methodologies,\n          others = _nextProps$profile.others;\n    this.setState({\n      id,\n      fullName,\n      candidateEmail,\n      profileIdentifier,\n      token,\n      summary,\n      technologyArea,\n      domains,\n      certifications,\n      tools,\n      trainings,\n      methodologies,\n      others\n    }); // if (summary) {\n    //   var hm = new jsscompress.Hauffman();\n    //   var decompressed = hm.decompress(summary);\n    //   this.setState({ summary: decompressed });\n    //   console.log(\"Decompresed\", hm.decompress(summary));\n    // }\n  }\n\n  onChange(e) {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    const profile = {\n      id: this.state.id,\n      fullName: this.state.fullName,\n      candidateEmail: this.state.candidateEmail,\n      profileIdentifier: this.state.profileIdentifier,\n      summary: this.state.summary,\n      technologyArea: this.state.technologyArea,\n      domains: this.state.domains,\n      certifications: this.state.certifications,\n      tools: this.state.tools,\n      trainings: this.state.trainings,\n      methodologies: this.state.methodologies,\n      others: this.state.others\n    };\n    this.props.dispatch({\n      type: GET_PROFILE,\n      payload: profile\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProfile = {\n      id: this.state.id,\n      fullName: this.state.fullName,\n      candidateEmail: this.state.candidateEmail,\n      profileIdentifier: this.state.profileIdentifier,\n      summary: this.state.summary,\n      technologyArea: this.state.technologyArea,\n      domains: this.state.domains,\n      certifications: this.state.certifications,\n      tools: this.state.tools,\n      trainings: this.state.trainings,\n      methodologies: this.state.methodologies,\n      others: this.state.others\n    };\n    console.log(updateProfile);\n    this.props.updateCV(updateProfile, this.props.history);\n  }\n\n  render() {\n    const errors = this.state.errors;\n    const id = this.props.match.params.id;\n    const profile_tasks = this.props.profileBacklog.profile_tasks;\n\n    const boardAlgorithm = (errors, profile_tasks, taskType_To_Filter) => {\n      if (profile_tasks.length < 1) {\n        //PROJECT IDENTIFIER CHECK\n        if (errors.profileNotFound) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, errors.projectNotFound);\n        } else if (errors.profileIdentifier) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, errors.profileIdentifier);\n        } else {\n          if (taskType_To_Filter === TASK_TYPE_SKILSS) {\n            return React.createElement(\"div\", {\n              className: \"alert alert-info text-center\",\n              role: \"alert\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 176\n              },\n              __self: this\n            }, \"No Skills added\");\n          } else if (taskType_To_Filter === TASK_TYPE_EDUC) {\n            return React.createElement(\"div\", {\n              className: \"alert alert-info text-center\",\n              role: \"alert\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 182\n              },\n              __self: this\n            }, \"No Educations added\");\n          }\n        }\n      } else {\n        return React.createElement(CVBacklog, {\n          profile_tasks_prop: profile_tasks,\n          task_type_prop: taskType_To_Filter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        });\n      }\n    };\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Back to Profiles\"), React.createElement(\"div\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Edit CV form\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Session expire in 2 days\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Full name :\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.fullName\n      }),\n      placeholder: \"Full Name\",\n      name: \"fullName\",\n      onChange: this.onChange,\n      value: this.state.fullName,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), errors.fullName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, errors.fullName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Technology Area :\"), React.createElement(\"select\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.technologyArea\n      }),\n      name: \"technologyArea\",\n      value: this.state.technologyArea,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Technology Area\"), React.createElement(\"option\", {\n      value: \"Software\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Software\"), React.createElement(\"option\", {\n      value: \"Engineer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Engineer\")), errors.technologyArea && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, errors.technologyArea)), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Experiences:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      placeholder: \"Summary of profile\",\n      name: \"summary\",\n      value: this.state.summary,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Years of Experiences:\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProfileTask/\".concat(id, \"/\", \"skill\"),\n      className: \"\",\n      style: this.state.summary ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.summary ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \" \", \"Add Skills\"))), boardAlgorithm(errors, profile_tasks, \"skill\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Domains:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.domains\n      }),\n      placeholder: \"Domains\",\n      name: \"domains\",\n      value: this.state.domains // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), errors.domains && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, errors.domains)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Certifications:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.certifications\n      }),\n      placeholder: \"Certifications\",\n      name: \"certifications\",\n      value: this.state.certifications // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), errors.certifications && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, errors.certifications)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Tools:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.tools\n      }),\n      placeholder: \"Tools\",\n      name: \"tools\",\n      value: this.state.tools // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), errors.tools && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, errors.tools)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Trainings:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.trainings\n      }),\n      placeholder: \"Trainings\",\n      name: \"trainings\",\n      value: this.state.trainings // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), errors.trainings && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, errors.trainings)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Methodologies:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.methodologies\n      }),\n      placeholder: \"Methodologies\",\n      name: \"methodologies\",\n      value: this.state.methodologies // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), errors.methodologies && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, errors.methodologies)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Others:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.others\n      }),\n      placeholder: \"Others\",\n      name: \"methodologies\",\n      value: this.state.others // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), errors.others && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, errors.others)), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Education - Languages:\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProfileTask/\".concat(id, \"/\", \"educ\"),\n      className: \"btn btn-primary mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \" Add Educations\"))), boardAlgorithm(errors, profile_tasks, \"educ\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), errors.technologyArea && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Please Check the fields above:\", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }), errors.technologyArea), React.createElement(\"input\", {\n      // style={{\n      //   position: \"absolute\",\n      //   right: \"0\",\n      //   bottom: \"0\"\n      // }}\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nCVBoard.propTypes = {\n  profileBacklog: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProfileByLink: PropTypes.func.isRequired,\n  updateCV: PropTypes.func.isRequired,\n  getProfileBacklog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile.profile,\n  profileBacklog: state.profileBacklog,\n  errors: state.errors,\n  //profileBacklog: state.profile.profileBacklog,\n  getProfileByLink: state.getProfileByLink,\n  getProfileBacklog: state.getProfileBacklog\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByLink,\n  updateCV,\n  getProfileBacklog\n})(requireAuth(CVBoard));","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\CVBoard.js"],"names":["React","Component","getProfileByLink","updateCV","PropTypes","connect","classnames","Link","requireAuth","getProfileBacklog","CVBacklog","TASK_TYPE_SKILSS","TASK_TYPE_EDUC","GET_PROFILE","CVBoard","constructor","props","state","id","fullName","candidateEmail","profileIdentifier","token","summary","technologyArea","domains","certifications","tools","trainings","methodologies","others","errors","onChange","bind","onSubmit","componentDidMount","match","params","console","log","history","componentDidUpdate","prevProps","isFocused","componentWillMount","componentWillReceiveProps","nextProps","setState","profile","e","preventDefault","target","name","value","dispatch","type","payload","updateProfile","render","profile_tasks","profileBacklog","boardAlgorithm","taskType_To_Filter","length","profileNotFound","projectNotFound","width","marginTop","fontSize","color","pointerEvents","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\r\nimport CVBacklog from \"./CVBacklog\";\r\nimport { TASK_TYPE_SKILSS, TASK_TYPE_EDUC } from \"../../actions/types\";\r\nimport { GET_PROFILE } from \"../../actions/types\";\r\n\r\nclass CVBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      fullName: \"\",\r\n      candidateEmail: \"\",\r\n      profileIdentifier: \"\",\r\n      token: \"\",\r\n      summary: \"\",\r\n      technologyArea: 0,\r\n      domains: \"\",\r\n      certifications: \"\",\r\n      tools: \"\",\r\n      trainings: \"\",\r\n      methodologies: \"\",\r\n      others: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    console.log(\"DidMount: \", this.props);\r\n\r\n    this.props.getProfileByLink(id, this.props.history);\r\n\r\n    //this.props.getProfileBacklog(id, this.props.history);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log(\"DidUpdate: \", this.state.summary);\r\n    if (prevProps.isFocused !== this.props.isFocused) {\r\n      // Use the `this.props.isFocused` boolean\r\n      // Call any action\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"WillMount: \", this.state.summary);\r\n\r\n    //this.props.dispatch(getProfileBacklog(id, this.props.history));\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\"WillReceiveProps: \", this.nextProps);\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier,\r\n      token,\r\n      summary,\r\n      technologyArea,\r\n      domains,\r\n      certifications,\r\n      tools,\r\n      trainings,\r\n      methodologies,\r\n      others\r\n    } = nextProps.profile;\r\n\r\n    this.setState({\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier,\r\n      token,\r\n      summary,\r\n      technologyArea,\r\n      domains,\r\n      certifications,\r\n      tools,\r\n      trainings,\r\n      methodologies,\r\n      others\r\n    });\r\n\r\n    // if (summary) {\r\n    //   var hm = new jsscompress.Hauffman();\r\n    //   var decompressed = hm.decompress(summary);\r\n    //   this.setState({ summary: decompressed });\r\n    //   console.log(\"Decompresed\", hm.decompress(summary));\r\n    // }\r\n  }\r\n\r\n  onChange(e) {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    const profile = {\r\n      id: this.state.id,\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail,\r\n      profileIdentifier: this.state.profileIdentifier,\r\n      summary: this.state.summary,\r\n      technologyArea: this.state.technologyArea,\r\n      domains: this.state.domains,\r\n      certifications: this.state.certifications,\r\n      tools: this.state.tools,\r\n      trainings: this.state.trainings,\r\n      methodologies: this.state.methodologies,\r\n      others: this.state.others\r\n    };\r\n    this.props.dispatch({\r\n      type: GET_PROFILE,\r\n      payload: profile\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProfile = {\r\n      id: this.state.id,\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail,\r\n      profileIdentifier: this.state.profileIdentifier,\r\n      summary: this.state.summary,\r\n      technologyArea: this.state.technologyArea,\r\n      domains: this.state.domains,\r\n      certifications: this.state.certifications,\r\n      tools: this.state.tools,\r\n      trainings: this.state.trainings,\r\n      methodologies: this.state.methodologies,\r\n      others: this.state.others\r\n    };\r\n\r\n    console.log(updateProfile);\r\n\r\n    this.props.updateCV(updateProfile, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    const { profile_tasks } = this.props.profileBacklog;\r\n\r\n    const boardAlgorithm = (errors, profile_tasks, taskType_To_Filter) => {\r\n      if (profile_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER CHECK\r\n        if (errors.profileNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.profileIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.profileIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          if (taskType_To_Filter === TASK_TYPE_SKILSS) {\r\n            return (\r\n              <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                No Skills added\r\n              </div>\r\n            );\r\n          } else if (taskType_To_Filter === TASK_TYPE_EDUC) {\r\n            return (\r\n              <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                No Educations added\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        return (\r\n          <CVBacklog\r\n            profile_tasks_prop={profile_tasks}\r\n            task_type_prop={taskType_To_Filter}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                Back to Profiles\r\n              </Link>\r\n              <div className=\"display-4 text-center\">Edit CV form</div>\r\n              <hr />\r\n              <div className=\"text-center\">Session expire in 2 days</div>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <h6>Full name :</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.fullName}\r\n                    autoFocus={true}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Technology Area :</h6>\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.technologyArea\r\n                    })}\r\n                    name=\"technologyArea\"\r\n                    value={this.state.technologyArea}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Technology Area</option>\r\n                    <option value=\"Software\">Software</option>\r\n                    <option value=\"Engineer\">Engineer</option>\r\n                  </select>\r\n                  {errors.technologyArea && (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        marginTop: \".25rem\",\r\n                        fontSize: \"80%\",\r\n                        color: \"#dc3545\"\r\n                      }}\r\n                    >\r\n                      {errors.technologyArea}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <hr />\r\n                <h6>Experiences:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    placeholder=\"Summary of profile\"\r\n                    name=\"summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Years of Experiences:</h6>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"col-12 text-right\">\r\n                      <Link\r\n                        to={`/addProfileTask/${id}/${\"skill\"}`}\r\n                        className=\"\"\r\n                        style={\r\n                          this.state.summary ? null : { pointerEvents: \"none\" }\r\n                        }\r\n                      >\r\n                        <i\r\n                          className=\"fas fa-plus-circle\"\r\n                          style={\r\n                            this.state.summary ? null : { color: \"#dddddd\" }\r\n                          }\r\n                        >\r\n                          {\" \"}\r\n                          Add Skills\r\n                        </i>\r\n                      </Link>\r\n                    </div>\r\n                    {boardAlgorithm(errors, profile_tasks, \"skill\")}\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <h6>Domains:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.domains\r\n                    })}\r\n                    placeholder=\"Domains\"\r\n                    name=\"domains\"\r\n                    value={this.state.domains}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.domains && (\r\n                    <div className=\"invalid-feedback\">{errors.domains}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Certifications:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.certifications\r\n                    })}\r\n                    placeholder=\"Certifications\"\r\n                    name=\"certifications\"\r\n                    value={this.state.certifications}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.certifications && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.certifications}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Tools:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.tools\r\n                    })}\r\n                    placeholder=\"Tools\"\r\n                    name=\"tools\"\r\n                    value={this.state.tools}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.tools && (\r\n                    <div className=\"invalid-feedback\">{errors.tools}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Trainings:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.trainings\r\n                    })}\r\n                    placeholder=\"Trainings\"\r\n                    name=\"trainings\"\r\n                    value={this.state.trainings}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.trainings && (\r\n                    <div className=\"invalid-feedback\">{errors.trainings}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Methodologies:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.methodologies\r\n                    })}\r\n                    placeholder=\"Methodologies\"\r\n                    name=\"methodologies\"\r\n                    value={this.state.methodologies}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.methodologies && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.methodologies}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Others:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.others\r\n                    })}\r\n                    placeholder=\"Others\"\r\n                    name=\"methodologies\"\r\n                    value={this.state.others}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.others && (\r\n                    <div className=\"invalid-feedback\">{errors.others}</div>\r\n                  )}\r\n                </div>\r\n                <hr />\r\n                <h6>Education - Languages:</h6>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"col-12 text-right\">\r\n                      <Link\r\n                        to={`/addProfileTask/${id}/${\"educ\"}`}\r\n                        className=\"btn btn-primary mb-3\"\r\n                      >\r\n                        <i className=\"fas fa-plus-circle\"> Add Educations</i>\r\n                      </Link>\r\n                    </div>\r\n                    {boardAlgorithm(errors, profile_tasks, \"educ\")}\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                {errors.technologyArea && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.technologyArea}\r\n                  </div>\r\n                )}\r\n                <input\r\n                  // style={{\r\n                  //   position: \"absolute\",\r\n                  //   right: \"0\",\r\n                  //   bottom: \"0\"\r\n                  // }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCVBoard.propTypes = {\r\n  profileBacklog: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getProfileByLink: PropTypes.func.isRequired,\r\n  updateCV: PropTypes.func.isRequired,\r\n  getProfileBacklog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  profileBacklog: state.profileBacklog,\r\n  errors: state.errors,\r\n  //profileBacklog: state.profile.profileBacklog,\r\n  getProfileByLink: state.getProfileByLink,\r\n  getProfileBacklog: state.getProfileBacklog\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileByLink, updateCV, getProfileBacklog }\r\n)(requireAuth(CVBoard));\r\n"]},"metadata":{},"sourceType":"module"}