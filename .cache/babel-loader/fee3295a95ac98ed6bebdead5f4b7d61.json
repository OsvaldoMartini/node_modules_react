{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst invalidWin32Path = require('./win32').invalidWin32Path;\n\nconst o777 = parseInt('0777', 8);\n\nfunction mkdirsSync(p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = {\n      mode: opts\n    };\n  }\n\n  let mode = opts.mode;\n  const xfs = opts.fs || fs;\n\n  if (process.platform === 'win32' && invalidWin32Path(p)) {\n    const errInval = new Error(p + ' contains invalid WIN32 path characters.');\n    errInval.code = 'EINVAL';\n    throw errInval;\n  }\n\n  if (mode === undefined) {\n    mode = o777 & ~process.umask();\n  }\n\n  if (!made) made = null;\n  p = path.resolve(p);\n\n  try {\n    xfs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case 'ENOENT':\n        if (path.dirname(p) === p) throw err0;\n        made = mkdirsSync(path.dirname(p), opts, made);\n        mkdirsSync(p, opts, made);\n        break;\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n\n      default:\n        let stat;\n\n        try {\n          stat = xfs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n\n  return made;\n}\n\nmodule.exports = mkdirsSync;","map":null,"metadata":{},"sourceType":"script"}