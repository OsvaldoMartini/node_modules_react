{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\CVBoard.js\";\nimport React, { Component } from \"react\";\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport requireAuth from \"../hocs/requireAuth\";\nimport { setJWTTokenCandidate } from \"../../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\nimport CVBacklog from \"./CVBacklog\";\nimport jsscompress from \"js-string-compression\";\n\nclass CVBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      fullName: \"\",\n      candidateEmail: \"\",\n      profileIdentifier: \"\",\n      token: \"\",\n      summary: \"\",\n      technologyArea: 0,\n      domains: \"\",\n      certifications: \"\",\n      tools: \"\",\n      methodologies: \"\",\n      others: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getProfileByLink(id, this.props.history);\n    this.props.getProfileBacklog(id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile = nextProps.profile,\n          id = _nextProps$profile.id,\n          fullName = _nextProps$profile.fullName,\n          candidateEmail = _nextProps$profile.candidateEmail,\n          profileIdentifier = _nextProps$profile.profileIdentifier,\n          token = _nextProps$profile.token,\n          summary = _nextProps$profile.summary,\n          technologyArea = _nextProps$profile.technologyArea,\n          domains = _nextProps$profile.domains,\n          certifications = _nextProps$profile.certifications,\n          tools = _nextProps$profile.tools,\n          methodologies = _nextProps$profile.methodologies,\n          others = _nextProps$profile.others;\n    const jwtToken = localStorage.jwtToken; // Only Take Care About Candidate Toke If doenst exist Current User\n\n    if (typeof jwtToken === \"undefined\" && typeof token != \"undefined\") {\n      // set our token in header ***\n      setJWTTokenCandidate(token); // store the token in the localStorage\n\n      localStorage.setItem(\"jwtTokenCandidate\", token); // decode token on React\n\n      const decoded_jwtToken = jwt_decode(token);\n      console.log(\"Expire Remaining:\", decoded_jwtToken.exp - Date.now() / 1000);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded_jwtToken.exp < currentTime) {\n        window.location.href = \"/\";\n      }\n    }\n\n    this.setState({\n      id,\n      fullName,\n      candidateEmail,\n      profileIdentifier,\n      token,\n      technologyArea,\n      domains,\n      certifications,\n      tools,\n      methodologies,\n      others\n    });\n\n    if (summary) {\n      var hm = new jsscompress.Hauffman();\n      var decompressed = hm.decompress(summary);\n      this.setState({\n        summary: decompressed\n      });\n      console.log(\"Decompresed\", hm.decompress(summary));\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProfile = {\n      id: this.state.id,\n      fullName: this.state.fullName,\n      candidateEmail: this.state.candidateEmail,\n      profileIdentifier: this.state.profileIdentifier,\n      summary: this.state.summary,\n      technologyArea: this.state.technologyArea,\n      domains: this.state.domains,\n      certifications: this.state.certifications,\n      tools: this.state.tools,\n      methodologies: this.state.methodologies,\n      others: this.state.others\n    };\n    console.log(updateProfile);\n    this.props.updateCV(updateProfile, this.props.history);\n  }\n\n  render() {\n    const errors = this.state.errors;\n    const id = this.props.match.params.id;\n    const profile_tasks = this.props.profileBacklog.profile_tasks; //const profile_tasks = [];\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, profile_tasks) => {\n      if (profile_tasks.length < 1) {\n        //PROJECT IDENTIFIER CHECK\n        if (errors.projectNotFound) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, errors.projectNotFound);\n        } else if (errors.projectIdentifier) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, errors.projectIdentifier);\n        } else {\n          return React.createElement(\"div\", {\n            className: \"alert alert-info text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, \"No Project Tasks on this board\");\n        }\n      } else {\n        return React.createElement(CVBacklog, {\n          profile_tasks_prop: profile_tasks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        });\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, profile_tasks);\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Back to Profiles\"), React.createElement(\"div\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Edit CV form\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Session expire in 2 days\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Full name :\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.fullName\n      }),\n      placeholder: \"Full Name\",\n      name: \"fullName\",\n      onChange: this.onChange,\n      value: this.state.fullName,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), errors.fullName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, errors.fullName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Technology Area :\"), React.createElement(\"select\", {\n      className: \"form-control form-control-lg\",\n      name: \"technologyArea\",\n      value: this.state.technologyArea,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Technology Area\"), React.createElement(\"option\", {\n      value: \"Software\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Software\"), React.createElement(\"option\", {\n      value: \"Engineer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Engineer\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Experiences:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      placeholder: \"Summary of profile\",\n      name: \"summary\",\n      value: this.state.summary,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Years of Experiences:\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProfileTask/\".concat(id),\n      className: \"btn btn-primary mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \" Add Skills\"))), BoardContent)), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Domains:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.domains\n      }),\n      placeholder: \"Domains\",\n      name: \"domains\",\n      value: this.state.domains // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), errors.domains && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, errors.domains)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Certifications:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.certifications\n      }),\n      placeholder: \"Certifications\",\n      name: \"certifications\",\n      value: this.state.certifications // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), errors.certifications && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, errors.certifications)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Tools:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.tools\n      }),\n      placeholder: \"Tools\",\n      name: \"tools\",\n      value: this.state.tools // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), errors.tools && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, errors.tools)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Methodologies:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.methodologies\n      }),\n      placeholder: \"Methodologies\",\n      name: \"methodologies\",\n      value: this.state.methodologies // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), errors.methodologies && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, errors.methodologies)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Others:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.others\n      }),\n      placeholder: \"Others\",\n      name: \"methodologies\",\n      value: this.state.others // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), errors.others && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, errors.others)), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nCVBoard.propTypes = {\n  profileBacklog: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProfileByLink: PropTypes.func.isRequired,\n  updateCV: PropTypes.func.isRequired,\n  getProfileBacklog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile.profile,\n  profileBacklog: state.profileBacklog,\n  errors: state.errors,\n  //profileBacklog: state.profile.profileBacklog,\n  getProfileByLink: state.getProfileByLink,\n  getProfileBacklog: state.getProfileBacklog\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByLink,\n  updateCV,\n  getProfileBacklog\n})(requireAuth(CVBoard));","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\CVBoard.js"],"names":["React","Component","getProfileByLink","updateCV","PropTypes","connect","classnames","Link","requireAuth","setJWTTokenCandidate","jwt_decode","getProfileBacklog","CVBacklog","jsscompress","CVBoard","constructor","props","state","id","fullName","candidateEmail","profileIdentifier","token","summary","technologyArea","domains","certifications","tools","methodologies","others","errors","onChange","bind","onSubmit","componentDidMount","match","params","history","componentWillReceiveProps","nextProps","setState","profile","jwtToken","localStorage","setItem","decoded_jwtToken","console","log","exp","Date","now","currentTime","window","location","href","hm","Hauffman","decompressed","decompress","e","target","name","value","preventDefault","updateProfile","render","profile_tasks","profileBacklog","BoardContent","boardAlgorithm","length","projectNotFound","projectIdentifier","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\nimport { setJWTTokenCandidate } from \"../../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\r\nimport CVBacklog from \"./CVBacklog\";\r\nimport jsscompress from \"js-string-compression\";\r\n\r\nclass CVBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      fullName: \"\",\r\n      candidateEmail: \"\",\r\n      profileIdentifier: \"\",\r\n      token: \"\",\r\n      summary: \"\",\r\n      technologyArea: 0,\r\n      domains: \"\",\r\n      certifications: \"\",\r\n      tools: \"\",\r\n      methodologies: \"\",\r\n      others: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    this.props.getProfileByLink(id, this.props.history);\r\n\r\n    this.props.getProfileBacklog(id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier,\r\n      token,\r\n      summary,\r\n      technologyArea,\r\n      domains,\r\n      certifications,\r\n      tools,\r\n      methodologies,\r\n      others\r\n    } = nextProps.profile;\r\n\r\n    const jwtToken = localStorage.jwtToken;\r\n    // Only Take Care About Candidate Toke If doenst exist Current User\r\n    if (typeof jwtToken === \"undefined\" && typeof token != \"undefined\") {\r\n      // set our token in header ***\r\n      setJWTTokenCandidate(token);\r\n\r\n      // store the token in the localStorage\r\n      localStorage.setItem(\"jwtTokenCandidate\", token);\r\n      // decode token on React\r\n      const decoded_jwtToken = jwt_decode(token);\r\n      console.log(\r\n        \"Expire Remaining:\",\r\n        decoded_jwtToken.exp - Date.now() / 1000\r\n      );\r\n\r\n      const currentTime = Date.now() / 1000;\r\n      if (decoded_jwtToken.exp < currentTime) {\r\n        window.location.href = \"/\";\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier,\r\n      token,\r\n      technologyArea,\r\n      domains,\r\n      certifications,\r\n      tools,\r\n      methodologies,\r\n      others\r\n    });\r\n\r\n    if (summary) {\r\n      var hm = new jsscompress.Hauffman();\r\n      var decompressed = hm.decompress(summary);\r\n      this.setState({ summary: decompressed });\r\n      console.log(\"Decompresed\", hm.decompress(summary));\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProfile = {\r\n      id: this.state.id,\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail,\r\n      profileIdentifier: this.state.profileIdentifier,\r\n      summary: this.state.summary,\r\n      technologyArea: this.state.technologyArea,\r\n      domains: this.state.domains,\r\n      certifications: this.state.certifications,\r\n      tools: this.state.tools,\r\n      methodologies: this.state.methodologies,\r\n      others: this.state.others\r\n    };\r\n\r\n    console.log(updateProfile);\r\n\r\n    this.props.updateCV(updateProfile, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    const { profile_tasks } = this.props.profileBacklog;\r\n    //const profile_tasks = [];\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, profile_tasks) => {\r\n      if (profile_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER CHECK\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <CVBacklog profile_tasks_prop={profile_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, profile_tasks);\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                Back to Profiles\r\n              </Link>\r\n              <div className=\"display-4 text-center\">Edit CV form</div>\r\n              <hr />\r\n              <div className=\"text-center\">Session expire in 2 days</div>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <h6>Full name :</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.fullName}\r\n                    autoFocus={true}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Technology Area :</h6>\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"technologyArea\"\r\n                    value={this.state.technologyArea}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Technology Area</option>\r\n                    <option value=\"Software\">Software</option>\r\n                    <option value=\"Engineer\">Engineer</option>\r\n                  </select>\r\n                </div>\r\n                <hr />\r\n                <h6>Experiences:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    placeholder=\"Summary of profile\"\r\n                    name=\"summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Years of Experiences:</h6>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"col-12 text-right\">\r\n                      <Link\r\n                        to={`/addProfileTask/${id}`}\r\n                        className=\"btn btn-primary mb-3\"\r\n                      >\r\n                        <i className=\"fas fa-plus-circle\"> Add Skills</i>\r\n                      </Link>\r\n                    </div>\r\n                    {BoardContent}\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <h6>Domains:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.domains\r\n                    })}\r\n                    placeholder=\"Domains\"\r\n                    name=\"domains\"\r\n                    value={this.state.domains}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.domains && (\r\n                    <div className=\"invalid-feedback\">{errors.domains}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Certifications:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.certifications\r\n                    })}\r\n                    placeholder=\"Certifications\"\r\n                    name=\"certifications\"\r\n                    value={this.state.certifications}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.certifications && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.certifications}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Tools:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.tools\r\n                    })}\r\n                    placeholder=\"Tools\"\r\n                    name=\"tools\"\r\n                    value={this.state.tools}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.tools && (\r\n                    <div className=\"invalid-feedback\">{errors.tools}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Methodologies:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.methodologies\r\n                    })}\r\n                    placeholder=\"Methodologies\"\r\n                    name=\"methodologies\"\r\n                    value={this.state.methodologies}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.methodologies && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.methodologies}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Others:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.others\r\n                    })}\r\n                    placeholder=\"Others\"\r\n                    name=\"methodologies\"\r\n                    value={this.state.others}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.others && (\r\n                    <div className=\"invalid-feedback\">{errors.others}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCVBoard.propTypes = {\r\n  profileBacklog: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getProfileByLink: PropTypes.func.isRequired,\r\n  updateCV: PropTypes.func.isRequired,\r\n  getProfileBacklog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  profileBacklog: state.profileBacklog,\r\n  errors: state.errors,\r\n  //profileBacklog: state.profile.profileBacklog,\r\n  getProfileByLink: state.getProfileByLink,\r\n  getProfileBacklog: state.getProfileBacklog\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileByLink, updateCV, getProfileBacklog }\r\n)(requireAuth(CVBoard));\r\n"]},"metadata":{},"sourceType":"module"}