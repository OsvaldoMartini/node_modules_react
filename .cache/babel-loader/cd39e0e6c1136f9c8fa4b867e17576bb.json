{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.STORYBOARD_TYPE_ATTR = exports.CIRCULAR_REF = exports.deserialize = exports.serialize = undefined;\n\nvar _timm = require('timm');\n\nvar _lodash = require('../vendor/lodash');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar CIRCULAR_REF = '__SB_CIRCULAR__';\nvar STORYBOARD_TYPE_ATTR = '__SB_TYPE__'; // -------------------------------------\n// Main\n// -------------------------------------\n\nvar serialize = function serialize(obj) {\n  return doSerialize(obj, []);\n};\n\nvar deserialize = function deserialize(obj) {\n  return doDeserialize(obj);\n}; // -------------------------------------\n// Helpers\n// -------------------------------------\n\n\nvar doSerialize = function doSerialize(obj, stack) {\n  if (obj === undefined) return _defineProperty({}, STORYBOARD_TYPE_ATTR, 'UNDEFINED');\n  if (!(0, _lodash.isObject)(obj)) return obj; // Handle circular references (using `stack`)\n\n  if (stack.indexOf(obj) >= 0) return CIRCULAR_REF;\n  stack.push(obj);\n  var out = void 0; // Handle special cases\n\n  if ((0, _lodash.isError)(obj)) {\n    var _out;\n\n    var name = obj.name,\n        message = obj.message,\n        errorStack = obj.stack;\n    out = (_out = {}, _defineProperty(_out, STORYBOARD_TYPE_ATTR, 'ERROR'), _defineProperty(_out, 'name', name), _defineProperty(_out, 'message', message), _defineProperty(_out, 'stack', errorStack), _out);\n  } else if (obj instanceof Date) {\n    out = new Date(obj);\n  } else if (obj instanceof Buffer) {\n    var _out2;\n\n    out = (_out2 = {}, _defineProperty(_out2, STORYBOARD_TYPE_ATTR, 'BUFFER'), _defineProperty(_out2, 'data', Array.from(obj)), _out2); // Handle arrays\n  } else if (Array.isArray(obj)) {\n    out = obj.map(function (el) {\n      return doSerialize(el, stack);\n    }); // Handle objects\n  } else {\n    out = {};\n    Object.keys(obj).forEach(function (key) {\n      out[key] = doSerialize(obj[key], stack);\n    });\n  }\n\n  stack.pop();\n  return out;\n};\n\nvar doDeserialize = function doDeserialize(obj) {\n  if (!(0, _lodash.isObject)(obj)) return obj;\n  var out = void 0;\n\n  if (Array.isArray(obj)) {\n    out = obj.map(function (el) {\n      return doDeserialize(el);\n    });\n  } else if (obj instanceof Date) {\n    out = new Date(obj);\n  } else {\n    switch (obj[STORYBOARD_TYPE_ATTR]) {\n      case 'UNDEFINED':\n        out = undefined;\n        break;\n\n      case 'ERROR':\n        out = (0, _timm.omit)(obj, STORYBOARD_TYPE_ATTR);\n        break;\n\n      case 'BUFFER':\n        out = Buffer.from(obj.data);\n        break;\n\n      default:\n        out = {};\n        Object.keys(obj).forEach(function (key) {\n          out[key] = doDeserialize(obj[key]);\n        });\n        break;\n    }\n  }\n\n  return out;\n}; // -------------------------------------\n// API\n// -------------------------------------\n\n\nexports.serialize = serialize;\nexports.deserialize = deserialize;\nexports.CIRCULAR_REF = CIRCULAR_REF;\nexports.STORYBOARD_TYPE_ATTR = STORYBOARD_TYPE_ATTR;","map":null,"metadata":{},"sourceType":"script"}