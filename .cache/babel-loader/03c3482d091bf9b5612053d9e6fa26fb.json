{"ast":null,"code":"import _objectSpread from \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\TasksForms\\\\SkillsForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport NumericInput from \"react-numeric-input\";\nimport { addProfileTask, updateProfileTask } from \"../../../../actions/profileBacklogActions\";\n\nclass SkillsForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      title: \"\",\n      profileSequence: \"\",\n      profileIdentifier: \"\",\n      skilllYears: \"\",\n      skillDescription: \"\",\n      skillCompetence: \"\",\n      create_At: \"\",\n      profile: {},\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    console.log(this.props);\n  } // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.errors) {\n  //     this.setState({ errors: nextProps.errors });\n  //   }\n  //   const {\n  //     id,\n  //     profileSequence,\n  //     profileIdentifier,\n  //     title,\n  //     summary,\n  //     skilllYears,\n  //     skillDescription,\n  //     skillCompetence,\n  //     create_At\n  //   } = nextProps.profile_task;\n  //   this.setState({\n  //     id,\n  //     profileSequence,\n  //     profileIdentifier,\n  //     title,\n  //     skilllYears,\n  //     skillDescription,\n  //     skillCompetence,\n  //     create_At\n  //   });\n  // }\n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onChangeText(value) {\n    // if (/^\\d+$/.test(e.toString())) {\n    //   this.setState({ skilllYears: e });\n    // }\n    if (value) {\n      if (!/^[0-9]+$/.test(value.toString())) {\n        this.setState({\n          skilllYears: \"\"\n        });\n      } else {\n        this.setState({\n          skilllYears: value.toString()\n        });\n      }\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.props.typeForm === \"Add\") {\n      // const newTask = {\n      //   skilllYears: this.state.skilllYears,\n      //   skillDescription: this.state.skillDescription,\n      //   skillCompetence: this.state.skillCompetence\n      // };\n      const newTask = _objectSpread({}, this.props, {\n        //profileStaged: action.payload\n        profile: _objectSpread({}, this.props.profile, {\n          skilllYears: this.state.skilllYears,\n          skillDescription: this.state.skillDescription,\n          skillCompetence: this.state.skillCompetence,\n          taskType: this.props.taskType\n        })\n      });\n\n      this.props.addProfileTask(this.props.profileIdentifier, newTask.profile, this.props.history);\n    } else {\n      const UpdateProfileTask = {\n        id: this.state.id,\n        skilllYears: this.state.skilllYears,\n        skillDescription: this.state.skillDescription,\n        skillCompetence: this.state.skillCompetence\n      }; // console.log(UpdateProfileTask);\n\n      this.props.updateProfileTask(this.state.profileIdentifier, this.state.profileSequence, UpdateProfileTask, this.props.history);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          errors = _this$props.errors,\n          typeForm = _this$props.typeForm;\n    return React.createElement(\"div\", {\n      className: \"add-PBI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(this.props.profileIdentifier),\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Back to Edit CV\"), React.createElement(\"h4\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, typeForm, \" Skill\"), React.createElement(\"div\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), this.props.profile.profileSequence && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Skill ID: \", this.props.profile.profileSequence, \" \"), errors.profileNotFound && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Please Check the fields above:\", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), errors.profileNotFound)), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Compentence:\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.skillCompetence\n      }),\n      name: \"skillCompetence\",\n      placeholder: \"Organization\",\n      value: this.state.skillCompetence,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), errors.skillCompetence && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, errors.skillCompetence)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Technical details:\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.skillDescription\n      }),\n      name: \"\\r Technical details\",\n      placeholder: \"More Detail\",\n      value: this.state.skillDescription,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), errors.skillDescription && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, errors.skillDescription)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Skill more details :\"), React.createElement(\"select\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.skillDescription\n      }),\n      name: \"skillDescription\",\n      value: this.state.skillDescription,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Awarded\"), React.createElement(\"option\", {\n      value: \"Diplom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Diplom\"), React.createElement(\"option\", {\n      value: \"Bsc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Bsc\"), React.createElement(\"option\", {\n      value: \"Msc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Msc\"), React.createElement(\"option\", {\n      value: \"Mag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Mag\"), React.createElement(\"option\", {\n      value: \"Dipl.Ing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Dipl.Ing\"), React.createElement(\"option\", {\n      value: \"Phd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Phd\"), React.createElement(\"option\", {\n      value: \"Dr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Dr\")), errors.skillDescription && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, errors.skillDescription)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Year:\"), React.createElement(NumericInput, {\n      mobile: true,\n      min: 1,\n      max: 50,\n      className: \"form-control\",\n      name: \"skilllYears\",\n      onChange: this.onChangeText,\n      value: this.state.skilllYears,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), errors.skilllYears && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, errors.skilllYears), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nSkillsForm.propTypes = {\n  addProfileTask: PropTypes.func.isRequired,\n  updateProfileTask: PropTypes.func.isRequired,\n  title: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  title: state.title,\n  profile: state.profile.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addProfileTask,\n  updateProfileTask\n})(SkillsForm);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\TasksForms\\SkillsForm.js"],"names":["React","Component","connect","classnames","Link","PropTypes","NumericInput","addProfileTask","updateProfileTask","SkillsForm","constructor","state","id","title","profileSequence","profileIdentifier","skilllYears","skillDescription","skillCompetence","create_At","profile","errors","onChange","bind","onChangeText","onSubmit","componentDidMount","console","log","props","e","setState","target","name","value","test","toString","preventDefault","typeForm","newTask","taskType","history","UpdateProfileTask","render","profileNotFound","width","marginTop","fontSize","color","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport {\r\n  addProfileTask,\r\n  updateProfileTask\r\n} from \"../../../../actions/profileBacklogActions\";\r\n\r\nclass SkillsForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      title: \"\",\r\n      profileSequence: \"\",\r\n      profileIdentifier: \"\",\r\n      skilllYears: \"\",\r\n      skillDescription: \"\",\r\n      skillCompetence: \"\",\r\n      create_At: \"\",\r\n      profile: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state);\r\n    console.log(this.props);\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({ errors: nextProps.errors });\r\n  //   }\r\n\r\n  //   const {\r\n  //     id,\r\n  //     profileSequence,\r\n  //     profileIdentifier,\r\n  //     title,\r\n  //     summary,\r\n  //     skilllYears,\r\n  //     skillDescription,\r\n  //     skillCompetence,\r\n  //     create_At\r\n  //   } = nextProps.profile_task;\r\n\r\n  //   this.setState({\r\n  //     id,\r\n  //     profileSequence,\r\n  //     profileIdentifier,\r\n  //     title,\r\n  //     skilllYears,\r\n  //     skillDescription,\r\n  //     skillCompetence,\r\n  //     create_At\r\n  //   });\r\n  // }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ skilllYears: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ skilllYears: \"\" });\r\n      } else {\r\n        this.setState({ skilllYears: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.props.typeForm === \"Add\") {\r\n      // const newTask = {\r\n      //   skilllYears: this.state.skilllYears,\r\n      //   skillDescription: this.state.skillDescription,\r\n      //   skillCompetence: this.state.skillCompetence\r\n      // };\r\n      const newTask = {\r\n        ...this.props,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...this.props.profile,\r\n          skilllYears: this.state.skilllYears,\r\n          skillDescription: this.state.skillDescription,\r\n          skillCompetence: this.state.skillCompetence,\r\n          taskType: this.props.taskType\r\n        }\r\n      };\r\n\r\n      this.props.addProfileTask(\r\n        this.props.profileIdentifier,\r\n        newTask.profile,\r\n        this.props.history\r\n      );\r\n    } else {\r\n      const UpdateProfileTask = {\r\n        id: this.state.id,\r\n        skilllYears: this.state.skilllYears,\r\n        skillDescription: this.state.skillDescription,\r\n        skillCompetence: this.state.skillCompetence\r\n      };\r\n\r\n      // console.log(UpdateProfileTask);\r\n      this.props.updateProfileTask(\r\n        this.state.profileIdentifier,\r\n        this.state.profileSequence,\r\n        UpdateProfileTask,\r\n        this.props.history\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors, typeForm } = this.props;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">{typeForm} Skill</h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                {this.props.profile.profileSequence && (\r\n                  <span>Skill ID: {this.props.profile.profileSequence} </span>\r\n                )}\r\n                {errors.profileNotFound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.profileNotFound}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <h6>Compentence:</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.skillCompetence\r\n                    })}\r\n                    name=\"skillCompetence\"\r\n                    placeholder=\"Organization\"\r\n                    value={this.state.skillCompetence}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.skillCompetence && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.skillCompetence}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Technical details:</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.skillDescription\r\n                    })}\r\n                    name=\"\r\n                    Technical details\"\r\n                    placeholder=\"More Detail\"\r\n                    value={this.state.skillDescription}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.skillDescription && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.skillDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Skill more details :</h6>\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.skillDescription\r\n                    })}\r\n                    name=\"skillDescription\"\r\n                    value={this.state.skillDescription}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Awarded</option>\r\n                    <option value=\"Diplom\">Diplom</option>\r\n                    <option value=\"Bsc\">Bsc</option>\r\n                    <option value=\"Msc\">Msc</option>\r\n                    <option value=\"Mag\">Mag</option>\r\n                    <option value=\"Dipl.Ing\">Dipl.Ing</option>\r\n                    <option value=\"Phd\">Phd</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                  </select>\r\n                  {errors.skillDescription && (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        marginTop: \".25rem\",\r\n                        fontSize: \"80%\",\r\n                        color: \"#dc3545\"\r\n                      }}\r\n                    >\r\n                      {errors.skillDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Year:</h6>\r\n                <NumericInput\r\n                  mobile\r\n                  min={1}\r\n                  max={50}\r\n                  className=\"form-control\"\r\n                  name=\"skilllYears\"\r\n                  onChange={this.onChangeText}\r\n                  value={this.state.skilllYears}\r\n                />\r\n                {errors.skilllYears && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.skilllYears}\r\n                  </div>\r\n                )}\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSkillsForm.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  title: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  title: state.title,\r\n  profile: state.profile.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask, updateProfileTask }\r\n)(SkillsForm);\r\n"]},"metadata":{},"sourceType":"module"}