{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\securityUtils\\\\SecureRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredfRoute = (_ref) => {\n  let Component = _ref.component,\n      security = _ref.security,\n      otherProps = _objectWithoutProperties(_ref, [\"component\", \"security\"]);\n\n  return React.createElement(Route, Object.assign({}, otherProps, {\n    render: props => security.validToken === true ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n};\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\securityUtils\\SecureRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","SecuredfRoute","Component","component","security","otherProps","props","validToken","SecuredRoute","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAa,GAAG;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,QAAzB,QAAyBA,QAAzB;AAAA,MAAsCC,UAAtC;;AAAA,SACpB,oBAAC,KAAD,oBACMA,UADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IACXF,QAAQ,CAACG,UAAT,KAAwB,IAAxB,GACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,GAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADoB;AAAA,CAAtB;;AAaAE,YAAY,CAACC,SAAb,GAAyB;AACvBL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,MAAV,CAAiBC;AADJ,CAAzB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,QAAQ,EAAES,KAAK,CAACT;AADgB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACa,eAAD,CAAP,CAAyBJ,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredfRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n"]},"metadata":{},"sourceType":"module"}