{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_PROFILES, GET_PROFILE, DELETE_PROFILE } from \"./types\";\nimport { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const createProfile = (profile, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/profile\", profile);\n    history.push(\"/profiles\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getProfiles = () => async dispatch => {\n  const res = await axios.get(\"/api/profile/all\");\n  dispatch({\n    type: GET_PROFILES,\n    payload: res.data\n  });\n};\nexport const getProfile = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/\".concat(id));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/profiles\");\n  }\n};\nexport const getProfileByLink = (linkCv, token, history) => async dispatch => {\n  try {\n    // set our token in header ***\n    setJWTTokenCandidate(token); //const res = await axios.post(\"/api/users/editcv\", linkCv);\n    //const res = await axios.post(\"/api/profile/editcv\", linkCv);\n\n    const res = await axios.get(\"/api/profile/editcv/\".concat(linkCv));\n    const jwtToken = localStorage.jwtToken; // Only Take Care About Candidate Toke If doenst exist Current User\n\n    if (!jwtToken) {\n      // store the token in the localStorage\n      localStorage.setItem(\"jwtTokenCandidate\", token); // decode token on React\n\n      const decoded_jwtToken = jwt_decode(token);\n      console.log(\"Expire time:\", decoded_jwtToken.exp);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded_jwtToken.exp < currentTime) {\n        window.location.href = \"/\";\n      }\n    }\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error); //history.push(\"/profiles\");\n  }\n};\nexport const updateCV = profile => async dispatch => {\n  console.log(\"updateCV\", profile);\n\n  try {\n    const res = await axios.post(\"https://personal-profiler.herokuapp.com/api/editcv\", profile);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const deleteProfile = id => async dispatch => {\n  if (window.confirm(\"Are you sure? This will delete the project and all the data related to it\")) {\n    await axios.delete(\"/api/profile/\".concat(id));\n    dispatch({\n      type: DELETE_PROFILE,\n      payload: id\n    });\n  }\n};","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\actions\\profileActions.js"],"names":["axios","GET_ERRORS","GET_PROFILES","GET_PROFILE","DELETE_PROFILE","setJWTTokenCandidate","jwt_decode","createProfile","profile","history","dispatch","post","push","type","payload","err","response","data","getProfiles","res","get","getProfile","id","error","getProfileByLink","linkCv","token","jwtToken","localStorage","setItem","decoded_jwtToken","console","log","exp","currentTime","Date","now","window","location","href","updateCV","deleteProfile","confirm","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,EAAgDC,cAAhD,QAAsE,SAAtE;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,MAAMC,QAAN,IAAkB;AACnE,MAAI;AACF,UAAMV,KAAK,CAACW,IAAN,CAAW,cAAX,EAA2BH,OAA3B,CAAN;AACAC,IAAAA,OAAO,CAACG,IAAR,CAAa,WAAb;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,UADC;AAEPa,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,UADC;AAEPa,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMR,QAAN,IAAkB;AACjD,QAAMS,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,kBAAV,CAAlB;AACAV,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAEX,YADC;AAEPY,IAAAA,OAAO,EAAEK,GAAG,CAACF;AAFN,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMI,UAAU,GAAG,CAACC,EAAD,EAAKb,OAAL,KAAiB,MAAMC,QAAN,IAAkB;AAC3D,MAAI;AACF,UAAMS,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,wBAA0BE,EAA1B,EAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAAEK,GAAG,CAACF;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOM,KAAP,EAAc;AACdd,IAAAA,OAAO,CAACG,IAAR,CAAa,WAAb;AACD;AACF,CAVM;AAYP,OAAO,MAAMY,gBAAgB,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBjB,OAAhB,KAA4B,MAAMC,QAAN,IAAkB;AAC5E,MAAI;AACF;AACAL,IAAAA,oBAAoB,CAACqB,KAAD,CAApB,CAFE,CAIF;AACA;;AACA,UAAMP,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,+BAAiCK,MAAjC,EAAlB;AAEA,UAAME,QAAQ,GAAGC,YAAY,CAACD,QAA9B,CARE,CASF;;AACA,QAAI,CAACA,QAAL,EAAe;AACb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CH,KAA1C,EAFa,CAGb;;AACA,YAAMI,gBAAgB,GAAGxB,UAAU,CAACoB,KAAD,CAAnC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,gBAAgB,CAACG,GAA7C;AAEA,YAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,UAAIN,gBAAgB,CAACG,GAAjB,GAAuBC,WAA3B,EAAwC;AACtCG,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;AACF;;AAED7B,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAAEK,GAAG,CAACF;AAFN,KAAD,CAAR;AAID,GA3BD,CA2BE,OAAOM,KAAP,EAAc;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EADc,CAEd;AACD;AACF,CAhCM;AAkCP,OAAO,MAAMiB,QAAQ,GAAGhC,OAAO,IAAI,MAAME,QAAN,IAAkB;AACnDqB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBxB,OAAxB;;AACA,MAAI;AACF,UAAMW,GAAG,GAAG,MAAMnB,KAAK,CAACW,IAAN,CAChB,oDADgB,EAEhBH,OAFgB,CAAlB;AAKAE,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAAEK,GAAG,CAACF;AAFN,KAAD,CAAR;AAKAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,UADC;AAEPa,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAfD,CAeE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,UADC;AAEPa,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAvBM;AAyBP,OAAO,MAAMwB,aAAa,GAAGnB,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AACnD,MACE2B,MAAM,CAACK,OAAP,CACE,2EADF,CADF,EAIE;AACA,UAAM1C,KAAK,CAAC2C,MAAN,wBAA6BrB,EAA7B,EAAN;AACAZ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,cADC;AAEPU,MAAAA,OAAO,EAAEQ;AAFF,KAAD,CAAR;AAID;AACF,CAZM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROFILES, GET_PROFILE, DELETE_PROFILE } from \"./types\";\r\nimport { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createProfile = (profile, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/profile\", profile);\r\n    history.push(\"/profiles\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n  const res = await axios.get(\"/api/profile/all\");\r\n  dispatch({\r\n    type: GET_PROFILES,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProfile = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/${id}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/profiles\");\r\n  }\r\n};\r\n\r\nexport const getProfileByLink = (linkCv, token, history) => async dispatch => {\r\n  try {\r\n    // set our token in header ***\r\n    setJWTTokenCandidate(token);\r\n\r\n    //const res = await axios.post(\"/api/users/editcv\", linkCv);\r\n    //const res = await axios.post(\"/api/profile/editcv\", linkCv);\r\n    const res = await axios.get(`/api/profile/editcv/${linkCv}`);\r\n\r\n    const jwtToken = localStorage.jwtToken;\r\n    // Only Take Care About Candidate Toke If doenst exist Current User\r\n    if (!jwtToken) {\r\n      // store the token in the localStorage\r\n      localStorage.setItem(\"jwtTokenCandidate\", token);\r\n      // decode token on React\r\n      const decoded_jwtToken = jwt_decode(token);\r\n      console.log(\"Expire time:\", decoded_jwtToken.exp);\r\n\r\n      const currentTime = Date.now() / 1000;\r\n      if (decoded_jwtToken.exp < currentTime) {\r\n        window.location.href = \"/\";\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    //history.push(\"/profiles\");\r\n  }\r\n};\r\n\r\nexport const updateCV = profile => async dispatch => {\r\n  console.log(\"updateCV\", profile);\r\n  try {\r\n    const res = await axios.post(\r\n      \"https://personal-profiler.herokuapp.com/api/editcv\",\r\n      profile\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProfile = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/profile/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROFILE,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}