{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/brentvatne/coding/react-navigation-core/src/views/withNavigationFocus.js\";\nimport React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport withNavigation from './withNavigation';\nexport default function withNavigationFocus(Component) {\n  var ComponentWithNavigationFocus = function (_React$Component) {\n    _inherits(ComponentWithNavigationFocus, _React$Component);\n\n    function ComponentWithNavigationFocus(props) {\n      var _this;\n\n      _classCallCheck(this, ComponentWithNavigationFocus);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(ComponentWithNavigationFocus).call(this, props));\n      _this.subscriptions = [props.navigation.addListener('didFocus', function () {\n        return _this.setState({\n          isFocused: true\n        });\n      }), props.navigation.addListener('willBlur', function () {\n        return _this.setState({\n          isFocused: false\n        });\n      })];\n      _this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false\n      };\n      return _this;\n    }\n\n    _createClass(ComponentWithNavigationFocus, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.subscriptions.forEach(function (sub) {\n          return sub.remove();\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Component, _extends({}, this.props, {\n          isFocused: this.state.isFocused,\n          ref: this.props.onRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          }\n        }));\n      }\n    }]);\n\n    return ComponentWithNavigationFocus;\n  }(React.Component);\n\n  ComponentWithNavigationFocus.displayName = \"withNavigationFocus(\" + (Component.displayName || Component.name) + \")\";\n  return hoistStatics(withNavigation(ComponentWithNavigationFocus, {\n    forwardRef: false\n  }), Component);\n}","map":null,"metadata":{},"sourceType":"module"}