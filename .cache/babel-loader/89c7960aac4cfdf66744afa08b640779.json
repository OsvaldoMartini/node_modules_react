{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\AddProfileTask.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProfileTask } from \"../../../actions/profileBacklogActions\";\nimport PropTypes from \"prop-types\";\nimport NumericInput from \"react-numeric-input\";\n\nclass AddProfileTask extends Component {\n  constructor(props) {\n    super(props);\n    const _this$props$match$par = this.props.match.params,\n          id = _this$props$match$par.id,\n          taskType = _this$props$match$par.taskType;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      taskType: taskType,\n      priority: 0,\n      dueDate: \"\",\n      profileIdentifier: id,\n      totalYears: 0,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  } // on change\n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onChangeText(value) {\n    // if (/^\\d+$/.test(e.toString())) {\n    //   this.setState({ totalYears: e });\n    // }\n    if (value) {\n      if (!/^[0-9]+$/.test(value.toString())) {\n        this.setState({\n          totalYears: \"\"\n        });\n      } else {\n        this.setState({\n          totalYears: value.toString()\n        });\n      }\n    }\n  } //on submit\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      taskType: this.state.taskType,\n      totalYears: this.state.totalYears,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProfileTask(this.state.profileIdentifier, newTask, this.props.history);\n  }\n\n  render() {\n    const _this$props$match$par2 = this.props.match.params,\n          id = _this$props$match$par2.id,\n          taskType = _this$props$match$par2.taskType;\n    const errors = this.state.errors;\n    let TaskContent;\n\n    const taskAlgorithm = (errors, taskType) => {\n      if (taskType === \"skill\") {\n        if (errors.summary) {\n          errors.summary = \"Please fill the field: \\\"Competences\\\"\";\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"\\\"Add Skills\\\"\");\n      } else if (taskType === \"educ\") {\n        if (errors.summary) {\n          errors.summary = \"Please fill the field: \\\"Education\\\"\";\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"\\\"Add Education\\\"\");\n      }\n    };\n\n    TaskContent = taskAlgorithm(errors, taskType);\n    return React.createElement(\"div\", {\n      className: \"add-PBI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(id),\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Back to Edit CV\"), React.createElement(\"h4\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, TaskContent), React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Profile Identifier: \", this.state.profileIdentifier, \" \"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Competences:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      name: \"summary\",\n      placeholder: \"Example: Object Oriented Analysis\",\n      value: this.state.summary,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Total of Years:\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(NumericInput, {\n      mobile: true,\n      min: 0,\n      max: 50,\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.totalYears\n      }),\n      name: \"totalYears\",\n      onChange: this.onChangeText,\n      value: this.state.totalYears,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), babnanan, errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nAddProfileTask.propTypes = {\n  addProfileTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addProfileTask\n})(AddProfileTask);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\AddProfileTask.js"],"names":["React","Component","Link","connect","classnames","addProfileTask","PropTypes","NumericInput","AddProfileTask","constructor","props","match","params","id","taskType","state","summary","acceptanceCriteria","priority","dueDate","profileIdentifier","totalYears","errors","onChange","bind","onChangeText","onSubmit","componentWillReceiveProps","nextProps","setState","e","target","name","value","test","toString","preventDefault","newTask","history","render","TaskContent","taskAlgorithm","babnanan","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProfileTask } from \"../../../actions/profileBacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\n\r\nclass AddProfileTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id, taskType } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      taskType: taskType,\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      profileIdentifier: id,\r\n      totalYears: 0,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ totalYears: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ totalYears: \"\" });\r\n      } else {\r\n        this.setState({ totalYears: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      taskType: this.state.taskType,\r\n      totalYears: this.state.totalYears,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProfileTask(\r\n      this.state.profileIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id, taskType } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    let TaskContent;\r\n\r\n    const taskAlgorithm = (errors, taskType) => {\r\n      if (taskType === \"skill\") {\r\n        if (errors.summary) {\r\n          errors.summary = `Please fill the field: \"Competences\"`;\r\n        }\r\n\r\n        return <div>\"Add Skills\"</div>;\r\n      } else if (taskType === \"educ\") {\r\n        if (errors.summary) {\r\n          errors.summary = `Please fill the field: \"Education\"`;\r\n        }\r\n        return <div>\"Add Education\"</div>;\r\n      }\r\n    };\r\n\r\n    TaskContent = taskAlgorithm(errors, taskType);\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/editcv/${id}`} className=\"btn btn-light\">\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">{TaskContent}</h4>\r\n              <p className=\"lead text-center\">\r\n                Profile Identifier: {this.state.profileIdentifier}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <h6>Competences:</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Example: Object Oriented Analysis\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Total of Years:</h6>\r\n                <div>\r\n                  <NumericInput\r\n                    mobile\r\n                    min={0}\r\n                    max={50}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.totalYears\r\n                    })}\r\n                    name=\"totalYears\"\r\n                    onChange={this.onChangeText}\r\n                    value={this.state.totalYears}\r\n                  />\r\n                  {babnanan}\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProfileTask.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask }\r\n)(AddProfileTask);\r\n"]},"metadata":{},"sourceType":"module"}