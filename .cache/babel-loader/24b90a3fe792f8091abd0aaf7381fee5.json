{"ast":null,"code":"import _objectSpread from \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\TasksForms\\\\LanguageForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { addProfileTask, updateProfileTask } from \"../../../../actions/profileBacklogActions\";\n\nclass LanguagesForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      title: \"\",\n      profileSequence: \"\",\n      profileIdentifier: \"\",\n      levelLanguage: \"\",\n      language: \"\",\n      create_At: \"\",\n      profile: {},\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    console.log(this.props);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.props.typeForm === \"Add\") {\n      const newTask = _objectSpread({}, this.props, {\n        //profileStaged: action.payload\n        profile: _objectSpread({}, this.props.profile, {\n          levelLanguage: this.state.levelLanguage,\n          language: this.state.language,\n          taskType: this.props.taskType\n        })\n      });\n\n      this.props.addProfileTask(this.props.profileIdentifier, newTask.profile, this.props.history);\n    } else {\n      const UpdateProfileTask = {\n        id: this.state.id,\n        levelLanguage: this.state.levelLanguage,\n        language: this.state.language\n      }; // console.log(UpdateProfileTask);\n\n      this.props.updateProfileTask(this.state.profileIdentifier, this.state.profileSequence, UpdateProfileTask, this.props.history);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          errors = _this$props.errors,\n          typeForm = _this$props.typeForm;\n    return React.createElement(\"div\", {\n      className: \"add-PBI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(this.props.profileIdentifier),\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Back to Edit CV\"), React.createElement(\"h4\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, typeForm, \" Language\"), React.createElement(\"div\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), this.props.profile.profileSequence && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Language ID: \", this.props.profile.profileSequence, \" \"), errors.profileNotFound && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Please Check the fields above:\", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), errors.profileNotFound)), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Organization:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.language\n      }),\n      name: \"language\",\n      placeholder: \"Language\",\n      value: this.state.language,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), errors.language && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, errors.language)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Qualification Awarded :\"), React.createElement(\"select\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.levelLanguage\n      }),\n      name: \"levelLanguage\",\n      value: this.state.levelLanguage,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Level\"), React.createElement(\"option\", {\n      value: \"Beginner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Beginner\"), React.createElement(\"option\", {\n      value: \"Medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"Fluent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Fluent\"), React.createElement(\"option\", {\n      value: \"Mother Tongue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Mother Tongue\")), errors.levelLanguage && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, errors.levelLanguage)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nLanguagesForm.propTypes = {\n  addProfileTask: PropTypes.func.isRequired,\n  updateProfileTask: PropTypes.func.isRequired,\n  title: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  title: state.title,\n  profile: state.profile.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addProfileTask,\n  updateProfileTask\n})(LanguagesForm);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\TasksForms\\LanguageForm.js"],"names":["React","Component","connect","classnames","Link","PropTypes","addProfileTask","updateProfileTask","LanguagesForm","constructor","state","id","title","profileSequence","profileIdentifier","levelLanguage","language","create_At","profile","errors","onChange","bind","onSubmit","componentDidMount","console","log","props","e","setState","target","name","value","preventDefault","typeForm","newTask","taskType","history","UpdateProfileTask","render","profileNotFound","width","marginTop","fontSize","color","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  addProfileTask,\r\n  updateProfileTask\r\n} from \"../../../../actions/profileBacklogActions\";\r\n\r\nclass LanguagesForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      title: \"\",\r\n      profileSequence: \"\",\r\n      profileIdentifier: \"\",\r\n      levelLanguage: \"\",\r\n      language: \"\",\r\n      create_At: \"\",\r\n      profile: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state);\r\n    console.log(this.props);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.props.typeForm === \"Add\") {\r\n      const newTask = {\r\n        ...this.props,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...this.props.profile,\r\n          levelLanguage: this.state.levelLanguage,\r\n          language: this.state.language,\r\n          taskType: this.props.taskType\r\n        }\r\n      };\r\n\r\n      this.props.addProfileTask(\r\n        this.props.profileIdentifier,\r\n        newTask.profile,\r\n        this.props.history\r\n      );\r\n    } else {\r\n      const UpdateProfileTask = {\r\n        id: this.state.id,\r\n        levelLanguage: this.state.levelLanguage,\r\n        language: this.state.language\r\n      };\r\n\r\n      // console.log(UpdateProfileTask);\r\n      this.props.updateProfileTask(\r\n        this.state.profileIdentifier,\r\n        this.state.profileSequence,\r\n        UpdateProfileTask,\r\n        this.props.history\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors, typeForm } = this.props;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">{typeForm} Language</h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                {this.props.profile.profileSequence && (\r\n                  <span>\r\n                    Language ID: {this.props.profile.profileSequence}{\" \"}\r\n                  </span>\r\n                )}\r\n                {errors.profileNotFound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.profileNotFound}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <form onSubmit={this.onSubmit}>\r\n                <h6>Organization:</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.language\r\n                    })}\r\n                    name=\"language\"\r\n                    placeholder=\"Language\"\r\n                    value={this.state.language}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.language && (\r\n                    <div className=\"invalid-feedback\">{errors.language}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Qualification Awarded :</h6>\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.levelLanguage\r\n                    })}\r\n                    name=\"levelLanguage\"\r\n                    value={this.state.levelLanguage}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Level</option>\r\n                    <option value=\"Beginner\">Beginner</option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"Fluent\">Fluent</option>\r\n                    <option value=\"Mother Tongue\">Mother Tongue</option>\r\n                  </select>\r\n                  {errors.levelLanguage && (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        marginTop: \".25rem\",\r\n                        fontSize: \"80%\",\r\n                        color: \"#dc3545\"\r\n                      }}\r\n                    >\r\n                      {errors.levelLanguage}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Save\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanguagesForm.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  title: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  title: state.title,\r\n  profile: state.profile.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask, updateProfileTask }\r\n)(LanguagesForm);\r\n"]},"metadata":{},"sourceType":"module"}