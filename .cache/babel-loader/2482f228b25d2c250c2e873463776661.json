{"ast":null,"code":"import _objectSpread from \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\TasksForms\\\\ClientProjectForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport NumericInput from \"react-numeric-input\";\nimport { getProfileTask, updateProfileTask } from \"../../../../actions/profileBacklogActions\";\n\nclass ClientProjectForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      title: \"\",\n      profileSequence: \"\",\n      profileIdentifier: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      months: \"\",\n      position: \"\",\n      company: \"\",\n      generalContext: \"\",\n      responsabilities: \"\",\n      technicalEnviroment: \"\",\n      create_At: \"\",\n      profile: {},\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    //const { profile_backlog_id, pt_id } = this.props.match.params;\n    this.props.getProfileTask(this.props.profileIdentifier, this.props.profileSequence, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile_ta = nextProps.profile_task,\n          id = _nextProps$profile_ta.id,\n          summary = _nextProps$profile_ta.summary,\n          acceptanceCriteria = _nextProps$profile_ta.acceptanceCriteria,\n          taskType = _nextProps$profile_ta.taskType,\n          totalYears = _nextProps$profile_ta.totalYears,\n          priority = _nextProps$profile_ta.priority,\n          dueDate = _nextProps$profile_ta.dueDate,\n          profileIdentifier = _nextProps$profile_ta.profileIdentifier,\n          profileSequence = _nextProps$profile_ta.profileSequence,\n          create_At = _nextProps$profile_ta.create_At;\n    this.setState({\n      id,\n      summary,\n      acceptanceCriteria,\n      taskType,\n      totalYears,\n      priority,\n      dueDate,\n      profileIdentifier,\n      profileSequence,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onChangeText(value) {\n    // if (/^\\d+$/.test(e.toString())) {\n    //   this.setState({ educYear: e });\n    // }\n    if (value) {\n      if (!/^[0-9]+$/.test(value.toString())) {\n        this.setState({\n          educYear: \"\"\n        });\n      } else {\n        this.setState({\n          educYear: value.toString()\n        });\n      }\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.props.typeForm === \"Add\") {\n      // const newTask = {\n      //   educYear: this.state.educYear,\n      //   educAwarded: this.state.educAwarded,\n      //   educOrganization: this.state.educOrganization\n      // };\n      const newTask = _objectSpread({}, this.props, {\n        //profileStaged: action.payload\n        profile: _objectSpread({}, this.props.profile, {\n          start_date: this.state.start_date,\n          end_date: this.state.end_date,\n          months: this.state.months,\n          position: this.state.position,\n          company: this.state.company,\n          generalContext: this.state.generalContext,\n          responsabilities: this.state.responsabilities,\n          technicalEnviroment: this.state.technicalEnviroment,\n          taskType: this.props.taskType\n        })\n      });\n\n      this.props.addProfileTask(this.props.profileIdentifier, newTask.profile, this.props.history);\n    } else {\n      const UpdateProfileTask = {\n        id: this.state.id,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date,\n        months: this.state.months,\n        position: this.state.position,\n        company: this.state.company,\n        generalContext: this.state.generalContext,\n        responsabilities: this.state.responsabilities,\n        technicalEnviroment: this.state.technicalEnviroment\n      }; // console.log(UpdateProfileTask);\n\n      this.props.updateProfileTask(this.state.profileIdentifier, this.state.profileSequence, UpdateProfileTask, this.props.history);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          errors = _this$props.errors,\n          typeForm = _this$props.typeForm;\n    return React.createElement(\"div\", {\n      className: \"add-PBI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(this.props.profileIdentifier),\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Back to Edit CV\"), React.createElement(\"h4\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, typeForm, \" Client/Project\"), React.createElement(\"div\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), this.props.profileSequence && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Client/Project ID: \", this.props.profileSequence, \" \"), errors.profileNotFound && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Please Check the fields above:\", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), errors.profileNotFound)), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"input\", {\n      type: \"date\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.datesProject\n      }),\n      name: \"start_date\",\n      value: this.state.start_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(\"input\", {\n      type: \"date\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.datesProject\n      }),\n      name: \"end_date\",\n      value: this.state.end_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, errors.datesProject && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, errors.datesProject)))), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Position:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.position\n      }),\n      placeholder: \"Position\",\n      name: \"position\",\n      value: this.state.position // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), errors.position && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, errors.position)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Company:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.company\n      }),\n      placeholder: \"Company\",\n      name: \"company\",\n      value: this.state.company // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), errors.company && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, errors.company)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"General Context:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.generalContext\n      }),\n      placeholder: \"General Context\",\n      name: \"generalContext\",\n      value: this.state.generalContext // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), errors.generalContext && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, errors.generalContext)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Responsabilities:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.responsabilities\n      }),\n      placeholder: \"Responsabilities\",\n      name: \"responsabilities\",\n      value: this.state.responsabilities // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), errors.responsabilities && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, errors.responsabilities)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Technical Enviroment:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.technicalEnviroment\n      }),\n      placeholder: \"Technical Enviroment\",\n      name: \"technicalEnviroment\",\n      value: this.state.technicalEnviroment // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), errors.technicalEnviroment && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, errors.technicalEnviroment)), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nClientProjectForm.propTypes = {\n  getProfileTask: PropTypes.func.isRequired,\n  updateProfileTask: PropTypes.func.isRequired,\n  title: PropTypes.object.isRequired,\n  profile_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  title: state.title,\n  profile_task: state.profileBacklog.profile_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getProfileTask,\n  updateProfileTask\n})(ClientProjectForm);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\TasksForms\\ClientProjectForm.js"],"names":["React","Component","connect","classnames","Link","PropTypes","NumericInput","getProfileTask","updateProfileTask","ClientProjectForm","constructor","state","id","title","profileSequence","profileIdentifier","start_date","end_date","months","position","company","generalContext","responsabilities","technicalEnviroment","create_At","profile","errors","onChange","bind","onChangeText","onSubmit","componentDidMount","props","history","componentWillReceiveProps","nextProps","setState","profile_task","summary","acceptanceCriteria","taskType","totalYears","priority","dueDate","e","target","name","value","test","toString","educYear","preventDefault","typeForm","newTask","addProfileTask","UpdateProfileTask","render","profileNotFound","width","marginTop","fontSize","color","datesProject","marginBottom","height","propTypes","func","isRequired","object","mapStateToProps","profileBacklog"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport {\r\n  getProfileTask,\r\n  updateProfileTask\r\n} from \"../../../../actions/profileBacklogActions\";\r\n\r\nclass ClientProjectForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      title: \"\",\r\n      profileSequence: \"\",\r\n      profileIdentifier: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      months: \"\",\r\n      position: \"\",\r\n      company: \"\",\r\n      generalContext: \"\",\r\n      responsabilities: \"\",\r\n      technicalEnviroment: \"\",\r\n      create_At: \"\",\r\n      profile: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //const { profile_backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProfileTask(\r\n      this.props.profileIdentifier,\r\n      this.props.profileSequence,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      summary,\r\n      acceptanceCriteria,\r\n      taskType,\r\n      totalYears,\r\n      priority,\r\n      dueDate,\r\n      profileIdentifier,\r\n      profileSequence,\r\n      create_At\r\n    } = nextProps.profile_task;\r\n\r\n    this.setState({\r\n      id,\r\n      summary,\r\n      acceptanceCriteria,\r\n      taskType,\r\n      totalYears,\r\n      priority,\r\n      dueDate,\r\n      profileIdentifier,\r\n      profileSequence,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ educYear: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ educYear: \"\" });\r\n      } else {\r\n        this.setState({ educYear: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.props.typeForm === \"Add\") {\r\n      // const newTask = {\r\n      //   educYear: this.state.educYear,\r\n      //   educAwarded: this.state.educAwarded,\r\n      //   educOrganization: this.state.educOrganization\r\n      // };\r\n      const newTask = {\r\n        ...this.props,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...this.props.profile,\r\n          start_date: this.state.start_date,\r\n          end_date: this.state.end_date,\r\n          months: this.state.months,\r\n          position: this.state.position,\r\n          company: this.state.company,\r\n          generalContext: this.state.generalContext,\r\n          responsabilities: this.state.responsabilities,\r\n          technicalEnviroment: this.state.technicalEnviroment,\r\n          taskType: this.props.taskType\r\n        }\r\n      };\r\n\r\n      this.props.addProfileTask(\r\n        this.props.profileIdentifier,\r\n        newTask.profile,\r\n        this.props.history\r\n      );\r\n    } else {\r\n      const UpdateProfileTask = {\r\n        id: this.state.id,\r\n        start_date: this.state.start_date,\r\n        end_date: this.state.end_date,\r\n        months: this.state.months,\r\n        position: this.state.position,\r\n        company: this.state.company,\r\n        generalContext: this.state.generalContext,\r\n        responsabilities: this.state.responsabilities,\r\n        technicalEnviroment: this.state.technicalEnviroment\r\n      };\r\n\r\n      // console.log(UpdateProfileTask);\r\n      this.props.updateProfileTask(\r\n        this.state.profileIdentifier,\r\n        this.state.profileSequence,\r\n        UpdateProfileTask,\r\n        this.props.history\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors, typeForm } = this.props;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                {typeForm} Client/Project\r\n              </h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                {this.props.profileSequence && (\r\n                  <span>Client/Project ID: {this.props.profileSequence} </span>\r\n                )}\r\n                {errors.profileNotFound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.profileNotFound}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group col\">\r\n                      <h6>Start Date</h6>\r\n                      <input\r\n                        type=\"date\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.datesProject\r\n                        })}\r\n                        name=\"start_date\"\r\n                        value={this.state.start_date}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group col\">\r\n                      <h6>End Date</h6>\r\n                      <input\r\n                        type=\"date\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.datesProject\r\n                        })}\r\n                        name=\"end_date\"\r\n                        value={this.state.end_date}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-12 text-center\">\r\n                      {errors.datesProject && (\r\n                        <div\r\n                          style={{\r\n                            width: \"100%\",\r\n                            marginTop: \".25rem\",\r\n                            fontSize: \"80%\",\r\n                            color: \"#dc3545\"\r\n                          }}\r\n                        >\r\n                          {errors.datesProject}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <h6>Position:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.position\r\n                    })}\r\n                    placeholder=\"Position\"\r\n                    name=\"position\"\r\n                    value={this.state.position}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.position && (\r\n                    <div className=\"invalid-feedback\">{errors.position}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Company:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.company\r\n                    })}\r\n                    placeholder=\"Company\"\r\n                    name=\"company\"\r\n                    value={this.state.company}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.company && (\r\n                    <div className=\"invalid-feedback\">{errors.company}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>General Context:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.generalContext\r\n                    })}\r\n                    placeholder=\"General Context\"\r\n                    name=\"generalContext\"\r\n                    value={this.state.generalContext}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.generalContext && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.generalContext}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Responsabilities:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.responsabilities\r\n                    })}\r\n                    placeholder=\"Responsabilities\"\r\n                    name=\"responsabilities\"\r\n                    value={this.state.responsabilities}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.responsabilities && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.responsabilities}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Technical Enviroment:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.technicalEnviroment\r\n                    })}\r\n                    placeholder=\"Technical Enviroment\"\r\n                    name=\"technicalEnviroment\"\r\n                    value={this.state.technicalEnviroment}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.technicalEnviroment && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.technicalEnviroment}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nClientProjectForm.propTypes = {\r\n  getProfileTask: PropTypes.func.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  title: PropTypes.object.isRequired,\r\n  profile_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  title: state.title,\r\n  profile_task: state.profileBacklog.profile_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileTask, updateProfileTask }\r\n)(ClientProjectForm);\r\n"]},"metadata":{},"sourceType":"module"}