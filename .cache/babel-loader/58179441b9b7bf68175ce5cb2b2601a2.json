{"ast":null,"code":"import _objectSpread from \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\TasksForms\\\\ClientProjectForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { addProfileTask, updateProfileTask } from \"../../../../actions/profileBacklogActions\";\nimport { Form, FormControl, ControlLabel, Button } from \"react-bootstrap\";\n\nclass ClientProjectForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      profileSequence: \"\",\n      profileIdentifier: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      months: \"\",\n      position: \"\",\n      company: \"\",\n      generalContext: \"\",\n      responsibilities: [],\n      technicalEnviroment: \"\",\n      create_At: \"\",\n      profile_task: {},\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } // componentDidMount() {\n  //   //const { profile_backlog_id, pt_id } = this.props.match.params;\n  //   this.props.getProfileTask(\n  //     this.props.profileIdentifier,\n  //     this.props.profileSequence,\n  //     this.props.history\n  //   );\n  // }\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    if (this.props.typeForm === \"Update\" && nextProps.profile_task !== this.state.profile_task) {\n      if (nextProps.profile_task) {\n        this.setState({\n          profile_task: nextProps.profile_task\n        });\n      }\n\n      const _nextProps$profile_ta = nextProps.profile_task,\n            id = _nextProps$profile_ta.id,\n            profileSequence = _nextProps$profile_ta.profileSequence,\n            profileIdentifier = _nextProps$profile_ta.profileIdentifier,\n            start_date = _nextProps$profile_ta.start_date,\n            end_date = _nextProps$profile_ta.end_date,\n            months = _nextProps$profile_ta.months,\n            position = _nextProps$profile_ta.position,\n            company = _nextProps$profile_ta.company,\n            generalContext = _nextProps$profile_ta.generalContext,\n            responsibilities = _nextProps$profile_ta.responsibilities,\n            technicalEnviroment = _nextProps$profile_ta.technicalEnviroment,\n            create_At = _nextProps$profile_ta.create_At;\n      this.setState({\n        id,\n        profileSequence,\n        profileIdentifier,\n        start_date,\n        end_date,\n        months,\n        position,\n        company,\n        generalContext,\n        responsibilities,\n        technicalEnviroment,\n        create_At\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onChangeText(value) {\n    // if (/^\\d+$/.test(e.toString())) {\n    //   this.setState({ educYear: e });\n    // }\n    if (value) {\n      if (!/^[0-9]+$/.test(value.toString())) {\n        this.setState({\n          educYear: \"\"\n        });\n      } else {\n        this.setState({\n          educYear: value.toString()\n        });\n      }\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.props.typeForm === \"Add\") {\n      // const newTask = {\n      //   educYear: this.state.educYear,\n      //   educAwarded: this.state.educAwarded,\n      //   educOrganization: this.state.educOrganization\n      // };\n      const newTask = _objectSpread({}, this.props, {\n        //profileStaged: action.payload\n        profile: _objectSpread({}, this.props.profile, {\n          start_date: this.state.start_date,\n          end_date: this.state.end_date,\n          months: this.state.months,\n          position: this.state.position,\n          company: this.state.company,\n          generalContext: this.state.generalContext,\n          responsibilities: this.state.responsibilities,\n          technicalEnviroment: this.state.technicalEnviroment,\n          taskType: this.props.taskType\n        })\n      });\n\n      this.props.addProfileTask(this.props.profileIdentifier, newTask.profile, this.props.history);\n    } else {\n      const UpdateProfileTask = {\n        id: this.state.id,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date,\n        months: this.state.months,\n        position: this.state.position,\n        company: this.state.company,\n        generalContext: this.state.generalContext,\n        responsibilities: this.state.responsibilities,\n        technicalEnviroment: this.state.technicalEnviroment\n      }; // console.log(UpdateProfileTask);\n\n      this.props.updateProfileTask(this.state.profileIdentifier, this.state.profileSequence, UpdateProfileTask, this.props.history);\n    }\n  }\n\n  addResponsability() {\n    const responsibilities = this.state.responsibilities; // if (this.props.typeForm === \"Update\") {\n    //   responsibilities = this.props.profile_task.responsibilities;\n    // }\n    // responsibilities.push({\n    //   id: responsibilities.length,\n    //   prompt: \"\",\n    //   answer: \"\"\n    // });\n    //const newResp = { id: responsibilities.length, prompt: \"\", answer: \"\" };\n\n    this.setState({\n      responsibilities: [...responsibilities, {\n        id: responsibilities.length,\n        prompt: \"\",\n        answer: \"\"\n      }]\n    });\n  }\n\n  updateResponsabilityPart(event, index, part) {\n    const responsibilities = this.state.responsibilities;\n    responsibilities[index][part] = event.target.value;\n    this.setState({\n      responsibilities\n    });\n  }\n\n  addStack() {\n    this.props.addStack(this.state);\n  }\n\n  render() {\n    const _this$props = this.props,\n          errors = _this$props.errors,\n          typeForm = _this$props.typeForm,\n          responsibilities = _this$props.responsibilities;\n    console.log(responsibilities);\n\n    const boardAlgorithm = (errors, responsibilities, typeForm) => {\n      if (typeof responsibilities === \"undefined\" || responsibilities.length < 1) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, \" \", React.createElement(\"div\", {\n          className: \"alert alert-danger text-center\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, \"Please add Responsibilities (max caracteres: 100)\"));\n      } else {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-6 text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Role/function:\"))), React.createElement(\"div\", {\n          className: \"form-group col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-6 text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"Activities/Tasks:\")))), this.state.responsibilities.map((responsability, index) => {\n          return React.createElement(\"div\", {\n            key: responsability.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-group col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-6 text-left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }, React.createElement(FormControl, {\n            placeholder: \"e.g: Functional & technical analyst\",\n            onChange: event => this.updateResponsabilityPart(event, index, \"respFunction\"),\n            className: classnames(\"form-control form-control-lg\", {\n              \"is-invalid\": errors.reponsibility\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"form-group col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-6 text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          }, React.createElement(FormControl, {\n            placeholder: \"Exc.: Write technical analysis for...\",\n            onChange: event => this.updateResponsabilityPart(event, index, \"respTask\"),\n            className: classnames(\"form-control form-control-lg\", {\n              \"is-invalid\": errors.reponsibility\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          })))));\n        }), React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, errors.reponsibility && React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          style: {\n            width: \"100%\",\n            marginTop: \".25rem\",\n            fontSize: \"80%\",\n            color: \"#dc3545\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, errors.reponsibility))));\n      }\n    };\n\n    return React.createElement(\"div\", {\n      className: \"add-PBI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(this.props.profileIdentifier),\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Back to Edit CV\"), React.createElement(\"h4\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, typeForm, \" Client/Project\"), React.createElement(\"div\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), this.props.profileSequence && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Client/Project ID: \", this.props.profileSequence, \" \"), errors.profileNotFound && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Please Check the fields above:\", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), errors.profileNotFound)), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"input\", {\n      type: \"date\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.datesProject\n      }),\n      name: \"start_date\",\n      value: this.state.start_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(\"input\", {\n      type: \"date\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.datesProject\n      }),\n      name: \"end_date\",\n      value: this.state.end_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, errors.datesProject && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, errors.datesProject)))), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Position:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.position\n      }),\n      placeholder: \"Position\",\n      name: \"position\",\n      value: this.state.position // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), errors.position && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, errors.position)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Company:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.company\n      }),\n      placeholder: \"Company\",\n      name: \"company\",\n      value: this.state.company // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), errors.company && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, errors.company)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"General Context:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.generalContext\n      }),\n      placeholder: \"General Context\",\n      name: \"generalContext\",\n      value: this.state.generalContext // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }), errors.generalContext && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, errors.generalContext)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"Responsibilities:\"), boardAlgorithm(errors, this.state.responsibilities, typeForm), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }), React.createElement(Button, {\n      caption: \"Add Responsability\",\n      className: \"btn btn-light\",\n      onClick: () => this.addResponsability(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, \"Add Responsability\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"Technical Enviroment:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.technicalEnviroment\n      }),\n      placeholder: \"Technical Enviroment\",\n      name: \"technicalEnviroment\",\n      value: this.state.technicalEnviroment // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), errors.technicalEnviroment && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, errors.technicalEnviroment)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nClientProjectForm.propTypes = {\n  //getProfileTask: PropTypes.func.isRequired,\n  addProfileTask: PropTypes.func.isRequired,\n  updateProfileTask: PropTypes.func.isRequired,\n  profile_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile_task: state.profileBacklog.profile_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addProfileTask,\n  updateProfileTask\n})(ClientProjectForm);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\TasksForms\\ClientProjectForm.js"],"names":["React","Component","connect","classnames","Link","PropTypes","addProfileTask","updateProfileTask","Form","FormControl","ControlLabel","Button","ClientProjectForm","constructor","state","id","profileSequence","profileIdentifier","start_date","end_date","months","position","company","generalContext","responsibilities","technicalEnviroment","create_At","profile_task","errors","onChange","bind","onChangeText","onSubmit","componentWillReceiveProps","nextProps","setState","props","typeForm","e","target","name","value","test","toString","educYear","preventDefault","newTask","profile","taskType","history","UpdateProfileTask","addResponsability","length","prompt","answer","updateResponsabilityPart","event","index","part","addStack","render","console","log","boardAlgorithm","map","responsability","reponsibility","width","marginTop","fontSize","color","profileNotFound","datesProject","marginBottom","height","propTypes","func","isRequired","object","mapStateToProps","profileBacklog"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  addProfileTask,\r\n  updateProfileTask\r\n} from \"../../../../actions/profileBacklogActions\";\r\nimport { Form, FormControl, ControlLabel, Button } from \"react-bootstrap\";\r\n\r\nclass ClientProjectForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      profileSequence: \"\",\r\n      profileIdentifier: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      months: \"\",\r\n      position: \"\",\r\n      company: \"\",\r\n      generalContext: \"\",\r\n      responsibilities: [],\r\n      technicalEnviroment: \"\",\r\n      create_At: \"\",\r\n      profile_task: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   //const { profile_backlog_id, pt_id } = this.props.match.params;\r\n  //   this.props.getProfileTask(\r\n  //     this.props.profileIdentifier,\r\n  //     this.props.profileSequence,\r\n  //     this.props.history\r\n  //   );\r\n  // }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (\r\n      this.props.typeForm === \"Update\" &&\r\n      nextProps.profile_task !== this.state.profile_task\r\n    ) {\r\n      if (nextProps.profile_task) {\r\n        this.setState({ profile_task: nextProps.profile_task });\r\n      }\r\n\r\n      const {\r\n        id,\r\n        profileSequence,\r\n        profileIdentifier,\r\n        start_date,\r\n        end_date,\r\n        months,\r\n        position,\r\n        company,\r\n        generalContext,\r\n        responsibilities,\r\n        technicalEnviroment,\r\n        create_At\r\n      } = nextProps.profile_task;\r\n\r\n      this.setState({\r\n        id,\r\n        profileSequence,\r\n        profileIdentifier,\r\n        start_date,\r\n        end_date,\r\n        months,\r\n        position,\r\n        company,\r\n        generalContext,\r\n        responsibilities,\r\n        technicalEnviroment,\r\n        create_At\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ educYear: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ educYear: \"\" });\r\n      } else {\r\n        this.setState({ educYear: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.props.typeForm === \"Add\") {\r\n      // const newTask = {\r\n      //   educYear: this.state.educYear,\r\n      //   educAwarded: this.state.educAwarded,\r\n      //   educOrganization: this.state.educOrganization\r\n      // };\r\n      const newTask = {\r\n        ...this.props,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...this.props.profile,\r\n          start_date: this.state.start_date,\r\n          end_date: this.state.end_date,\r\n          months: this.state.months,\r\n          position: this.state.position,\r\n          company: this.state.company,\r\n          generalContext: this.state.generalContext,\r\n          responsibilities: this.state.responsibilities,\r\n          technicalEnviroment: this.state.technicalEnviroment,\r\n          taskType: this.props.taskType\r\n        }\r\n      };\r\n\r\n      this.props.addProfileTask(\r\n        this.props.profileIdentifier,\r\n        newTask.profile,\r\n        this.props.history\r\n      );\r\n    } else {\r\n      const UpdateProfileTask = {\r\n        id: this.state.id,\r\n        start_date: this.state.start_date,\r\n        end_date: this.state.end_date,\r\n        months: this.state.months,\r\n        position: this.state.position,\r\n        company: this.state.company,\r\n        generalContext: this.state.generalContext,\r\n        responsibilities: this.state.responsibilities,\r\n        technicalEnviroment: this.state.technicalEnviroment\r\n      };\r\n\r\n      // console.log(UpdateProfileTask);\r\n      this.props.updateProfileTask(\r\n        this.state.profileIdentifier,\r\n        this.state.profileSequence,\r\n        UpdateProfileTask,\r\n        this.props.history\r\n      );\r\n    }\r\n  }\r\n\r\n  addResponsability() {\r\n    const { responsibilities } = this.state;\r\n    // if (this.props.typeForm === \"Update\") {\r\n    //   responsibilities = this.props.profile_task.responsibilities;\r\n    // }\r\n\r\n    // responsibilities.push({\r\n    //   id: responsibilities.length,\r\n    //   prompt: \"\",\r\n    //   answer: \"\"\r\n    // });\r\n    //const newResp = { id: responsibilities.length, prompt: \"\", answer: \"\" };\r\n    this.setState({\r\n      responsibilities: [\r\n        ...responsibilities,\r\n        { id: responsibilities.length, prompt: \"\", answer: \"\" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  updateResponsabilityPart(event, index, part) {\r\n    const { responsibilities } = this.state;\r\n\r\n    responsibilities[index][part] = event.target.value;\r\n\r\n    this.setState({ responsibilities });\r\n  }\r\n\r\n  addStack() {\r\n    this.props.addStack(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { errors, typeForm, responsibilities } = this.props;\r\n    console.log(responsibilities);\r\n\r\n    const boardAlgorithm = (errors, responsibilities, typeForm) => {\r\n      if (\r\n        typeof responsibilities === \"undefined\" ||\r\n        responsibilities.length < 1\r\n      ) {\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              Please add Responsibilities (max caracteres: 100)\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <Form>\r\n            <hr />\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <div className=\"col-6 text-left\">\r\n                    <ControlLabel>Role/function:</ControlLabel>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group col\">\r\n                  <div className=\"col-6 text-left\">\r\n                    <ControlLabel>Activities/Tasks:</ControlLabel>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.responsibilities.map((responsability, index) => {\r\n                return (\r\n                  <div key={responsability.id}>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group col\">\r\n                        <div className=\"col-6 text-left\">\r\n                          <FormControl\r\n                            placeholder=\"e.g: Functional & technical analyst\"\r\n                            onChange={event =>\r\n                              this.updateResponsabilityPart(\r\n                                event,\r\n                                index,\r\n                                \"respFunction\"\r\n                              )\r\n                            }\r\n                            className={classnames(\r\n                              \"form-control form-control-lg\",\r\n                              {\r\n                                \"is-invalid\": errors.reponsibility\r\n                              }\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col\">\r\n                        <div className=\"col-6 text-right\">\r\n                          <FormControl\r\n                            placeholder=\"Exc.: Write technical analysis for...\"\r\n                            onChange={event =>\r\n                              this.updateResponsabilityPart(\r\n                                event,\r\n                                index,\r\n                                \"respTask\"\r\n                              )\r\n                            }\r\n                            className={classnames(\r\n                              \"form-control form-control-lg\",\r\n                              {\r\n                                \"is-invalid\": errors.reponsibility\r\n                              }\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div className=\"text-center\">\r\n                {errors.reponsibility && (\r\n                  <div\r\n                    className=\"alert alert-danger\"\r\n                    role=\"alert\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.reponsibility}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                {typeForm} Client/Project\r\n              </h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                {this.props.profileSequence && (\r\n                  <span>Client/Project ID: {this.props.profileSequence} </span>\r\n                )}\r\n                {errors.profileNotFound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.profileNotFound}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group col\">\r\n                      <h6>Start Date</h6>\r\n                      <input\r\n                        type=\"date\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.datesProject\r\n                        })}\r\n                        name=\"start_date\"\r\n                        value={this.state.start_date}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group col\">\r\n                      <h6>End Date</h6>\r\n                      <input\r\n                        type=\"date\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.datesProject\r\n                        })}\r\n                        name=\"end_date\"\r\n                        value={this.state.end_date}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-12 text-center\">\r\n                      {errors.datesProject && (\r\n                        <div\r\n                          style={{\r\n                            width: \"100%\",\r\n                            marginTop: \".25rem\",\r\n                            fontSize: \"80%\",\r\n                            color: \"#dc3545\"\r\n                          }}\r\n                        >\r\n                          {errors.datesProject}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <h6>Position:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.position\r\n                    })}\r\n                    placeholder=\"Position\"\r\n                    name=\"position\"\r\n                    value={this.state.position}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.position && (\r\n                    <div className=\"invalid-feedback\">{errors.position}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Company:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.company\r\n                    })}\r\n                    placeholder=\"Company\"\r\n                    name=\"company\"\r\n                    value={this.state.company}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.company && (\r\n                    <div className=\"invalid-feedback\">{errors.company}</div>\r\n                  )}\r\n                </div>\r\n                <h6>General Context:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.generalContext\r\n                    })}\r\n                    placeholder=\"General Context\"\r\n                    name=\"generalContext\"\r\n                    value={this.state.generalContext}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.generalContext && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.generalContext}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Responsibilities:</h6>\r\n                {boardAlgorithm(errors, this.state.responsibilities, typeForm)}\r\n                <hr />\r\n\r\n                <Button\r\n                  caption=\"Add Responsability\"\r\n                  className=\"btn btn-light\"\r\n                  onClick={() => this.addResponsability()}\r\n                >\r\n                  Add Responsability\r\n                </Button>\r\n                <hr />\r\n                <h6>Technical Enviroment:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.technicalEnviroment\r\n                    })}\r\n                    placeholder=\"Technical Enviroment\"\r\n                    name=\"technicalEnviroment\"\r\n                    value={this.state.technicalEnviroment}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.technicalEnviroment && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.technicalEnviroment}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Save\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nClientProjectForm.propTypes = {\r\n  //getProfileTask: PropTypes.func.isRequired,\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  profile_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile_task: state.profileBacklog.profile_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask, updateProfileTask }\r\n)(ClientProjectForm);\r\n"]},"metadata":{},"sourceType":"module"}