{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\ProfileCV\\\\EditCV.js\";\nimport React, { Component } from \"react\";\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport requireAuth from \"../hocs/requireAuth\";\n\nclass EditCV extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      fullName: \"\",\n      candidateEmail: \"\",\n      linkCv: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile = nextProps.profile,\n          id = _nextProps$profile.id,\n          fullName = _nextProps$profile.fullName,\n          candidateEmail = _nextProps$profile.candidateEmail,\n          linkCv = _nextProps$profile.linkCv;\n    this.setState({\n      id,\n      fullName,\n      candidateEmail,\n      linkCv\n    });\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getProfileByLink(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProfile = {\n      id: this.state.id,\n      fullName: this.state.fullName,\n      candidateEmail: this.state.candidateEmail,\n      linkCv: this.state.linkCv\n    }; //console.log(updateProfile);\n\n    this.props.updateCV(updateProfile, this.props.history);\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Back to Profiles\"), React.createElement(\"h5\", {\n      className: \"display-1 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Edit CV form\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Session expire in 2 days\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.fullName\n      }),\n      placeholder: \"Full Name\",\n      name: \"fullName\",\n      onChange: this.onChange,\n      value: this.state.fullName,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), errors.fullName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, errors.fullName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-lg\",\n      name: \"technoArea\",\n      value: this.state.technoArea,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Technologia Area\"), React.createElement(\"option\", {\n      value: \"Software\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Software\"), React.createElement(\"option\", {\n      value: \"Engineer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Engineer\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), \"Experiences:\", React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      placeholder: \"Summary of profile\",\n      name: \"description\",\n      value: this.state.summary,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.totalYear\n      }),\n      placeholder: \"Total year of experience\",\n      name: \"totalYear\",\n      value: this.state.totalYear // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), errors.totalYear && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, errors.totalYear)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.projectName\n      }),\n      placeholder: \"Project Name\",\n      name: \"projectName\",\n      value: this.state.projectName // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), errors.projectName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, errors.projectName)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Start in\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control form-control-lg\",\n      name: \"start_date\",\n      value: this.state.start_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"End in\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control form-control-lg\",\n      name: \"end_date\",\n      value: this.state.end_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.description\n      }),\n      placeholder: \"Project Description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), errors.description && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, errors.description)), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nEditCV.propTypes = {\n  getProfileByLink: PropTypes.func.isRequired,\n  updateCV: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByLink,\n  updateCV\n})(requireAuth(EditCV));","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\ProfileCV\\EditCV.js"],"names":["React","Component","getProfileByLink","updateCV","PropTypes","connect","classnames","Link","requireAuth","EditCV","constructor","state","id","fullName","candidateEmail","linkCv","errors","onChange","bind","onSubmit","componentWillReceiveProps","nextProps","setState","profile","componentDidMount","props","match","params","history","e","target","name","value","preventDefault","updateProfile","render","technoArea","summary","totalYear","projectName","start_date","end_date","description","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\n\r\nclass EditCV extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      fullName: \"\",\r\n      candidateEmail: \"\",\r\n      linkCv: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const { id, fullName, candidateEmail, linkCv } = nextProps.profile;\r\n\r\n    this.setState({\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      linkCv\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProfileByLink(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProfile = {\r\n      id: this.state.id,\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail,\r\n      linkCv: this.state.linkCv\r\n    };\r\n\r\n    //console.log(updateProfile);\r\n\r\n    this.props.updateCV(updateProfile, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                Back to Profiles\r\n              </Link>\r\n              <h5 className=\"display-1 text-center\">Edit CV form</h5>\r\n              <hr />\r\n              <div className=\"text-center\">Session expire in 2 days</div>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.fullName}\r\n                    autoFocus={true}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"technoArea\"\r\n                    value={this.state.technoArea}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Technologia Area</option>\r\n                    <option value=\"Software\">Software</option>\r\n                    <option value=\"Engineer\">Engineer</option>\r\n                  </select>\r\n                </div>\r\n                <hr />\r\n                Experiences:\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    placeholder=\"Summary of profile\"\r\n                    name=\"description\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.totalYear\r\n                    })}\r\n                    placeholder=\"Total year of experience\"\r\n                    name=\"totalYear\"\r\n                    value={this.state.totalYear}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.totalYear && (\r\n                    <div className=\"invalid-feedback\">{errors.totalYear}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start in</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>End in</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditCV.propTypes = {\r\n  getProfileByLink: PropTypes.func.isRequired,\r\n  updateCV: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileByLink, updateCV }\r\n)(requireAuth(EditCV));\r\n"]},"metadata":{},"sourceType":"module"}