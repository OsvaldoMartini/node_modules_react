{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.passesFilter = exports.setOnChangeFilter = exports.getConfig = exports.config = exports.init = undefined;\n\nvar _chalk = require('chalk');\n\nvar _chalk2 = _interopRequireDefault(_chalk);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar included = null;\nvar excluded = null;\nvar cachedThreshold = null;\nvar mainStory = null;\nvar onChangeFilter = null;\n\nvar init = function init(deps) {\n  mainStory = deps.mainStory;\n  /* istanbul ignore if */\n\n  if (!mainStory) throw new Error('MISSING_DEPENDENCIES');\n  mainStory.info('storyboard', 'Log filter: ' + _chalk2.default.cyan.bold(getConfig()));\n};\n\nvar setUpFilters = function setUpFilters() {\n  included = [];\n  excluded = [];\n  cachedThreshold = {};\n  var filter = getConfig();\n  var specs = filter.split(/[\\s,]+/);\n  specs.forEach(function (spec) {\n    if (!spec.length) return;\n    var tokens = spec.split(':');\n    var src = tokens[0].replace(/\\*/g, '.*?');\n    var level = tokens[1];\n\n    if (src[0] === '-') {\n      excluded.push({\n        re: new RegExp('^' + src.substr(1) + '$')\n      });\n    } else {\n      if (tokens.length < 1) {\n        mainStory.error('storyboard', 'Incorrect filter element: ' + _chalk2.default.cyan.bold(spec));\n        return;\n      }\n\n      level = level.toUpperCase();\n      if (level === '*') level = 'TRACE';\n      var threshold = _constants.LEVEL_STR_TO_NUM[level];\n      if (threshold == null) threshold = _constants.LEVEL_STR_TO_NUM.DEBUG;\n      included.push({\n        re: new RegExp('^' + src + '$'),\n        threshold: threshold\n      });\n    }\n  });\n};\n\nvar getStorage = function getStorage() {\n  if (typeof window === 'undefined') return process.env;\n\n  try {\n    /* eslint-disable no-undef */\n    return window && window.localStorage ? window.localStorage : {};\n    /* eslint-enable no-undef */\n  } catch (err) {\n    return {}; // no storage available\n  }\n};\n\nvar getConfig = function getConfig() {\n  var store = getStorage();\n  var filter = store[_constants.FILTER_KEY];\n  if (filter == null || !filter.length) filter = _constants.DEFAULT_FILTER;\n  return filter;\n};\n\nvar config = function config(filter) {\n  var store = getStorage();\n  store[_constants.FILTER_KEY] = filter || '';\n  cachedThreshold = null;\n  setUpFilters();\n  var newFilter = getConfig();\n  if (onChangeFilter) onChangeFilter(newFilter);\n  mainStory.info('storyboard', 'Log filter is now: ' + _chalk2.default.cyan.bold(newFilter));\n};\n\nvar setOnChangeFilter = function setOnChangeFilter(fn) {\n  onChangeFilter = fn;\n};\n\nvar calcThreshold = function calcThreshold(src) {\n  for (var i = 0; i < excluded.length; i++) {\n    if (excluded[i].re.test(src)) return null;\n  }\n\n  for (var _i = 0; _i < included.length; _i++) {\n    if (included[_i].re.test(src)) return included[_i].threshold;\n  }\n\n  return null;\n};\n/* eslint-disable no-prototype-builtins */\n\n\nvar passesFilter = function passesFilter(src, level) {\n  var thresh = void 0;\n\n  if (cachedThreshold.hasOwnProperty(src)) {\n    thresh = cachedThreshold[src];\n  } else {\n    cachedThreshold[src] = calcThreshold(src);\n    thresh = cachedThreshold[src];\n  }\n\n  return thresh != null && level >= thresh;\n};\n/* eslint-enable no-prototype-builtins */\n\n\nsetUpFilters(); // -----------------------------------------\n// API\n// -----------------------------------------\n\nexports.init = init;\nexports.config = config;\nexports.getConfig = getConfig;\nexports.setOnChangeFilter = setOnChangeFilter;\nexports.passesFilter = passesFilter;","map":null,"metadata":{},"sourceType":"script"}