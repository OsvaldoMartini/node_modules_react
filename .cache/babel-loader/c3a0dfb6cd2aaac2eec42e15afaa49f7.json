{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\TasksForms\\\\EducationForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport NumericInput from \"react-numeric-input\";\n\nclass EducationForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      profileSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      taskType: \"\",\n      totalYears: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      profileIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    }; //this.onChange = this.onChange.bind(this);\n    //this.onChangeText = this.onChangeText.bind(this);\n    //this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    const _this$props$match$par = this.props.match.params,\n          profile_backlog_id = _this$props$match$par.profile_backlog_id,\n          pt_id = _this$props$match$par.pt_id;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile_ta = nextProps.profile_task,\n          id = _nextProps$profile_ta.id,\n          profileSequence = _nextProps$profile_ta.profileSequence,\n          summary = _nextProps$profile_ta.summary,\n          acceptanceCriteria = _nextProps$profile_ta.acceptanceCriteria,\n          taskType = _nextProps$profile_ta.taskType,\n          totalYears = _nextProps$profile_ta.totalYears,\n          priority = _nextProps$profile_ta.priority,\n          dueDate = _nextProps$profile_ta.dueDate,\n          profileIdentifier = _nextProps$profile_ta.profileIdentifier,\n          create_At = _nextProps$profile_ta.create_At;\n    this.setState({\n      id,\n      profileSequence,\n      summary,\n      acceptanceCriteria,\n      taskType,\n      totalYears,\n      priority,\n      dueDate,\n      profileIdentifier,\n      create_At\n    });\n  }\n\n  render() {\n    const errors = this.props.errors;\n    return React.createElement(\"div\", {\n      className: \"add-PBI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(this.props.profileIdentifier),\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Back to Edit CV\"), React.createElement(\"h4\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Update Education\"), React.createElement(\"div\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \"Education ID: \", this.props.profileSequence, \" \"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Organization:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      name: \"summary\",\n      placeholder: \"Profile Task summary\",\n      value: this.props.summary,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Year:\"), React.createElement(NumericInput, {\n      value: this.props.value,\n      onChange: value => this.setState({\n        value\n      }),\n      onLimitReached: (isMax, msg) => console.log(isMax, msg),\n      totalWidth: 240,\n      totalHeight: 50,\n      iconSize: 25,\n      step: 1,\n      valueType: \"real\",\n      min: 1900,\n      max: new Date().getFullYear(),\n      rounded: true,\n      textColor: \"#B0228C\",\n      iconStyle: {\n        color: \"white\"\n      },\n      rightButtonBackgroundColor: \"#EA3788\",\n      leftButtonBackgroundColor: \"#E56B70\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), errors.totalYears && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, errors.totalYears), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nEducationForm.propTypes = {\n  getProfileTask: PropTypes.func.isRequired,\n  profile_task: PropTypes.object.isRequired,\n  updateProfileTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile_task: state.profileBacklog.profile_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {})(EducationForm);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\TasksForms\\EducationForm.js"],"names":["React","Component","connect","classnames","Link","PropTypes","NumericInput","EducationForm","constructor","state","id","profileSequence","summary","acceptanceCriteria","taskType","totalYears","priority","dueDate","profileIdentifier","create_At","errors","componentDidMount","console","log","props","match","params","profile_backlog_id","pt_id","componentWillReceiveProps","nextProps","setState","profile_task","render","onSubmit","onChange","value","isMax","msg","Date","getFullYear","color","width","marginTop","fontSize","propTypes","getProfileTask","func","isRequired","object","updateProfileTask","mapStateToProps","profileBacklog"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AACpCO,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,EADO;AAEXC,MAAAA,eAAe,EAAE,EAFN;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,kBAAkB,EAAE,EAJT;AAKXC,MAAAA,QAAQ,EAAE,EALC;AAMXC,MAAAA,UAAU,EAAE,EAND;AAOXC,MAAAA,QAAQ,EAAE,EAPC;AAQXC,MAAAA,OAAO,EAAE,EARE;AASXC,MAAAA,iBAAiB,EAAE,EATR;AAUXC,MAAAA,SAAS,EAAE,EAVA;AAWXC,MAAAA,MAAM,EAAE;AAXG,KAAb,CAHY,CAgBZ;AACA;AACA;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AADkB,kCAEoB,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAFrC;AAAA,UAEVC,kBAFU,yBAEVA,kBAFU;AAAA,UAEUC,KAFV,yBAEUA,KAFV;AAGnB;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACV,MAAd,EAAsB;AACpB,WAAKW,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAAEU,SAAS,CAACV;AAApB,OAAd;AACD;;AAHkC,kCAgB/BU,SAAS,CAACE,YAhBqB;AAAA,UAMjCtB,EANiC,yBAMjCA,EANiC;AAAA,UAOjCC,eAPiC,yBAOjCA,eAPiC;AAAA,UAQjCC,OARiC,yBAQjCA,OARiC;AAAA,UASjCC,kBATiC,yBASjCA,kBATiC;AAAA,UAUjCC,QAViC,yBAUjCA,QAViC;AAAA,UAWjCC,UAXiC,yBAWjCA,UAXiC;AAAA,UAYjCC,QAZiC,yBAYjCA,QAZiC;AAAA,UAajCC,OAbiC,yBAajCA,OAbiC;AAAA,UAcjCC,iBAdiC,yBAcjCA,iBAdiC;AAAA,UAejCC,SAfiC,yBAejCA,SAfiC;AAkBnC,SAAKY,QAAL,CAAc;AACZrB,MAAAA,EADY;AAEZC,MAAAA,eAFY;AAGZC,MAAAA,OAHY;AAIZC,MAAAA,kBAJY;AAKZC,MAAAA,QALY;AAMZC,MAAAA,UANY;AAOZC,MAAAA,QAPY;AAQZC,MAAAA,OARY;AASZC,MAAAA,iBATY;AAUZC,MAAAA;AAVY,KAAd;AAYD;;AAEDc,EAAAA,MAAM,GAAG;AAAA,UACCb,MADD,GACY,KAAKI,KADjB,CACCJ,MADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,EAAE,oBAAa,KAAKI,KAAL,CAAWN,iBAAxB,CADJ;AAEE,MAAA,SAAS,EAAC,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAOE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,EAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,oBAEiB,KAAKM,KAAL,CAAWb,eAF5B,EAE6C,GAF7C,CARF,EAYE;AAAM,MAAA,QAAQ,EAAE,KAAKuB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAE/B,UAAU,CAAC,8BAAD,EAAiC;AACpD,sBAAciB,MAAM,CAACR;AAD+B,OAAjC,CAFvB;AAKE,MAAA,IAAI,EAAC,SALP;AAME,MAAA,WAAW,EAAC,sBANd;AAOE,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWZ,OAPpB;AAQE,MAAA,QAAQ,EAAE,KAAKuB,QARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWGf,MAAM,CAACR,OAAP,IACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCQ,MAAM,CAACR,OAA1C,CAZJ,CAFF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBF,EAkBE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWY,KADpB;AAEE,MAAA,QAAQ,EAAEA,KAAK,IAAI,KAAKL,QAAL,CAAc;AAAEK,QAAAA;AAAF,OAAd,CAFrB;AAGE,MAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,GAAR,KAAgBhB,OAAO,CAACC,GAAR,CAAYc,KAAZ,EAAmBC,GAAnB,CAHlC;AAIE,MAAA,UAAU,EAAE,GAJd;AAKE,MAAA,WAAW,EAAE,EALf;AAME,MAAA,QAAQ,EAAE,EANZ;AAOE,MAAA,IAAI,EAAE,CAPR;AAQE,MAAA,SAAS,EAAC,MARZ;AASE,MAAA,GAAG,EAAE,IATP;AAUE,MAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAVP;AAWE,MAAA,OAAO,MAXT;AAYE,MAAA,SAAS,EAAC,SAZZ;AAaE,MAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAbb;AAcE,MAAA,0BAA0B,EAAC,SAd7B;AAeE,MAAA,yBAAyB,EAAC,SAf5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAmCGrB,MAAM,CAACL,UAAP,IACC;AACE,MAAA,KAAK,EAAE;AACL2B,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,SAAS,EAAE,QAFN;AAGLC,QAAAA,QAAQ,EAAE,KAHL;AAILH,QAAAA,KAAK,EAAE;AAJF,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGrB,MAAM,CAACL,UARV,CApCJ,EA+CE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,gCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CF,CAZF,CADF,CADF,CADF,CADF;AAyED;;AAvImC;;AA0ItCR,aAAa,CAACsC,SAAd,GAA0B;AACxBC,EAAAA,cAAc,EAAEzC,SAAS,CAAC0C,IAAV,CAAeC,UADP;AAExBhB,EAAAA,YAAY,EAAE3B,SAAS,CAAC4C,MAAV,CAAiBD,UAFP;AAGxBE,EAAAA,iBAAiB,EAAE7C,SAAS,CAAC0C,IAAV,CAAeC,UAHV;AAIxB5B,EAAAA,MAAM,EAAEf,SAAS,CAAC4C,MAAV,CAAiBD;AAJD,CAA1B;;AAOA,MAAMG,eAAe,GAAG1C,KAAK,KAAK;AAChCuB,EAAAA,YAAY,EAAEvB,KAAK,CAAC2C,cAAN,CAAqBpB,YADH;AAEhCZ,EAAAA,MAAM,EAAEX,KAAK,CAACW;AAFkB,CAAL,CAA7B;;AAKA,eAAelB,OAAO,CACpBiD,eADoB,EAEpB,EAFoB,CAAP,CAGb5C,aAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\n\r\nclass EducationForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      profileSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      taskType: \"\",\r\n      totalYears: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      profileIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    //this.onChange = this.onChange.bind(this);\r\n    //this.onChangeText = this.onChangeText.bind(this);\r\n    //this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    const { profile_backlog_id, pt_id } = this.props.match.params;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      profileSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      taskType,\r\n      totalYears,\r\n      priority,\r\n      dueDate,\r\n      profileIdentifier,\r\n      create_At\r\n    } = nextProps.profile_task;\r\n\r\n    this.setState({\r\n      id,\r\n      profileSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      taskType,\r\n      totalYears,\r\n      priority,\r\n      dueDate,\r\n      profileIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.props;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Education</h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                Education ID: {this.props.profileSequence}{\" \"}\r\n              </div>\r\n              <form onSubmit={this.onSubmit}>\r\n                <h6>Organization:</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Profile Task summary\"\r\n                    value={this.props.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Year:</h6>\r\n                <NumericInput\r\n                  value={this.props.value}\r\n                  onChange={value => this.setState({ value })}\r\n                  onLimitReached={(isMax, msg) => console.log(isMax, msg)}\r\n                  totalWidth={240}\r\n                  totalHeight={50}\r\n                  iconSize={25}\r\n                  step={1}\r\n                  valueType=\"real\"\r\n                  min={1900}\r\n                  max={new Date().getFullYear()}\r\n                  rounded\r\n                  textColor=\"#B0228C\"\r\n                  iconStyle={{ color: \"white\" }}\r\n                  rightButtonBackgroundColor=\"#EA3788\"\r\n                  leftButtonBackgroundColor=\"#E56B70\"\r\n                />\r\n                {errors.totalYears && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.totalYears}\r\n                  </div>\r\n                )}\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEducationForm.propTypes = {\r\n  getProfileTask: PropTypes.func.isRequired,\r\n  profile_task: PropTypes.object.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile_task: state.profileBacklog.profile_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(EducationForm);\r\n"]},"metadata":{},"sourceType":"module"}