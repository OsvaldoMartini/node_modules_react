{"ast":null,"code":"// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback;\n\nconst fs = require('graceful-fs');\n\nconst api = ['access', 'appendFile', 'chmod', 'chown', 'close', 'fchmod', 'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchown', 'link', 'lstat', 'mkdir', 'open', 'read', 'readFile', 'readdir', 'readlink', 'realpath', 'rename', 'rmdir', 'stat', 'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile']; // fs.mkdtemp() was added in Node.js v5.10.0, so check if it exists\n\ntypeof fs.mkdtemp === 'function' && api.push('mkdtemp'); // Export all keys:\n\nObject.keys(fs).forEach(key => {\n  exports[key] = fs[key];\n}); // Universalify async methods:\n\napi.forEach(method => {\n  exports[method] = u(fs[method]);\n}); // We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\n\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback);\n  }\n\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}