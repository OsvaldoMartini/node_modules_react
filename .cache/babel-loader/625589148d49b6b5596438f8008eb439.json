{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\CVBoard.js\";\nimport React, { Component } from \"react\";\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport requireAuth from \"../hocs/requireAuth\";\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\nimport CVBacklog from \"./CVBacklog\";\nimport { TASK_TYPE_SKILSS, TASK_TYPE_EDUC, TASK_TYPE_LANG, TASK_TYPE_CLI_PRJ } from \"../../actions/types\";\nimport { SET_PROFILE_STAGED } from \"../../actions/types\"; //import * as fs from \"fs\";\n\nimport { Document, Packer, Paragraph, TextRun } from \"docx\";\nimport { saveAs } from \"file-saver\"; //import createReport from \"docx-templates\";\n\nimport GenerateCV from \"./templates/TemplateDossie\";\nimport CreateButton from \"../controlls/CreateButton\";\n\nclass CVBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      fullName: \"\",\n      candidateEmail: \"\",\n      profileIdentifier: \"\",\n      token: \"\",\n      summary: \"\",\n      typeProfile: \"\",\n      technologyArea: \"\",\n      domains: \"\",\n      certifications: \"\",\n      tools: \"\",\n      trainings: \"\",\n      methodologies: \"\",\n      others: \"\",\n      faseProfile: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    const items = [{\n      value: 'apple'\n    }, {\n      value: 'pear'\n    }, {\n      value: 'orange'\n    }, {\n      value: 'grape'\n    }, {\n      value: 'banana'\n    }];\n  }\n\n  onGenerateCv(document) {\n    // createReport({\n    //   template: \"templates/myTemplate.docx\",\n    //   output: \"reports/myReport.docx\",\n    //   data: {\n    //     name: \"John\",\n    //     surname: \"Appleseed\"\n    //   }\n    // });\n    const doc = GenerateCV(this.props.profile);\n    const packer = new Packer();\n    packer.toBlob(doc).then(blob => {\n      console.log(blob);\n      saveAs(blob, \"Dossie-\".concat(this.state.fullName, \".docx\"));\n      console.log(\"Document created successfully\");\n    }); // const doc = new Document();\n    // const paragraph = new Paragraph(\"Hello World\");\n    // const institutionText = new TextRun(\"Foo Bar\").bold();\n    // const dateText = new TextRun(\"Github is the best\").tab().bold();\n    // paragraph.addRun(institutionText);\n    // paragraph.addRun(dateText);\n    // doc.addParagraph(paragraph);\n    // const packer = new Packer();\n    // packer.toBlob(doc).then(blob => {\n    //   console.log(blob);\n    //   saveAs(blob, `Dossie-${this.state.fullName}.docx`);\n    //   console.log(\"Document created successfully\");\n    // });\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id; //console.log(\"DidMount: \", this.props);\n\n    if (this.props.security.validToken) {\n      this.props.getProfileByLink(id, this.props.history);\n      this.props.getProfileBacklog(id, this.props.history);\n    } else {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //console.log(\"WillReceiveProps: \", this.nextProps);\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile = nextProps.profile,\n          id = _nextProps$profile.id,\n          fullName = _nextProps$profile.fullName,\n          candidateEmail = _nextProps$profile.candidateEmail,\n          profileIdentifier = _nextProps$profile.profileIdentifier,\n          token = _nextProps$profile.token,\n          summary = _nextProps$profile.summary,\n          typeProfile = _nextProps$profile.typeProfile,\n          technologyArea = _nextProps$profile.technologyArea,\n          domains = _nextProps$profile.domains,\n          certifications = _nextProps$profile.certifications,\n          tools = _nextProps$profile.tools,\n          trainings = _nextProps$profile.trainings,\n          methodologies = _nextProps$profile.methodologies,\n          others = _nextProps$profile.others,\n          faseProfile = _nextProps$profile.faseProfile;\n    this.setState({\n      id,\n      fullName,\n      candidateEmail,\n      profileIdentifier,\n      token,\n      summary,\n      typeProfile,\n      technologyArea,\n      domains,\n      certifications,\n      tools,\n      trainings,\n      methodologies,\n      others,\n      faseProfile\n    }); // if (summary) {\n    //   var hm = new jsscompress.Hauffman();\n    //   var decompressed = hm.decompress(summary);\n    //   this.setState({ summary: decompressed });\n    //   console.log(\"Decompresed\", hm.decompress(summary));\n    // }\n  }\n\n  onChange(e) {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    if (e.target.name === \"summary\" || e.target.name === \"typeProfile\") {\n      const profileStaged = {\n        summary: e.target.name === \"summary\" ? e.target.value : this.state.summary,\n        typeProfile: e.target.name === \"typeProfile\" ? e.target.value : this.state.typeProfile\n      }; //console.log(profileStaged);\n\n      this.props.dispatch({\n        type: SET_PROFILE_STAGED,\n        payload: profileStaged\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.updateProfile();\n  }\n\n  updateProfile() {\n    const updateProfile = {\n      id: this.state.id,\n      fullName: this.state.fullName,\n      candidateEmail: this.state.candidateEmail,\n      profileIdentifier: this.state.profileIdentifier,\n      summary: this.state.summary,\n      typeProfile: this.state.typeProfile,\n      technologyArea: this.state.technologyArea,\n      domains: this.state.domains,\n      certifications: this.state.certifications,\n      tools: this.state.tools,\n      trainings: this.state.trainings,\n      methodologies: this.state.methodologies,\n      others: this.state.others,\n      faseProfile: this.state.faseProfile\n    }; //console.log(updateProfile);\n\n    this.props.updateCV(updateProfile, this.props.history); //window.location.href = \"/\";\n  }\n\n  render() {\n    const errors = this.state.errors;\n    const id = this.props.match.params.id;\n    const profile_tasks = this.props.profileBacklog.profile_tasks;\n\n    const algorithmTask = taskType_To_Filter => {\n      if (taskType_To_Filter === TASK_TYPE_SKILSS) {\n        return \"Skills\";\n      } else if (taskType_To_Filter === TASK_TYPE_EDUC) {\n        return \"Educations\";\n      } else if (taskType_To_Filter === TASK_TYPE_LANG) {\n        return \"Languages\";\n      } else if (taskType_To_Filter === TASK_TYPE_CLI_PRJ) {\n        return \"Client/Projects\";\n      }\n    };\n\n    const boardAlgorithm = (errors, profile_tasks, taskType_To_Filter) => {\n      if (profile_tasks.length < 1) {\n        //PROJECT IDENTIFIER CHECK\n        if (errors.profileNotFound) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, errors.profileNotFound);\n        } else if (errors.profileIdentifier) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, errors.profileIdentifier);\n        } else {\n          // if (taskType_To_Filter === TASK_TYPE_SKILSS) {\n          return React.createElement(Link, {\n            to: \"/addProfileTask/\".concat(id, \"/\").concat(taskType_To_Filter),\n            className: \"btn alert-info btn-block mt-4\",\n            role: \"alert\",\n            style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n              pointerEvents: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, \"No \", algorithmTask(taskType_To_Filter), \" Added\"); //\n        }\n      } else {\n        return React.createElement(CVBacklog, {\n          profile_tasks_prop: profile_tasks,\n          task_type_prop: taskType_To_Filter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        });\n      }\n    };\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        position: \"fixed\",\n        bottom: \"0\",\n        right: \"0\",\n        width: \"200px\",\n        zIndex: \"9999\"\n      },\n      className: \"btn btn-danger ml-4\",\n      onClick: this.onGenerateCv.bind(this, \"obabba\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Generate Cv\"))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, this.props.security.admin && React.createElement(CreateButton, {\n      link: \"/profiles\",\n      caption: \"Back to Profiles\",\n      cssClass: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Edit CV form\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), this.props.security.admin && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Session expire in 2 days\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      role: \"grid\",\n      onBlur: this._onBlur,\n      onFocus: this._onFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, this.props.children), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Full name :\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.fullName\n      }),\n      placeholder: \"Full Name\",\n      name: \"fullName\",\n      onChange: this.onChange,\n      value: this.state.fullName,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), errors.fullName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, errors.fullName)), React.createElement(Downshift, {\n      onChange: selection => alert(\"You selected \".concat(selection.value)),\n      itemToString: item => item ? item.value : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      inputValue,\n      highlightedIndex,\n      selectedItem\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"label\", Object.assign({}, getLabelProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), \"Enter a fruit\"), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    })), React.createElement(\"ul\", Object.assign({}, getMenuProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), isOpen ? items.filter(item => !inputValue || item.value.includes(inputValue)).map((item, index) => React.createElement(\"li\", Object.assign({}, getItemProps({\n      key: item.value,\n      index,\n      item,\n      style: {\n        backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n        fontWeight: selectedItem === item ? 'bold' : 'normal'\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), item.value)) : null))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Profile Area :\"), React.createElement(\"select\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.typeProfile\n      }),\n      name: \"typeProfile\",\n      value: this.state.typeProfile,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"Select\"), React.createElement(\"option\", {\n      value: \"Software\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Software\"), React.createElement(\"option\", {\n      value: \"Engineer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Engineer\"), React.createElement(\"option\", {\n      value: \"Lead Team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Lead Team\"), React.createElement(\"option\", {\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Other\")), errors.typeProfile && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, errors.typeProfile)), this.state.typeProfile === \"Other\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Other :\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.typeProfile\n      }),\n      placeholder: \"Please specify\",\n      name: \"typeProfile\",\n      onChange: this.onChange,\n      value: this.state.typeProfile,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), errors.typeProfile && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, errors.typeProfile)), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    })), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, \"Technoly Area :\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.technologyArea\n      }),\n      placeholder: \"Technology Area\",\n      name: \"technologyArea\",\n      onChange: this.onChange,\n      value: this.state.technologyArea,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }), errors.technologyArea && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, errors.technologyArea)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, \"Experiences:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      placeholder: \"Summary of profile\",\n      name: \"summary\",\n      value: this.state.summary,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"251px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(id),\n      onClick: this.updateProfile.bind(this),\n      className: \"\",\n      style: this.state.summary ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.summary ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, \" \", \"Save\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, \"Years of Experiences:\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProfileTask/\".concat(id, \"/\", \"skill\"),\n      className: \"\",\n      style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \" \", \"Add Skills\"))), boardAlgorithm(errors, profile_tasks.filter(profile_tasks => profile_tasks.taskType === TASK_TYPE_SKILSS), \"skill\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"Domains:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.domains\n      }),\n      placeholder: \"Domains\",\n      name: \"domains\",\n      value: this.state.domains // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"251px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }), errors.domains && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, errors.domains)), React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(id),\n      onClick: this.updateProfile.bind(this),\n      className: \"\",\n      style: this.state.domains ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.domains ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, \" \", \"Save\"))), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, \"Certifications:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.certifications\n      }),\n      placeholder: \"Certifications\",\n      name: \"certifications\",\n      value: this.state.certifications // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"251px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }), errors.certifications && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, errors.certifications)), React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(id),\n      onClick: this.updateProfile.bind(this),\n      className: \"\",\n      style: this.state.certifications ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.certifications ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, \" \", \"Save\"))), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, \"Tools:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.tools\n      }),\n      placeholder: \"Tools\",\n      name: \"tools\",\n      value: this.state.tools // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"251px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }), errors.tools && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, errors.tools)), React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(id),\n      onClick: this.updateProfile.bind(this),\n      className: \"\",\n      style: this.state.tools ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.tools ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }, \" \", \"Save\"))), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, \"Trainings:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.trainings\n      }),\n      placeholder: \"Trainings\",\n      name: \"trainings\",\n      value: this.state.trainings // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"251px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }), errors.trainings && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, errors.trainings)), React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(id),\n      onClick: this.updateProfile.bind(this),\n      className: \"\",\n      style: this.state.trainings ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.trainings ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }, \" \", \"Save\"))), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, \"Methodologies:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.methodologies\n      }),\n      placeholder: \"Methodologies\",\n      name: \"methodologies\",\n      value: this.state.methodologies // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"251px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }), errors.methodologies && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, errors.methodologies)), React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(id),\n      onClick: this.updateProfile.bind(this),\n      className: \"\",\n      style: this.state.methodologies ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.methodologies ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }, \" \", \"Save\"))), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754\n      },\n      __self: this\n    }, \"Others:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.others\n      }),\n      placeholder: \"Others\",\n      name: \"others\",\n      value: this.state.others // onChange={this.onChange.bind(this)}\n      ,\n      onChange: this.onChange,\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"251px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756\n      },\n      __self: this\n    }), errors.others && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773\n      },\n      __self: this\n    }, errors.others)), React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(id),\n      onClick: this.updateProfile.bind(this),\n      className: \"\",\n      style: this.state.others ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.others ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }, \" \", \"Save\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, \"Education - Languages:\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProfileTask/\".concat(id, \"/\", \"educ\"),\n      className: \"\",\n      style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809\n      },\n      __self: this\n    }, \" \", \"Add Educations\"))), boardAlgorithm(errors, profile_tasks.filter(profile_tasks => profile_tasks.taskType === TASK_TYPE_EDUC), \"educ\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProfileTask/\".concat(id, \"/\", \"lang\"),\n      className: \"\",\n      style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844\n      },\n      __self: this\n    }, \" \", \"Add Languages\"))), boardAlgorithm(errors, profile_tasks.filter(profile_tasks => profile_tasks.taskType === TASK_TYPE_LANG), \"lang\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, \"Projects:\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProfileTask/\".concat(id, \"/\", \"cliPrj\"),\n      className: \"\",\n      style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      style: this.state.typeProfile !== \"Select\" && this.state.faseProfile === 1 ? null : {\n        color: \"#dddddd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883\n      },\n      __self: this\n    }, \" \", \"Add Client/Projects\"))), boardAlgorithm(errors, profile_tasks.filter(profile_tasks => profile_tasks.taskType === TASK_TYPE_CLI_PRJ), \"cliPrj\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908\n      },\n      __self: this\n    }), errors.technologyArea && React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \".25rem\",\n        fontSize: \"80%\",\n        color: \"#dc3545\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910\n      },\n      __self: this\n    }, \"Please Check the fields above:\", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    }), errors.technologyArea), React.createElement(\"input\", {\n      // style={{\n      //   position: \"absolute\",\n      //   right: \"0\",\n      //   bottom: \"0\"\n      // }}\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nCVBoard.propTypes = {\n  profileBacklog: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProfileByLink: PropTypes.func.isRequired,\n  updateCV: PropTypes.func.isRequired,\n  getProfileBacklog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile.profile,\n  profileBacklog: state.profileBacklog,\n  errors: state.errors,\n  //profileBacklog: state.profile.profileBacklog,\n  getProfileByLink: state.getProfileByLink,\n  getProfileBacklog: state.getProfileBacklog\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByLink,\n  updateCV,\n  getProfileBacklog\n})(requireAuth(CVBoard));","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\CVBoard.js"],"names":["React","Component","getProfileByLink","updateCV","PropTypes","connect","classnames","Link","requireAuth","getProfileBacklog","CVBacklog","TASK_TYPE_SKILSS","TASK_TYPE_EDUC","TASK_TYPE_LANG","TASK_TYPE_CLI_PRJ","SET_PROFILE_STAGED","Document","Packer","Paragraph","TextRun","saveAs","GenerateCV","CreateButton","CVBoard","constructor","props","state","id","fullName","candidateEmail","profileIdentifier","token","summary","typeProfile","technologyArea","domains","certifications","tools","trainings","methodologies","others","faseProfile","errors","onChange","bind","onSubmit","items","value","onGenerateCv","document","doc","profile","packer","toBlob","then","blob","console","log","componentDidMount","match","params","security","validToken","history","push","componentWillReceiveProps","nextProps","setState","e","preventDefault","target","name","profileStaged","dispatch","type","payload","updateProfile","render","profile_tasks","profileBacklog","algorithmTask","taskType_To_Filter","boardAlgorithm","length","profileNotFound","pointerEvents","position","bottom","right","width","zIndex","admin","_onBlur","_onFocus","children","selection","alert","item","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","filter","includes","map","index","key","style","backgroundColor","fontWeight","marginTop","fontSize","color","marginBottom","height","taskType","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\r\nimport CVBacklog from \"./CVBacklog\";\r\nimport {\r\n  TASK_TYPE_SKILSS,\r\n  TASK_TYPE_EDUC,\r\n  TASK_TYPE_LANG,\r\n  TASK_TYPE_CLI_PRJ\r\n} from \"../../actions/types\";\r\nimport { SET_PROFILE_STAGED } from \"../../actions/types\";\r\n//import * as fs from \"fs\";\r\nimport { Document, Packer, Paragraph, TextRun } from \"docx\";\r\nimport { saveAs } from \"file-saver\";\r\n//import createReport from \"docx-templates\";\r\nimport GenerateCV from \"./templates/TemplateDossie\";\r\nimport CreateButton from \"../controlls/CreateButton\";\r\n\r\nclass CVBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      fullName: \"\",\r\n      candidateEmail: \"\",\r\n      profileIdentifier: \"\",\r\n      token: \"\",\r\n      summary: \"\",\r\n      typeProfile: \"\",\r\n      technologyArea: \"\",\r\n      domains: \"\",\r\n      certifications: \"\",\r\n      tools: \"\",\r\n      trainings: \"\",\r\n      methodologies: \"\",\r\n      others: \"\",\r\n      faseProfile: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    const items = [\r\n      {value: 'apple'},\r\n      {value: 'pear'},\r\n      {value: 'orange'},\r\n      {value: 'grape'},\r\n      {value: 'banana'},\r\n    ]\r\n\r\n  }\r\n\r\n  onGenerateCv(document) {\r\n    // createReport({\r\n    //   template: \"templates/myTemplate.docx\",\r\n    //   output: \"reports/myReport.docx\",\r\n    //   data: {\r\n    //     name: \"John\",\r\n    //     surname: \"Appleseed\"\r\n    //   }\r\n    // });\r\n\r\n    const doc = GenerateCV(this.props.profile);\r\n\r\n    const packer = new Packer();\r\n    packer.toBlob(doc).then(blob => {\r\n      console.log(blob);\r\n      saveAs(blob, `Dossie-${this.state.fullName}.docx`);\r\n      console.log(\"Document created successfully\");\r\n    });\r\n\r\n    // const doc = new Document();\r\n\r\n    // const paragraph = new Paragraph(\"Hello World\");\r\n    // const institutionText = new TextRun(\"Foo Bar\").bold();\r\n    // const dateText = new TextRun(\"Github is the best\").tab().bold();\r\n    // paragraph.addRun(institutionText);\r\n    // paragraph.addRun(dateText);\r\n\r\n    // doc.addParagraph(paragraph);\r\n\r\n    // const packer = new Packer();\r\n\r\n    // packer.toBlob(doc).then(blob => {\r\n    //   console.log(blob);\r\n    //   saveAs(blob, `Dossie-${this.state.fullName}.docx`);\r\n    //   console.log(\"Document created successfully\");\r\n    // });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    //console.log(\"DidMount: \", this.props);\r\n\r\n    if (this.props.security.validToken) {\r\n      this.props.getProfileByLink(id, this.props.history);\r\n\r\n      this.props.getProfileBacklog(id, this.props.history);\r\n    } else {\r\n      this.props.history.push(`/`);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //console.log(\"WillReceiveProps: \", this.nextProps);\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier,\r\n      token,\r\n      summary,\r\n      typeProfile,\r\n      technologyArea,\r\n      domains,\r\n      certifications,\r\n      tools,\r\n      trainings,\r\n      methodologies,\r\n      others,\r\n      faseProfile\r\n    } = nextProps.profile;\r\n\r\n    this.setState({\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier,\r\n      token,\r\n      summary,\r\n      typeProfile,\r\n      technologyArea,\r\n      domains,\r\n      certifications,\r\n      tools,\r\n      trainings,\r\n      methodologies,\r\n      others,\r\n      faseProfile\r\n    });\r\n\r\n    // if (summary) {\r\n    //   var hm = new jsscompress.Hauffman();\r\n    //   var decompressed = hm.decompress(summary);\r\n    //   this.setState({ summary: decompressed });\r\n    //   console.log(\"Decompresed\", hm.decompress(summary));\r\n    // }\r\n  }\r\n\r\n  onChange(e) {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    if (e.target.name === \"summary\" || e.target.name === \"typeProfile\") {\r\n      const profileStaged = {\r\n        summary:\r\n          e.target.name === \"summary\" ? e.target.value : this.state.summary,\r\n        typeProfile:\r\n          e.target.name === \"typeProfile\"\r\n            ? e.target.value\r\n            : this.state.typeProfile\r\n      };\r\n      //console.log(profileStaged);\r\n      this.props.dispatch({\r\n        type: SET_PROFILE_STAGED,\r\n        payload: profileStaged\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.updateProfile();\r\n  }\r\n\r\n  updateProfile() {\r\n    const updateProfile = {\r\n      id: this.state.id,\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail,\r\n      profileIdentifier: this.state.profileIdentifier,\r\n      summary: this.state.summary,\r\n      typeProfile: this.state.typeProfile,\r\n      technologyArea: this.state.technologyArea,\r\n      domains: this.state.domains,\r\n      certifications: this.state.certifications,\r\n      tools: this.state.tools,\r\n      trainings: this.state.trainings,\r\n      methodologies: this.state.methodologies,\r\n      others: this.state.others,\r\n      faseProfile: this.state.faseProfile\r\n    };\r\n\r\n    //console.log(updateProfile);\r\n\r\n    this.props.updateCV(updateProfile, this.props.history);\r\n    //window.location.href = \"/\";\r\n  }\r\n\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    const { profile_tasks } = this.props.profileBacklog;\r\n\r\n    const algorithmTask = taskType_To_Filter => {\r\n      if (taskType_To_Filter === TASK_TYPE_SKILSS) {\r\n        return \"Skills\";\r\n      } else if (taskType_To_Filter === TASK_TYPE_EDUC) {\r\n        return \"Educations\";\r\n      } else if (taskType_To_Filter === TASK_TYPE_LANG) {\r\n        return \"Languages\";\r\n      } else if (taskType_To_Filter === TASK_TYPE_CLI_PRJ) {\r\n        return \"Client/Projects\";\r\n      }\r\n    };\r\n\r\n    const boardAlgorithm = (errors, profile_tasks, taskType_To_Filter) => {\r\n      if (profile_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER CHECK\r\n        if (errors.profileNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.profileNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.profileIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.profileIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          // if (taskType_To_Filter === TASK_TYPE_SKILSS) {\r\n          return (\r\n            <Link\r\n              to={`/addProfileTask/${id}/${taskType_To_Filter}`}\r\n              className=\"btn alert-info btn-block mt-4\"\r\n              role=\"alert\"\r\n              style={\r\n                this.state.typeProfile !== \"Select\" &&\r\n                this.state.faseProfile === 1\r\n                  ? null\r\n                  : { pointerEvents: \"none\" }\r\n              }\r\n            >\r\n              No {algorithmTask(taskType_To_Filter)} Added\r\n            </Link>\r\n          );\r\n          //\r\n        }\r\n      } else {\r\n        return (\r\n          <CVBacklog\r\n            profile_tasks_prop={profile_tasks}\r\n            task_type_prop={taskType_To_Filter}\r\n          />\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"form-group col\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              style={{\r\n                position: \"fixed\",\r\n                bottom: \"0\",\r\n                right: \"0\",\r\n                width: \"200px\",\r\n                zIndex: \"9999\"\r\n              }}\r\n              className=\"btn btn-danger ml-4\"\r\n              onClick={this.onGenerateCv.bind(this, \"obabba\")}\r\n            >\r\n              Generate Cv\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"form-group col\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                {this.props.security.admin && (\r\n                  <CreateButton\r\n                    link=\"/profiles\"\r\n                    caption=\"Back to Profiles\"\r\n                    cssClass=\"btn btn-light\"\r\n                  />\r\n                )}\r\n                <div className=\"display-4 text-center\">Edit CV form</div>\r\n                <hr />\r\n                {this.props.security.admin && (\r\n                  <div>\r\n                    <div className=\"text-center\">Session expire in 2 days</div>\r\n                    <hr />\r\n                  </div>\r\n                )}\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div\r\n                    role=\"grid\"\r\n                    onBlur={this._onBlur}\r\n                    onFocus={this._onFocus}\r\n                  >\r\n                    {this.props.children}\r\n                  </div>\r\n                  <h6>Full name :</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.fullName\r\n                      })}\r\n                      placeholder=\"Full Name\"\r\n                      name=\"fullName\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.fullName}\r\n                      autoFocus={true}\r\n                    />\r\n                    {errors.fullName && (\r\n                      <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                    )}\r\n                  </div>\r\n                  <Downshift\r\n    onChange={selection => alert(`You selected ${selection.value}`)}\r\n    itemToString={item => (item ? item.value : '')}\r\n  >\r\n    {({\r\n      getInputProps,\r\n      getItemProps,\r\n      getLabelProps,\r\n      getMenuProps,\r\n      isOpen,\r\n      inputValue,\r\n      highlightedIndex,\r\n      selectedItem,\r\n    }) => (\r\n      <div>\r\n        <label {...getLabelProps()}>Enter a fruit</label>\r\n        <input {...getInputProps()} />\r\n        <ul {...getMenuProps()}>\r\n          {isOpen\r\n            ? items\r\n                .filter(item => !inputValue || item.value.includes(inputValue))\r\n                .map((item, index) => (\r\n                  <li\r\n                    {...getItemProps({\r\n                      key: item.value,\r\n                      index,\r\n                      item,\r\n                      style: {\r\n                        backgroundColor:\r\n                          highlightedIndex === index ? 'lightgray' : 'white',\r\n                        fontWeight: selectedItem === item ? 'bold' : 'normal',\r\n                      },\r\n                    })}\r\n                  >\r\n                    {item.value}\r\n                  </li>\r\n                ))\r\n            : null}\r\n        </ul>\r\n      </div>\r\n    )}\r\n  </Downshift>\r\n                  <div className=\"form-group\">\r\n                    <h6>Profile Area :</h6>\r\n                    <select\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.typeProfile\r\n                      })}\r\n                      name=\"typeProfile\"\r\n                      value={this.state.typeProfile}\r\n                      onChange={this.onChange}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Software\">Software</option>\r\n                      <option value=\"Engineer\">Engineer</option>\r\n                      <option value=\"Lead Team\">Lead Team</option>\r\n                      <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    {errors.typeProfile && (\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          marginTop: \".25rem\",\r\n                          fontSize: \"80%\",\r\n                          color: \"#dc3545\"\r\n                        }}\r\n                      >\r\n                        {errors.typeProfile}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {this.state.typeProfile === \"Other\" && (\r\n                    <div>\r\n                      <h6>Other :</h6>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className={classnames(\r\n                            \"form-control form-control-lg \",\r\n                            {\r\n                              \"is-invalid\": errors.typeProfile\r\n                            }\r\n                          )}\r\n                          placeholder=\"Please specify\"\r\n                          name=\"typeProfile\"\r\n                          onChange={this.onChange}\r\n                          value={this.state.typeProfile}\r\n                          autoFocus={true}\r\n                        />\r\n                        {errors.typeProfile && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.typeProfile}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <hr />\r\n                    </div>\r\n                  )}\r\n                  <h6>Technoly Area :</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.technologyArea\r\n                      })}\r\n                      placeholder=\"Technology Area\"\r\n                      name=\"technologyArea\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.technologyArea}\r\n                      autoFocus={true}\r\n                    />\r\n                    {errors.technologyArea && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.technologyArea}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <h6>Experiences:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.summary\r\n                      })}\r\n                      placeholder=\"Summary of profile\"\r\n                      name=\"summary\"\r\n                      value={this.state.summary}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.summary && (\r\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.summary ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={this.state.summary ? null : { color: \"#dddddd\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n                  <hr />\r\n                  <h6>Years of Experiences:</h6>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-12 text-right\">\r\n                        <Link\r\n                          to={`/addProfileTask/${id}/${\"skill\"}`}\r\n                          className=\"\"\r\n                          style={\r\n                            this.state.typeProfile !== \"Select\" &&\r\n                            this.state.faseProfile === 1\r\n                              ? null\r\n                              : { pointerEvents: \"none\" }\r\n                          }\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-plus-circle\"\r\n                            style={\r\n                              this.state.typeProfile !== \"Select\" &&\r\n                              this.state.faseProfile === 1\r\n                                ? null\r\n                                : { color: \"#dddddd\" }\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Add Skills\r\n                          </i>\r\n                        </Link>\r\n                      </div>\r\n                      {boardAlgorithm(\r\n                        errors,\r\n                        profile_tasks.filter(\r\n                          profile_tasks =>\r\n                            profile_tasks.taskType === TASK_TYPE_SKILSS\r\n                        ),\r\n                        \"skill\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <h6>Domains:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.domains\r\n                      })}\r\n                      placeholder=\"Domains\"\r\n                      name=\"domains\"\r\n                      value={this.state.domains}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.domains && (\r\n                      <div className=\"invalid-feedback\">{errors.domains}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.domains ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={this.state.domains ? null : { color: \"#dddddd\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Certifications:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.certifications\r\n                      })}\r\n                      placeholder=\"Certifications\"\r\n                      name=\"certifications\"\r\n                      value={this.state.certifications}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.certifications && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.certifications}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.certifications\r\n                          ? null\r\n                          : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={\r\n                          this.state.certifications\r\n                            ? null\r\n                            : { color: \"#dddddd\" }\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Tools:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.tools\r\n                      })}\r\n                      placeholder=\"Tools\"\r\n                      name=\"tools\"\r\n                      value={this.state.tools}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.tools && (\r\n                      <div className=\"invalid-feedback\">{errors.tools}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.tools ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={this.state.tools ? null : { color: \"#dddddd\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Trainings:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.trainings\r\n                      })}\r\n                      placeholder=\"Trainings\"\r\n                      name=\"trainings\"\r\n                      value={this.state.trainings}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.trainings && (\r\n                      <div className=\"invalid-feedback\">{errors.trainings}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.trainings ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={\r\n                          this.state.trainings ? null : { color: \"#dddddd\" }\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Methodologies:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.methodologies\r\n                      })}\r\n                      placeholder=\"Methodologies\"\r\n                      name=\"methodologies\"\r\n                      value={this.state.methodologies}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.methodologies && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.methodologies}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.methodologies\r\n                          ? null\r\n                          : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={\r\n                          this.state.methodologies ? null : { color: \"#dddddd\" }\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Others:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.others\r\n                      })}\r\n                      placeholder=\"Others\"\r\n                      name=\"others\"\r\n                      value={this.state.others}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.others && (\r\n                      <div className=\"invalid-feedback\">{errors.others}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.others ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={this.state.others ? null : { color: \"#dddddd\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n                  <hr />\r\n                  <h6>Education - Languages:</h6>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-12 text-right\">\r\n                        <Link\r\n                          to={`/addProfileTask/${id}/${\"educ\"}`}\r\n                          className=\"\"\r\n                          style={\r\n                            this.state.typeProfile !== \"Select\" &&\r\n                            this.state.faseProfile === 1\r\n                              ? null\r\n                              : { pointerEvents: \"none\" }\r\n                          }\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-plus-circle\"\r\n                            style={\r\n                              this.state.typeProfile !== \"Select\" &&\r\n                              this.state.faseProfile === 1\r\n                                ? null\r\n                                : { color: \"#dddddd\" }\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Add Educations\r\n                          </i>\r\n                        </Link>\r\n                      </div>\r\n                      {boardAlgorithm(\r\n                        errors,\r\n                        profile_tasks.filter(\r\n                          profile_tasks =>\r\n                            profile_tasks.taskType === TASK_TYPE_EDUC\r\n                        ),\r\n                        \"educ\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-12 text-right\">\r\n                        <Link\r\n                          to={`/addProfileTask/${id}/${\"lang\"}`}\r\n                          className=\"\"\r\n                          style={\r\n                            this.state.typeProfile !== \"Select\" &&\r\n                            this.state.faseProfile === 1\r\n                              ? null\r\n                              : { pointerEvents: \"none\" }\r\n                          }\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-plus-circle\"\r\n                            style={\r\n                              this.state.typeProfile !== \"Select\" &&\r\n                              this.state.faseProfile === 1\r\n                                ? null\r\n                                : { color: \"#dddddd\" }\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Add Languages\r\n                          </i>\r\n                        </Link>\r\n                      </div>\r\n                      {boardAlgorithm(\r\n                        errors,\r\n                        profile_tasks.filter(\r\n                          profile_tasks =>\r\n                            profile_tasks.taskType === TASK_TYPE_LANG\r\n                        ),\r\n                        \"lang\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <h6>Projects:</h6>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-12 text-right\">\r\n                        <Link\r\n                          to={`/addProfileTask/${id}/${\"cliPrj\"}`}\r\n                          className=\"\"\r\n                          style={\r\n                            this.state.typeProfile !== \"Select\" &&\r\n                            this.state.faseProfile === 1\r\n                              ? null\r\n                              : { pointerEvents: \"none\" }\r\n                          }\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-plus-circle\"\r\n                            style={\r\n                              this.state.typeProfile !== \"Select\" &&\r\n                              this.state.faseProfile === 1\r\n                                ? null\r\n                                : { color: \"#dddddd\" }\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Add Client/Projects\r\n                          </i>\r\n                        </Link>\r\n                      </div>\r\n                      {boardAlgorithm(\r\n                        errors,\r\n                        profile_tasks.filter(\r\n                          profile_tasks =>\r\n                            profile_tasks.taskType === TASK_TYPE_CLI_PRJ\r\n                        ),\r\n                        \"cliPrj\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <hr />\r\n                  {errors.technologyArea && (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        marginTop: \".25rem\",\r\n                        fontSize: \"80%\",\r\n                        color: \"#dc3545\"\r\n                      }}\r\n                    >\r\n                      {\"Please Check the fields above:\"}\r\n                      <hr />\r\n                      {errors.technologyArea}\r\n                    </div>\r\n                  )}\r\n                  <input\r\n                    // style={{\r\n                    //   position: \"absolute\",\r\n                    //   right: \"0\",\r\n                    //   bottom: \"0\"\r\n                    // }}\r\n                    type=\"submit\"\r\n                    value=\"Save\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCVBoard.propTypes = {\r\n  profileBacklog: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getProfileByLink: PropTypes.func.isRequired,\r\n  updateCV: PropTypes.func.isRequired,\r\n  getProfileBacklog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  profileBacklog: state.profileBacklog,\r\n  errors: state.errors,\r\n  //profileBacklog: state.profile.profileBacklog,\r\n  getProfileByLink: state.getProfileByLink,\r\n  getProfileBacklog: state.getProfileBacklog\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileByLink, updateCV, getProfileBacklog }\r\n)(requireAuth(CVBoard));\r\n"]},"metadata":{},"sourceType":"module"}