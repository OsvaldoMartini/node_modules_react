{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\UpdateProfileTask.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { getProfileTask, updateProfileTask } from \"../../../actions/profileBacklogActions\";\nimport PropTypes from \"prop-types\";\nimport NumericInput from \"react-numeric-input\";\n\nclass UpdateProfileTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      profileSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      taskType: \"\",\n      totalYears: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      profileIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const _this$props$match$par = this.props.match.params,\n          profile_backlog_id = _this$props$match$par.profile_backlog_id,\n          pt_id = _this$props$match$par.pt_id;\n    this.props.getProfileTask(profile_backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile_ta = nextProps.profile_task,\n          id = _nextProps$profile_ta.id,\n          profileSequence = _nextProps$profile_ta.profileSequence,\n          summary = _nextProps$profile_ta.summary,\n          acceptanceCriteria = _nextProps$profile_ta.acceptanceCriteria,\n          taskType = _nextProps$profile_ta.taskType,\n          totalYears = _nextProps$profile_ta.totalYears,\n          priority = _nextProps$profile_ta.priority,\n          dueDate = _nextProps$profile_ta.dueDate,\n          profileIdentifier = _nextProps$profile_ta.profileIdentifier,\n          create_At = _nextProps$profile_ta.create_At;\n    this.setState({\n      id,\n      profileSequence,\n      summary,\n      acceptanceCriteria,\n      taskType,\n      totalYears,\n      priority,\n      dueDate,\n      profileIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onChangeText(value) {\n    // if (/^\\d+$/.test(e.toString())) {\n    //   this.setState({ totalYears: e });\n    // }\n    if (value) {\n      if (!/^[0-9]+$/.test(value.toString())) {\n        this.setState({\n          totalYears: \"\"\n        });\n      } else {\n        this.setState({\n          totalYears: value.toString()\n        });\n      }\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const UpdateProfileTask = {\n      id: this.state.id,\n      profileSequence: this.state.profileSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      taskType: this.state.taskType,\n      totalYears: this.state.totalYears,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      profileIdentifier: this.state.profileIdentifier,\n      create_At: this.state.create_At\n    }; // console.log(UpdateProfileTask);\n\n    this.props.updateProfileTask(this.state.profileIdentifier, this.state.profileSequence, UpdateProfileTask, this.props.history);\n  }\n\n  render() {\n    const errors = this.state.errors;\n\n    const taskAlgorithm = () => {\n      if (this.state.taskType === \"skill\") {\n        return \"Skill\";\n      } else if (this.state.taskType === \"educ\") {\n        return \"Education\";\n      }\n    };\n\n    const fieldYear = () => {\n      if (this.state.taskType === \"skill\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Total of Years:\"), React.createElement(NumericInput, {\n          value: this.state.value,\n          onChange: value => this.setState({\n            value\n          }),\n          onLimitReached: (isMax, msg) => console.log(isMax, msg),\n          totalWidth: 240,\n          totalHeight: 50,\n          iconSize: 25,\n          step: 1.5,\n          valueType: \"real\",\n          rounded: true,\n          textColor: \"#B0228C\",\n          iconStyle: {\n            color: \"white\"\n          },\n          rightButtonBackgroundColor: \"#EA3788\",\n          leftButtonBackgroundColor: \"#E56B70\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }));\n      } else if (this.state.taskType === \"educ\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Years:\"), React.createElement(NumericInput, {\n          mobile: true,\n          min: 0,\n          max: 50,\n          className: \"form-control\",\n          name: \"totalYears\",\n          onChange: this.onChangeText,\n          value: this.state.totalYears,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }), errors.totalYears && React.createElement(\"div\", {\n          style: {\n            width: \"100%\",\n            marginTop: \".25rem\",\n            fontSize: \"80%\",\n            color: \"#dc3545\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, errors.totalYears));\n      }\n    };\n\n    return React.createElement(\"div\", {\n      className: \"add-PBI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/editcv/\".concat(this.state.profileIdentifier),\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Back to Edit CV\"), React.createElement(\"h4\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Update \", taskAlgorithm()), React.createElement(\"div\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Profile Link: \", this.state.profileIdentifier, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), taskAlgorithm(), \" ID: \", this.state.profileSequence, \" \"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Competences:\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      name: \"summary\",\n      placeholder: \"Profile Task summary\",\n      value: this.state.summary,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, errors.summary)), fieldYear(), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nUpdateProfileTask.propTypes = {\n  getProfileTask: PropTypes.func.isRequired,\n  profile_task: PropTypes.object.isRequired,\n  updateProfileTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile_task: state.profileBacklog.profile_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getProfileTask,\n  updateProfileTask\n})(UpdateProfileTask);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\UpdateProfileTask.js"],"names":["React","Component","connect","classnames","Link","getProfileTask","updateProfileTask","PropTypes","NumericInput","UpdateProfileTask","constructor","state","id","profileSequence","summary","acceptanceCriteria","taskType","totalYears","priority","dueDate","profileIdentifier","create_At","errors","onChange","bind","onChangeText","onSubmit","componentDidMount","props","match","params","profile_backlog_id","pt_id","history","componentWillReceiveProps","nextProps","setState","profile_task","e","target","name","value","test","toString","preventDefault","render","taskAlgorithm","fieldYear","isMax","msg","console","log","color","width","marginTop","fontSize","propTypes","func","isRequired","object","mapStateToProps","profileBacklog"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProfileTask,\r\n  updateProfileTask\r\n} from \"../../../actions/profileBacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\n\r\nclass UpdateProfileTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      profileSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      taskType: \"\",\r\n      totalYears: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      profileIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { profile_backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProfileTask(profile_backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      profileSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      taskType,\r\n      totalYears,\r\n      priority,\r\n      dueDate,\r\n      profileIdentifier,\r\n      create_At\r\n    } = nextProps.profile_task;\r\n\r\n    this.setState({\r\n      id,\r\n      profileSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      taskType,\r\n      totalYears,\r\n      priority,\r\n      dueDate,\r\n      profileIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ totalYears: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ totalYears: \"\" });\r\n      } else {\r\n        this.setState({ totalYears: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProfileTask = {\r\n      id: this.state.id,\r\n      profileSequence: this.state.profileSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      taskType: this.state.taskType,\r\n      totalYears: this.state.totalYears,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      profileIdentifier: this.state.profileIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProfileTask);\r\n    this.props.updateProfileTask(\r\n      this.state.profileIdentifier,\r\n      this.state.profileSequence,\r\n      UpdateProfileTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    const taskAlgorithm = () => {\r\n      if (this.state.taskType === \"skill\") {\r\n        return \"Skill\";\r\n      } else if (this.state.taskType === \"educ\") {\r\n        return \"Education\";\r\n      }\r\n    };\r\n\r\n    const fieldYear = () => {\r\n      if (this.state.taskType === \"skill\") {\r\n        return (\r\n          <div>\r\n            <h6>Total of Years:</h6>\r\n            <NumericInput\r\n              value={this.state.value}\r\n              onChange={value => this.setState({ value })}\r\n              onLimitReached={(isMax, msg) => console.log(isMax, msg)}\r\n              totalWidth={240}\r\n              totalHeight={50}\r\n              iconSize={25}\r\n              step={1.5}\r\n              valueType=\"real\"\r\n              rounded\r\n              textColor=\"#B0228C\"\r\n              iconStyle={{ color: \"white\" }}\r\n              rightButtonBackgroundColor=\"#EA3788\"\r\n              leftButtonBackgroundColor=\"#E56B70\"\r\n            />\r\n          </div>\r\n        );\r\n      } else if (this.state.taskType === \"educ\") {\r\n        return (\r\n          <div>\r\n            <h6>Years:</h6>\r\n            <NumericInput\r\n              mobile\r\n              min={0}\r\n              max={50}\r\n              className=\"form-control\"\r\n              name=\"totalYears\"\r\n              onChange={this.onChangeText}\r\n              value={this.state.totalYears}\r\n            />\r\n            {errors.totalYears && (\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \".25rem\",\r\n                  fontSize: \"80%\",\r\n                  color: \"#dc3545\"\r\n                }}\r\n              >\r\n                {errors.totalYears}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.state.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                Update {taskAlgorithm()}\r\n              </h4>\r\n              <div className=\"lead text-center\">\r\n                Profile Link: {this.state.profileIdentifier}\r\n                <hr />\r\n                {taskAlgorithm()} ID: {this.state.profileSequence}{\" \"}\r\n              </div>\r\n              <form onSubmit={this.onSubmit}>\r\n                <h6>Competences:</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Profile Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                {fieldYear()}\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProfileTask.propTypes = {\r\n  getProfileTask: PropTypes.func.isRequired,\r\n  profile_task: PropTypes.object.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile_task: state.profileBacklog.profile_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileTask, updateProfileTask }\r\n)(UpdateProfileTask);\r\n"]},"metadata":{},"sourceType":"module"}