{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/brentvatne/coding/react-navigation-stack/src/views/StackView/createPointerEventsContainer.tsx\";\nimport * as React from 'react';\nvar MIN_POSITION_OFFSET = 0.01;\nexport default function createPointerEventsContainer(Component) {\n  var Container = function (_React$Component) {\n    _inherits(Container, _React$Component);\n\n    function Container() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, Container);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Container)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.pointerEvents = _this.computePointerEvents();\n      _this.component = null;\n\n      _this.handleComponentRef = function (component) {\n        _this.component = component;\n\n        if (component && typeof component.setNativeProps !== 'function') {\n          throw new Error('Component must implement method `setNativeProps`');\n        }\n      };\n\n      _this.handlePositionChange = function () {\n        if (_this.component) {\n          var pointerEvents = _this.computePointerEvents();\n\n          if (_this.pointerEvents !== pointerEvents) {\n            _this.pointerEvents = pointerEvents;\n\n            _this.component.setNativeProps({\n              pointerEvents: pointerEvents\n            });\n          }\n        }\n      };\n\n      return _this;\n    }\n\n    _createClass(Container, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.positionListener && this.positionListener.remove();\n      }\n    }, {\n      key: \"bindPosition\",\n      value: function bindPosition() {\n        this.positionListener && this.positionListener.remove();\n        this.positionListener = new AnimatedValueSubscription(this.props.realPosition, this.handlePositionChange);\n      }\n    }, {\n      key: \"computePointerEvents\",\n      value: function computePointerEvents() {\n        var _this$props = this.props,\n            navigation = _this$props.navigation,\n            realPosition = _this$props.realPosition,\n            scene = _this$props.scene;\n\n        if (scene.isStale || navigation.state.index !== scene.index) {\n          return scene.index > navigation.state.index ? 'box-only' : 'none';\n        }\n\n        var offset = realPosition.__getAnimatedValue() - navigation.state.index;\n\n        if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n          return 'box-only';\n        }\n\n        return 'auto';\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        this.bindPosition();\n        this.pointerEvents = this.computePointerEvents();\n        return React.createElement(Component, _extends({}, this.props, {\n          pointerEvents: this.pointerEvents,\n          onComponentRef: this.handleComponentRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          }\n        }));\n      }\n    }]);\n\n    return Container;\n  }(React.Component);\n\n  return Container;\n}\n\nvar AnimatedValueSubscription = function () {\n  function AnimatedValueSubscription(value, callback) {\n    _classCallCheck(this, AnimatedValueSubscription);\n\n    this.value = value;\n    this.token = value.addListener(callback);\n  }\n\n  _createClass(AnimatedValueSubscription, [{\n    key: \"remove\",\n    value: function remove() {\n      this.value.removeListener(this.token);\n    }\n  }]);\n\n  return AnimatedValueSubscription;\n}();","map":null,"metadata":{},"sourceType":"module"}