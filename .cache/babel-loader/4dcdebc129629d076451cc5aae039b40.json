{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_PROFILE_BACKLOG, GET_PROFILE_TASK, DELETE_PROFILE_TASK } from \"./types\"; //Fix bug with priority in Spring Boot Server, needs to check null first\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/backlog/\".concat(backlog_id), project_task);\n    history.push(\"/projectBoard/\".concat(backlog_id));\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/backlog/\".concat(backlog_id));\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/backlog/\".concat(backlog_id, \"/\").concat(pt_id));\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\n  try {\n    await axios.patch(\"/api/backlog/\".concat(backlog_id, \"/\").concat(pt_id), project_task);\n    history.push(\"/projectBoard/\".concat(backlog_id));\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (window.confirm(\"You are deleting project task \".concat(pt_id, \", this action cannot be undone\"))) {\n    await axios.delete(\"/api/backlog/\".concat(backlog_id, \"/\").concat(pt_id));\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\actions\\profileBacklogActions.js"],"names":["axios","GET_ERRORS","GET_PROFILE_BACKLOG","GET_PROFILE_TASK","DELETE_PROFILE_TASK","addProjectTask","backlog_id","project_task","history","dispatch","post","push","type","payload","err","response","data","getBacklog","res","get","GET_BACKLOG","getProjectTask","pt_id","GET_PROJECT_TASK","updateProjectTask","patch","deleteProjectTask","window","confirm","delete","DELETE_PROJECT_TASK"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROFILE_BACKLOG,\r\n  GET_PROFILE_TASK,\r\n  DELETE_PROFILE_TASK\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}