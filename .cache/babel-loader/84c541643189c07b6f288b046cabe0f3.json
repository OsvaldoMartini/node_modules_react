{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/brentvatne/coding/react-navigation-stack/src/views/Header/ModularHeaderBackButton.tsx\";\nimport * as React from 'react';\nimport { I18nManager, Image, Text, View, StyleSheet } from 'react-native';\nimport TouchableItem from '../TouchableItem';\nimport defaultBackImage from '../assets/back-icon.png';\n\nvar ModularHeaderBackButton = function (_React$PureComponent) {\n  _inherits(ModularHeaderBackButton, _React$PureComponent);\n\n  function ModularHeaderBackButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModularHeaderBackButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModularHeaderBackButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.onTextLayout = function (e) {\n      if (_this.state.initialTextWidth) {\n        return;\n      }\n\n      _this.setState({\n        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width\n      });\n    };\n\n    _this.getTitleText = function () {\n      var _this$props = _this.props,\n          width = _this$props.width,\n          title = _this$props.title,\n          truncatedTitle = _this$props.truncatedTitle;\n      var initialTextWidth = _this.state.initialTextWidth;\n\n      if (title === null) {\n        return null;\n      } else if (!title) {\n        return truncatedTitle;\n      } else if (initialTextWidth && width && initialTextWidth > width) {\n        return truncatedTitle;\n      } else {\n        return title.length > 8 ? truncatedTitle : title;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ModularHeaderBackButton, [{\n    key: \"renderBackImage\",\n    value: function renderBackImage() {\n      var _this$props2 = this.props,\n          backImage = _this$props2.backImage,\n          backTitleVisible = _this$props2.backTitleVisible,\n          tintColor = _this$props2.tintColor;\n\n      if (React.isValidElement(backImage)) {\n        return backImage;\n      } else if (backImage) {\n        var BackImage = backImage;\n        return React.createElement(BackImage, {\n          tintColor: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          }\n        });\n      } else {\n        return React.createElement(Image, {\n          style: [styles.icon, !!backTitleVisible && styles.iconWithTitle, !!tintColor && {\n            tintColor: tintColor\n          }],\n          source: defaultBackImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          }\n        });\n      }\n    }\n  }, {\n    key: \"maybeRenderTitle\",\n    value: function maybeRenderTitle() {\n      var _this$props3 = this.props,\n          backTitleVisible = _this$props3.backTitleVisible,\n          titleStyle = _this$props3.titleStyle,\n          tintColor = _this$props3.tintColor;\n      var backTitleText = this.getTitleText();\n\n      if (!backTitleVisible || backTitleText === null) {\n        return null;\n      }\n\n      var LabelContainerComponent = this.props.LabelContainerComponent;\n      return React.createElement(LabelContainerComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, React.createElement(Text, {\n        accessible: false,\n        onLayout: this.onTextLayout,\n        style: [styles.title, !!tintColor && {\n          color: tintColor\n        }, titleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, this.getTitleText()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          onPress = _this$props4.onPress,\n          title = _this$props4.title;\n      var ButtonContainerComponent = this.props.ButtonContainerComponent;\n      return React.createElement(TouchableItem, {\n        accessibilityComponentType: \"button\",\n        accessibilityLabel: title ? title + \", back\" : 'Go back',\n        accessibilityTraits: \"button\",\n        testID: \"header-back\",\n        delayPressIn: 0,\n        onPress: onPress,\n        style: styles.container,\n        borderless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      }, React.createElement(ButtonContainerComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }, this.renderBackImage()), this.maybeRenderTitle()));\n    }\n  }]);\n\n  return ModularHeaderBackButton;\n}(React.PureComponent);\n\nModularHeaderBackButton.defaultProps = {\n  tintColor: '#037aff',\n  truncatedTitle: 'Back'\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n    marginBottom: 1,\n    overflow: 'visible'\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10\n  },\n  icon: {\n    height: 21,\n    width: 12,\n    marginLeft: 9,\n    marginRight: 22,\n    marginVertical: 12,\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  iconWithTitle: {\n    marginRight: 3\n  }\n});\nexport default ModularHeaderBackButton;","map":null,"metadata":{},"sourceType":"module"}