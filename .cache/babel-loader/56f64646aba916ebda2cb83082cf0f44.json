{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst os = require('os');\n\nconst path = require('path'); // HFS, ext{2,3}, FAT do not, Node.js v0.10 does not\n\n\nfunction hasMillisResSync() {\n  let tmpfile = path.join('millis-test-sync' + Date.now().toString() + Math.random().toString().slice(2));\n  tmpfile = path.join(os.tmpdir(), tmpfile); // 550 millis past UNIX epoch\n\n  const d = new Date(1435410243862);\n  fs.writeFileSync(tmpfile, 'https://github.com/jprichardson/node-fs-extra/pull/141');\n  const fd = fs.openSync(tmpfile, 'r+');\n  fs.futimesSync(fd, d, d);\n  fs.closeSync(fd);\n  return fs.statSync(tmpfile).mtime > 1435410243000;\n}\n\nfunction hasMillisRes(callback) {\n  let tmpfile = path.join('millis-test' + Date.now().toString() + Math.random().toString().slice(2));\n  tmpfile = path.join(os.tmpdir(), tmpfile); // 550 millis past UNIX epoch\n\n  const d = new Date(1435410243862);\n  fs.writeFile(tmpfile, 'https://github.com/jprichardson/node-fs-extra/pull/141', err => {\n    if (err) return callback(err);\n    fs.open(tmpfile, 'r+', (err, fd) => {\n      if (err) return callback(err);\n      fs.futimes(fd, d, d, err => {\n        if (err) return callback(err);\n        fs.close(fd, err => {\n          if (err) return callback(err);\n          fs.stat(tmpfile, (err, stats) => {\n            if (err) return callback(err);\n            callback(null, stats.mtime > 1435410243000);\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction timeRemoveMillis(timestamp) {\n  if (typeof timestamp === 'number') {\n    return Math.floor(timestamp / 1000) * 1000;\n  } else if (timestamp instanceof Date) {\n    return new Date(Math.floor(timestamp.getTime() / 1000) * 1000);\n  } else {\n    throw new Error('fs-extra: timeRemoveMillis() unknown parameter type');\n  }\n}\n\nfunction utimesMillis(path, atime, mtime, callback) {\n  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)\n  fs.open(path, 'r+', (err, fd) => {\n    if (err) return callback(err);\n    fs.futimes(fd, atime, mtime, futimesErr => {\n      fs.close(fd, closeErr => {\n        if (callback) callback(futimesErr || closeErr);\n      });\n    });\n  });\n}\n\nmodule.exports = {\n  hasMillisRes,\n  hasMillisResSync,\n  timeRemoveMillis,\n  utimesMillis\n};","map":null,"metadata":{},"sourceType":"script"}