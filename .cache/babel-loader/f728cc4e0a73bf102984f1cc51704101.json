{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\UpdateProfileTask.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { getProfileTask, updateProfileTask } from \"../../../actions/profileBacklogActions\";\nimport PropTypes from \"prop-types\";\nimport NumericInput from \"react-numeric-input\";\nimport EducationForm from \"./TasksForms/EducationForm\";\n\nclass UpdateProfileTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      profileSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      taskType: \"\",\n      totalYears: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      profileIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const _this$props$match$par = this.props.match.params,\n          profile_backlog_id = _this$props$match$par.profile_backlog_id,\n          pt_id = _this$props$match$par.pt_id;\n    this.props.getProfileTask(profile_backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$profile_ta = nextProps.profile_task,\n          id = _nextProps$profile_ta.id,\n          profileSequence = _nextProps$profile_ta.profileSequence,\n          summary = _nextProps$profile_ta.summary,\n          acceptanceCriteria = _nextProps$profile_ta.acceptanceCriteria,\n          taskType = _nextProps$profile_ta.taskType,\n          totalYears = _nextProps$profile_ta.totalYears,\n          priority = _nextProps$profile_ta.priority,\n          dueDate = _nextProps$profile_ta.dueDate,\n          profileIdentifier = _nextProps$profile_ta.profileIdentifier,\n          create_At = _nextProps$profile_ta.create_At;\n    this.setState({\n      id,\n      profileSequence,\n      summary,\n      acceptanceCriteria,\n      taskType,\n      totalYears,\n      priority,\n      dueDate,\n      profileIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onChangeText(value) {\n    // if (/^\\d+$/.test(e.toString())) {\n    //   this.setState({ totalYears: e });\n    // }\n    if (value) {\n      if (!/^[0-9]+$/.test(value.toString())) {\n        this.setState({\n          totalYears: \"\"\n        });\n      } else {\n        this.setState({\n          totalYears: value.toString()\n        });\n      }\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const UpdateProfileTask = {\n      id: this.state.id,\n      profileSequence: this.state.profileSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      taskType: this.state.taskType,\n      totalYears: this.state.totalYears,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      profileIdentifier: this.state.profileIdentifier,\n      create_At: this.state.create_At\n    }; // console.log(UpdateProfileTask);\n\n    this.props.updateProfileTask(this.state.profileIdentifier, this.state.profileSequence, UpdateProfileTask, this.props.history);\n  }\n\n  render() {\n    const errors = this.state.errors;\n\n    const summaryLabel = () => {\n      if (this.state.taskType === \"skill\") {\n        return \"Competences:\";\n      } else if (this.state.taskType === \"educ\") {\n        return \"Organization:\";\n      }\n    };\n\n    const taskAlgorithm = () => {\n      if (this.state.taskType === \"skill\") {\n        return \"Skill\";\n      } else if (this.state.taskType === \"educ\") {\n        return \"Education\";\n      }\n    };\n\n    const fieldYear = () => {\n      if (this.state.taskType === \"skill\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"Total of Years:\"), React.createElement(NumericInput, {\n          mobile: true,\n          min: 0,\n          max: 50,\n          className: \"form-control\",\n          name: \"totalYears\",\n          onChange: this.onChangeText,\n          value: this.state.totalYears,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }));\n      } else if (this.state.taskType === \"educ\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      }\n    };\n\n    return React.createElement(EducationForm, {\n      errors: errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    });\n  }\n\n}\n\nUpdateProfileTask.propTypes = {\n  getProfileTask: PropTypes.func.isRequired,\n  profile_task: PropTypes.object.isRequired,\n  updateProfileTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile_task: state.profileBacklog.profile_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getProfileTask,\n  updateProfileTask\n})(UpdateProfileTask);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\UpdateProfileTask.js"],"names":["React","Component","connect","classnames","Link","getProfileTask","updateProfileTask","PropTypes","NumericInput","EducationForm","UpdateProfileTask","constructor","state","id","profileSequence","summary","acceptanceCriteria","taskType","totalYears","priority","dueDate","profileIdentifier","create_At","errors","onChange","bind","onChangeText","onSubmit","componentDidMount","props","match","params","profile_backlog_id","pt_id","history","componentWillReceiveProps","nextProps","setState","profile_task","e","target","name","value","test","toString","preventDefault","render","summaryLabel","taskAlgorithm","fieldYear","propTypes","func","isRequired","object","mapStateToProps","profileBacklog"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,cADF,EAEEC,iBAFF,QAGO,wCAHP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,iBAAN,SAAgCT,SAAhC,CAA0C;AACxCU,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,EADO;AAEXC,MAAAA,eAAe,EAAE,EAFN;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,kBAAkB,EAAE,EAJT;AAKXC,MAAAA,QAAQ,EAAE,EALC;AAMXC,MAAAA,UAAU,EAAE,EAND;AAOXC,MAAAA,QAAQ,EAAE,EAPC;AAQXC,MAAAA,OAAO,EAAE,EARE;AASXC,MAAAA,iBAAiB,EAAE,EATR;AAUXC,MAAAA,SAAS,EAAE,EAVA;AAWXC,MAAAA,MAAM,EAAE;AAXG,KAAb;AAaA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAAA,kCACoB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADrC;AAAA,UACVC,kBADU,yBACVA,kBADU;AAAA,UACUC,KADV,yBACUA,KADV;AAElB,SAAKJ,KAAL,CAAWxB,cAAX,CAA0B2B,kBAA1B,EAA8CC,KAA9C,EAAqD,KAAKJ,KAAL,CAAWK,OAAhE;AACD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACb,MAAd,EAAsB;AACpB,WAAKc,QAAL,CAAc;AAAEd,QAAAA,MAAM,EAAEa,SAAS,CAACb;AAApB,OAAd;AACD;;AAHkC,kCAgB/Ba,SAAS,CAACE,YAhBqB;AAAA,UAMjCzB,EANiC,yBAMjCA,EANiC;AAAA,UAOjCC,eAPiC,yBAOjCA,eAPiC;AAAA,UAQjCC,OARiC,yBAQjCA,OARiC;AAAA,UASjCC,kBATiC,yBASjCA,kBATiC;AAAA,UAUjCC,QAViC,yBAUjCA,QAViC;AAAA,UAWjCC,UAXiC,yBAWjCA,UAXiC;AAAA,UAYjCC,QAZiC,yBAYjCA,QAZiC;AAAA,UAajCC,OAbiC,yBAajCA,OAbiC;AAAA,UAcjCC,iBAdiC,yBAcjCA,iBAdiC;AAAA,UAejCC,SAfiC,yBAejCA,SAfiC;AAkBnC,SAAKe,QAAL,CAAc;AACZxB,MAAAA,EADY;AAEZC,MAAAA,eAFY;AAGZC,MAAAA,OAHY;AAIZC,MAAAA,kBAJY;AAKZC,MAAAA,QALY;AAMZC,MAAAA,UANY;AAOZC,MAAAA,QAPY;AAQZC,MAAAA,OARY;AASZC,MAAAA,iBATY;AAUZC,MAAAA;AAVY,KAAd;AAYD;;AAEDE,EAAAA,QAAQ,CAACe,CAAD,EAAI;AACV,SAAKF,QAAL,CAAc;AAAE,OAACE,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA5B,KAAd;AACD;;AAEDhB,EAAAA,YAAY,CAACgB,KAAD,EAAQ;AAClB;AACA;AACA;AACA,QAAIA,KAAJ,EAAW;AACT,UAAI,CAAC,WAAWC,IAAX,CAAgBD,KAAK,CAACE,QAAN,EAAhB,CAAL,EAAwC;AACtC,aAAKP,QAAL,CAAc;AAAEnB,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD,OAFD,MAEO;AACL,aAAKmB,QAAL,CAAc;AAAEnB,UAAAA,UAAU,EAAEwB,KAAK,CAACE,QAAN;AAAd,SAAd;AACD;AACF;AACF;;AAEDjB,EAAAA,QAAQ,CAACY,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACM,cAAF;AAEA,UAAMnC,iBAAiB,GAAG;AACxBG,MAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADS;AAExBC,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAFJ;AAGxBC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAHI;AAIxBC,MAAAA,kBAAkB,EAAE,KAAKJ,KAAL,CAAWI,kBAJP;AAKxBC,MAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QALG;AAMxBC,MAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWM,UANC;AAOxBC,MAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QAPG;AAQxBC,MAAAA,OAAO,EAAE,KAAKR,KAAL,CAAWQ,OARI;AASxBC,MAAAA,iBAAiB,EAAE,KAAKT,KAAL,CAAWS,iBATN;AAUxBC,MAAAA,SAAS,EAAE,KAAKV,KAAL,CAAWU;AAVE,KAA1B,CAHU,CAgBV;;AACA,SAAKO,KAAL,CAAWvB,iBAAX,CACE,KAAKM,KAAL,CAAWS,iBADb,EAEE,KAAKT,KAAL,CAAWE,eAFb,EAGEJ,iBAHF,EAIE,KAAKmB,KAAL,CAAWK,OAJb;AAMD;;AAEDY,EAAAA,MAAM,GAAG;AAAA,UACCvB,MADD,GACY,KAAKX,KADjB,CACCW,MADD;;AAGP,UAAMwB,YAAY,GAAG,MAAM;AACzB,UAAI,KAAKnC,KAAL,CAAWK,QAAX,KAAwB,OAA5B,EAAqC;AACnC,eAAO,cAAP;AACD,OAFD,MAEO,IAAI,KAAKL,KAAL,CAAWK,QAAX,KAAwB,MAA5B,EAAoC;AACzC,eAAO,eAAP;AACD;AACF,KAND;;AAQA,UAAM+B,aAAa,GAAG,MAAM;AAC1B,UAAI,KAAKpC,KAAL,CAAWK,QAAX,KAAwB,OAA5B,EAAqC;AACnC,eAAO,OAAP;AACD,OAFD,MAEO,IAAI,KAAKL,KAAL,CAAWK,QAAX,KAAwB,MAA5B,EAAoC;AACzC,eAAO,WAAP;AACD;AACF,KAND;;AAQA,UAAMgC,SAAS,GAAG,MAAM;AACtB,UAAI,KAAKrC,KAAL,CAAWK,QAAX,KAAwB,OAA5B,EAAqC;AACnC,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,YAAD;AACE,UAAA,MAAM,MADR;AAEE,UAAA,GAAG,EAAE,CAFP;AAGE,UAAA,GAAG,EAAE,EAHP;AAIE,UAAA,SAAS,EAAC,cAJZ;AAKE,UAAA,IAAI,EAAC,YALP;AAME,UAAA,QAAQ,EAAE,KAAKS,YANjB;AAOE,UAAA,KAAK,EAAE,KAAKd,KAAL,CAAWM,UAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAcD,OAfD,MAeO,IAAI,KAAKN,KAAL,CAAWK,QAAX,KAAwB,MAA5B,EAAoC;AACzC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAnBD;;AAqBA,WAAO,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAEM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AA9IuC;;AAiJ1Cb,iBAAiB,CAACwC,SAAlB,GAA8B;AAC5B7C,EAAAA,cAAc,EAAEE,SAAS,CAAC4C,IAAV,CAAeC,UADH;AAE5Bd,EAAAA,YAAY,EAAE/B,SAAS,CAAC8C,MAAV,CAAiBD,UAFH;AAG5B9C,EAAAA,iBAAiB,EAAEC,SAAS,CAAC4C,IAAV,CAAeC,UAHN;AAI5B7B,EAAAA,MAAM,EAAEhB,SAAS,CAAC8C,MAAV,CAAiBD;AAJG,CAA9B;;AAOA,MAAME,eAAe,GAAG1C,KAAK,KAAK;AAChC0B,EAAAA,YAAY,EAAE1B,KAAK,CAAC2C,cAAN,CAAqBjB,YADH;AAEhCf,EAAAA,MAAM,EAAEX,KAAK,CAACW;AAFkB,CAAL,CAA7B;;AAKA,eAAerB,OAAO,CACpBoD,eADoB,EAEpB;AAAEjD,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAFoB,CAAP,CAGbI,iBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProfileTask,\r\n  updateProfileTask\r\n} from \"../../../actions/profileBacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport EducationForm from \"./TasksForms/EducationForm\";\r\n\r\nclass UpdateProfileTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      profileSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      taskType: \"\",\r\n      totalYears: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      profileIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { profile_backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProfileTask(profile_backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      profileSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      taskType,\r\n      totalYears,\r\n      priority,\r\n      dueDate,\r\n      profileIdentifier,\r\n      create_At\r\n    } = nextProps.profile_task;\r\n\r\n    this.setState({\r\n      id,\r\n      profileSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      taskType,\r\n      totalYears,\r\n      priority,\r\n      dueDate,\r\n      profileIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ totalYears: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ totalYears: \"\" });\r\n      } else {\r\n        this.setState({ totalYears: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProfileTask = {\r\n      id: this.state.id,\r\n      profileSequence: this.state.profileSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      taskType: this.state.taskType,\r\n      totalYears: this.state.totalYears,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      profileIdentifier: this.state.profileIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProfileTask);\r\n    this.props.updateProfileTask(\r\n      this.state.profileIdentifier,\r\n      this.state.profileSequence,\r\n      UpdateProfileTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    const summaryLabel = () => {\r\n      if (this.state.taskType === \"skill\") {\r\n        return \"Competences:\";\r\n      } else if (this.state.taskType === \"educ\") {\r\n        return \"Organization:\";\r\n      }\r\n    };\r\n\r\n    const taskAlgorithm = () => {\r\n      if (this.state.taskType === \"skill\") {\r\n        return \"Skill\";\r\n      } else if (this.state.taskType === \"educ\") {\r\n        return \"Education\";\r\n      }\r\n    };\r\n\r\n    const fieldYear = () => {\r\n      if (this.state.taskType === \"skill\") {\r\n        return (\r\n          <div>\r\n            <h6>Total of Years:</h6>\r\n            <NumericInput\r\n              mobile\r\n              min={0}\r\n              max={50}\r\n              className=\"form-control\"\r\n              name=\"totalYears\"\r\n              onChange={this.onChangeText}\r\n              value={this.state.totalYears}\r\n            />\r\n          </div>\r\n        );\r\n      } else if (this.state.taskType === \"educ\") {\r\n        return <div />;\r\n      }\r\n    };\r\n\r\n    return <EducationForm errors={errors} />;\r\n  }\r\n}\r\n\r\nUpdateProfileTask.propTypes = {\r\n  getProfileTask: PropTypes.func.isRequired,\r\n  profile_task: PropTypes.object.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile_task: state.profileBacklog.profile_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileTask, updateProfileTask }\r\n)(UpdateProfileTask);\r\n"]},"metadata":{},"sourceType":"module"}