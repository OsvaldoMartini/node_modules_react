{"ast":null,"code":"import * as NavigationActions from '../NavigationActions';\nimport invariant from '../utils/invariant';\n\nvar getNavigationActionCreators = function getNavigationActionCreators(route) {\n  return {\n    goBack: function goBack(key) {\n      var actualizedKey = key;\n\n      if (key === undefined && route.key) {\n        invariant(typeof route.key === 'string', 'key should be a string');\n        actualizedKey = route.key;\n      }\n\n      return NavigationActions.back({\n        key: actualizedKey\n      });\n    },\n    navigate: function navigate(navigateTo, params, action) {\n      if (typeof navigateTo === 'string') {\n        return NavigationActions.navigate({\n          routeName: navigateTo,\n          params: params,\n          action: action\n        });\n      }\n\n      invariant(typeof navigateTo === 'object', 'Must navigateTo an object or a string');\n      invariant(params == null, 'Params must not be provided to .navigate() when specifying an object');\n      invariant(action == null, 'Child action must not be provided to .navigate() when specifying an object');\n      return NavigationActions.navigate(navigateTo);\n    },\n    setParams: function setParams(params) {\n      invariant(route.key && typeof route.key === 'string', 'setParams cannot be called by root navigator');\n      return NavigationActions.setParams({\n        params: params,\n        key: route.key\n      });\n    }\n  };\n};\n\nexport default getNavigationActionCreators;","map":null,"metadata":{},"sourceType":"module"}