{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const login = LoginRequest => async dispatch => {\n  // post => Login Request\n  // extract token from res.data\n  // store the token in the localstorage\n  // set our token in header ***\n  // decode token onn React\n  // dispatch to our securityReducer\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest); // extract token from res.data\n\n    const token = res.data.token; // store the token in the localStorage\n\n    localStorage.setItem(\"jwtToken\", token); // set our token in header ***\n\n    setJWTToken(token); // decode token on React\n\n    const decoded = jwt_decode(token);\n    console.log(decoded); // dispatch to our securityReducer\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\actions\\securityActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","setJWTToken","jwt_decode","createNewUser","newUser","history","dispatch","post","push","type","payload","err","response","data","login","LoginRequest","res","token","localStorage","setItem","decoded","console","log","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,MAAMC,QAAN,IAAkB;AACnE,MAAI;AACF,UAAMR,KAAK,CAACS,IAAN,CAAW,qBAAX,EAAkCH,OAAlC,CAAN;AACAC,IAAAA,OAAO,CAACG,IAAR,CAAa,QAAb;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,UADC;AAEPW,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,UADC;AAEPW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMC,KAAK,GAAGC,YAAY,IAAI,MAAMT,QAAN,IAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AAEA,MAAI;AACF;AACA,UAAMU,GAAG,GAAG,MAAMlB,KAAK,CAACS,IAAN,CAAW,kBAAX,EAA+BQ,YAA/B,CAAlB,CAFE,CAGF;;AAHE,UAIME,KAJN,GAIgBD,GAAG,CAACH,IAJpB,CAIMI,KAJN,EAKF;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EANE,CAOF;;AACAhB,IAAAA,WAAW,CAACgB,KAAD,CAAX,CARE,CASF;;AACA,UAAMG,OAAO,GAAGlB,UAAU,CAACe,KAAD,CAA1B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAXE,CAYF;;AACAd,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,gBADC;AAEPU,MAAAA,OAAO,EAAEU;AAFF,KAAD,CAAR;AAID,GAjBD,CAiBE,OAAOT,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,UADC;AAEPW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CA/BM;AAiCP,OAAO,MAAMU,MAAM,GAAG,MAAMjB,QAAQ,IAAI;AACtCY,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACAvB,EAAAA,WAAW,CAAC,KAAD,CAAX;AACAK,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAET,gBADC;AAEPU,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAID,CAPM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  // post => Login Request\r\n  // extract token from res.data\r\n  // store the token in the localstorage\r\n  // set our token in header ***\r\n  // decode token onn React\r\n  // dispatch to our securityReducer\r\n\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    console.log(decoded);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}