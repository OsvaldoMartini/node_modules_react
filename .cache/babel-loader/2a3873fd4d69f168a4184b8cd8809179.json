{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\CVBoard\\\\ProfileTasks\\\\AddProfileTask.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProfileTask } from \"../../../actions/profileBacklogActions\";\nimport { getProfileByLink } from \"../../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport NumericInput from \"react-numeric-input\";\nimport EducationForm from \"./TasksForms/EducationForm\";\n\nclass AddProfileTask extends Component {\n  constructor(props) {\n    super(props);\n    const _this$props$match$par = this.props.match.params,\n          id = _this$props$match$par.id,\n          taskType = _this$props$match$par.taskType;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      taskType: taskType,\n      priority: 0,\n      dueDate: \"\",\n      profileIdentifier: id,\n      totalYears: 0,\n      profile: {},\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {} //const { id } = this.props.match.params;\n  //this.props.getProfileByLink(id, this.props.history);\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.errors) {\n  //     this.setState({ errors: nextProps.errors });\n  //   }\n  //   if (nextProps.profile) {\n  //     this.setState({ profile: nextProps.profile });\n  //   }\n  // }\n\n\n  componentWillReceiveProps(nextProps) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    if (nextProps.summary !== this.state.summary) {\n      this.setState({\n        summary: nextProps.summary\n      });\n    }\n\n    console.log(this.state.summary);\n  } // on change\n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onChangeText(value) {\n    // if (/^\\d+$/.test(e.toString())) {\n    //   this.setState({ totalYears: e });\n    // }\n    if (value) {\n      if (!/^[0-9]+$/.test(value.toString())) {\n        this.setState({\n          totalYears: \"\"\n        });\n      } else {\n        this.setState({\n          totalYears: value.toString()\n        });\n      }\n    }\n  } //on submit\n\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    const _this$props$match$par2 = this.props.match.params,\n          id = _this$props$match$par2.id,\n          taskType = _this$props$match$par2.taskType;\n    const errors = this.state.errors;\n    let TaskContent;\n\n    const taskAlgorithm = (errors, taskType) => {\n      if (taskType === \"skill\") {\n        if (errors.summary) {\n          errors.summary = \"Please fill the field: \\\"Competences\\\"\";\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"\\\"Add Skills\\\"\");\n      } else if (taskType === \"educ\") {\n        if (errors.summary) {\n          errors.summary = \"Please fill the field: \\\"Education\\\"\";\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"\\\"Add Education\\\"\");\n      }\n    };\n\n    TaskContent = taskAlgorithm(errors, taskType);\n\n    const taskComponent = (errors, taskType) => {\n      if (taskType === \"skill\") {\n        if (errors.summary) {\n          errors.summary = \"Please fill the field: \\\"Competences\\\"\";\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"\\\"Add Skills\\\"\");\n      } else if (taskType === \"educ\") {\n        if (errors.summary) {\n          errors.summary = \"Please fill the field: \\\"Education\\\"\";\n        }\n\n        return React.createElement(EducationForm, {\n          typeForm: \"Add\",\n          taskType: taskType,\n          history: this.props.history,\n          profileIdentifier: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      }\n    };\n\n    return {\n      taskComponent\n    }; // return (\n    //   <div className=\"add-PBI\">\n    //     <div className=\"container\">\n    //       <div className=\"row\">\n    //         <div className=\"col-md-8 m-auto\">\n    //           <Link to={`/editcv/${id}`} className=\"btn btn-light\">\n    //             Back to Edit CV\n    //           </Link>\n    //           <h4 className=\"display-4 text-center\">{TaskContent}</h4>\n    //           <p className=\"lead text-center\">\n    //             Profile Identifier: {this.state.profileIdentifier}{\" \"}\n    //           </p>\n    //           <form onSubmit={this.onSubmit}>\n    //             <h6>Competences:</h6>\n    //             <div className=\"form-group\">\n    //               <input\n    //                 type=\"text\"\n    //                 className={classnames(\"form-control form-control-lg\", {\n    //                   \"is-invalid\": errors.summary\n    //                 })}\n    //                 name=\"summary\"\n    //                 placeholder=\"Example: Object Oriented Analysis\"\n    //                 value={this.state.summary}\n    //                 onChange={this.onChange}\n    //               />\n    //               {errors.summary && (\n    //                 <div className=\"invalid-feedback\">{errors.summary}</div>\n    //               )}\n    //             </div>\n    //             {errors.totalYears && (\n    //               <div className=\"invalid-feedback\">{errors.totalYears}</div>\n    //             )}\n    //             <h6>Total of Years:</h6>\n    //             <div>\n    //               <NumericInput\n    //                 mobile\n    //                 min={0}\n    //                 max={50}\n    //                 className={classnames(\"form-control form-control-lg\", {\n    //                   \"is-invalid\": errors.totalYears\n    //                 })}\n    //                 name=\"totalYears\"\n    //                 onChange={this.onChangeText}\n    //                 value={this.state.totalYears}\n    //               />\n    //               {errors.totalYears && (\n    //                 <div\n    //                   style={{\n    //                     width: \"100%\",\n    //                     marginTop: \".25rem\",\n    //                     fontSize: \"80%\",\n    //                     color: \"#dc3545\"\n    //                   }}\n    //                 >\n    //                   {errors.totalYears}\n    //                 </div>\n    //               )}\n    //             </div>\n    //             <input\n    //               type=\"submit\"\n    //               className=\"btn btn-primary btn-block mt-4\"\n    //             />\n    //           </form>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   </div>\n    // );\n  }\n\n}\n\nAddProfileTask.propTypes = {\n  addProfileTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  profile: state.profile.profile\n});\n\nexport default connect(mapStateToProps, {\n  addProfileTask\n})(AddProfileTask);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\CVBoard\\ProfileTasks\\AddProfileTask.js"],"names":["React","Component","Link","connect","classnames","addProfileTask","getProfileByLink","PropTypes","NumericInput","EducationForm","AddProfileTask","constructor","props","match","params","id","taskType","state","summary","acceptanceCriteria","priority","dueDate","profileIdentifier","totalYears","profile","errors","onChange","bind","onChangeText","onSubmit","componentDidMount","componentWillReceiveProps","nextProps","setState","console","log","e","target","name","value","test","toString","preventDefault","render","TaskContent","taskAlgorithm","taskComponent","history","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProfileTask } from \"../../../actions/profileBacklogActions\";\r\nimport { getProfileByLink } from \"../../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport EducationForm from \"./TasksForms/EducationForm\";\r\n\r\nclass AddProfileTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id, taskType } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      taskType: taskType,\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      profileIdentifier: id,\r\n      totalYears: 0,\r\n      profile: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //const { id } = this.props.match.params;\r\n    //this.props.getProfileByLink(id, this.props.history);\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({ errors: nextProps.errors });\r\n  //   }\r\n  //   if (nextProps.profile) {\r\n  //     this.setState({ profile: nextProps.profile });\r\n  //   }\r\n  // }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // You don't have to do this check first, but it can help prevent an unneeded render\r\n    if (nextProps.summary !== this.state.summary) {\r\n      this.setState({ summary: nextProps.summary });\r\n    }\r\n    console.log(this.state.summary);\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ totalYears: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ totalYears: \"\" });\r\n      } else {\r\n        this.setState({ totalYears: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const { id, taskType } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    let TaskContent;\r\n\r\n    const taskAlgorithm = (errors, taskType) => {\r\n      if (taskType === \"skill\") {\r\n        if (errors.summary) {\r\n          errors.summary = `Please fill the field: \"Competences\"`;\r\n        }\r\n\r\n        return <div>\"Add Skills\"</div>;\r\n      } else if (taskType === \"educ\") {\r\n        if (errors.summary) {\r\n          errors.summary = `Please fill the field: \"Education\"`;\r\n        }\r\n        return <div>\"Add Education\"</div>;\r\n      }\r\n    };\r\n\r\n    TaskContent = taskAlgorithm(errors, taskType);\r\n\r\n    const taskComponent = (errors, taskType) => {\r\n      if (taskType === \"skill\") {\r\n        if (errors.summary) {\r\n          errors.summary = `Please fill the field: \"Competences\"`;\r\n        }\r\n\r\n        return <div>\"Add Skills\"</div>;\r\n      } else if (taskType === \"educ\") {\r\n        if (errors.summary) {\r\n          errors.summary = `Please fill the field: \"Education\"`;\r\n        }\r\n        return (\r\n          <EducationForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return { taskComponent };\r\n\r\n    // return (\r\n    //   <div className=\"add-PBI\">\r\n    //     <div className=\"container\">\r\n    //       <div className=\"row\">\r\n    //         <div className=\"col-md-8 m-auto\">\r\n    //           <Link to={`/editcv/${id}`} className=\"btn btn-light\">\r\n    //             Back to Edit CV\r\n    //           </Link>\r\n    //           <h4 className=\"display-4 text-center\">{TaskContent}</h4>\r\n    //           <p className=\"lead text-center\">\r\n    //             Profile Identifier: {this.state.profileIdentifier}{\" \"}\r\n    //           </p>\r\n    //           <form onSubmit={this.onSubmit}>\r\n    //             <h6>Competences:</h6>\r\n    //             <div className=\"form-group\">\r\n    //               <input\r\n    //                 type=\"text\"\r\n    //                 className={classnames(\"form-control form-control-lg\", {\r\n    //                   \"is-invalid\": errors.summary\r\n    //                 })}\r\n    //                 name=\"summary\"\r\n    //                 placeholder=\"Example: Object Oriented Analysis\"\r\n    //                 value={this.state.summary}\r\n    //                 onChange={this.onChange}\r\n    //               />\r\n    //               {errors.summary && (\r\n    //                 <div className=\"invalid-feedback\">{errors.summary}</div>\r\n    //               )}\r\n    //             </div>\r\n    //             {errors.totalYears && (\r\n    //               <div className=\"invalid-feedback\">{errors.totalYears}</div>\r\n    //             )}\r\n    //             <h6>Total of Years:</h6>\r\n    //             <div>\r\n    //               <NumericInput\r\n    //                 mobile\r\n    //                 min={0}\r\n    //                 max={50}\r\n    //                 className={classnames(\"form-control form-control-lg\", {\r\n    //                   \"is-invalid\": errors.totalYears\r\n    //                 })}\r\n    //                 name=\"totalYears\"\r\n    //                 onChange={this.onChangeText}\r\n    //                 value={this.state.totalYears}\r\n    //               />\r\n    //               {errors.totalYears && (\r\n    //                 <div\r\n    //                   style={{\r\n    //                     width: \"100%\",\r\n    //                     marginTop: \".25rem\",\r\n    //                     fontSize: \"80%\",\r\n    //                     color: \"#dc3545\"\r\n    //                   }}\r\n    //                 >\r\n    //                   {errors.totalYears}\r\n    //                 </div>\r\n    //               )}\r\n    //             </div>\r\n    //             <input\r\n    //               type=\"submit\"\r\n    //               className=\"btn btn-primary btn-block mt-4\"\r\n    //             />\r\n    //           </form>\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\nAddProfileTask.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  profile: state.profile.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask }\r\n)(AddProfileTask);\r\n"]},"metadata":{},"sourceType":"module"}