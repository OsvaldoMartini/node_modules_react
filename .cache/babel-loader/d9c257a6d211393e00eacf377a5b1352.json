{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\PPMTool-React-Client\\\\src\\\\components\\\\UserManagement\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { createNewUser, login } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n      user: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors && newProps.errors !== this.props.errors) {\n      setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const userNextProps = nextProps.security.userNextProps;\n\n    if (userNextProps && newProps.security.user !== this.props.user) {\n      this.props.login(user, this.props.history);\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Create your Account\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.fullName\n      }),\n      placeholder: \"Full Name\",\n      name: \"fullName\",\n      value: this.state.fullName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), errors.fullName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, errors.fullName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.username\n      }),\n      placeholder: \"Email Address (Username)\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), errors.username && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, errors.username)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.password\n      }),\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), errors.password && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.confirmPassword\n      }),\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), errors.confirmPassword && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, errors.confirmPassword)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create\",\n      className: \"btn btn-info btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(mapStateToProps, {\n  createNewUser,\n  login\n})(Register);","map":{"version":3,"sources":["D:\\Projetos\\PPMTool-React-Client\\src\\components\\UserManagement\\Register.js"],"names":["React","Component","createNewUser","login","PropTypes","connect","classnames","Register","constructor","state","username","fullName","password","confirmPassword","errors","user","onChange","bind","onSubmit","componentDidMount","props","security","validToken","history","push","componentWillReceiveProps","nextProps","newProps","setState","userNextProps","e","preventDefault","newUser","target","name","value","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { createNewUser, login } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n      user: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors && newProps.errors !== this.props.errors) {\r\n      setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const { userNextProps } = nextProps.security;\r\n    if (userNextProps && newProps.security.user !== this.props.user) {\r\n      this.props.login(user, this.props.history);\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Create\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser, login }\r\n)(Register);\r\n"]},"metadata":{},"sourceType":"module"}